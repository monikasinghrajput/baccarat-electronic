/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunktykhe_electron_apps_baccarat"] = self["webpackChunktykhe_electron_apps_baccarat"] || []).push([["src_renderer_baccarat_player_views_GameBoard_GameBoard_js"],{

/***/ "./src/renderer/baccarat/player/components/BeadRoad/index.js":
/*!*******************************************************************!*\
  !*** ./src/renderer/baccarat/player/components/BeadRoad/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../tykhe/bootstrap */ \"./src/renderer/baccarat/tykhe/bootstrap/index.js\");\n/* harmony import */ var _tykhe_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../tykhe/components */ \"./src/renderer/baccarat/tykhe/components/index.js\");\n/* harmony import */ var _contexts_preview__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../contexts/preview */ \"./src/renderer/baccarat/player/contexts/preview.js\");\n/* harmony import */ var _store_selectors_roads__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../store/selectors/roads */ \"./src/renderer/baccarat/player/store/selectors/roads.js\");\n/* harmony import */ var _constants_strings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../constants/strings */ \"./src/renderer/baccarat/player/constants/strings.js\");\n\n\n\n\n\n\nconst {\n  gameIdSelector\n} = _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_1__.selectors;\nconst mstp = (state, {\n  gridCellSpan = 1,\n  ...props\n}) => ({\n  road: (0,_store_selectors_roads__WEBPACK_IMPORTED_MODULE_4__.beadRoadSelector)(state),\n  previews: (0,_store_selectors_roads__WEBPACK_IMPORTED_MODULE_4__.roadsPreviewsSelector)(state),\n  gameId: gameIdSelector(state),\n  gridCellSpan,\n  PreviewContext: _contexts_preview__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n  ...props,\n  role: _constants_strings__WEBPACK_IMPORTED_MODULE_5__.BEAD,\n  'data-e2e': 'bead-road'\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_redux__WEBPACK_IMPORTED_MODULE_0__.connect)(mstp)(_tykhe_components__WEBPACK_IMPORTED_MODULE_2__.SvgRoadComponent));\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/components/BeadRoad/index.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/components/BigEyeRoad/index.js":
/*!*********************************************************************!*\
  !*** ./src/renderer/baccarat/player/components/BigEyeRoad/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../tykhe/bootstrap */ \"./src/renderer/baccarat/tykhe/bootstrap/index.js\");\n/* harmony import */ var _tykhe_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../tykhe/components */ \"./src/renderer/baccarat/tykhe/components/index.js\");\n/* harmony import */ var _contexts_preview__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../contexts/preview */ \"./src/renderer/baccarat/player/contexts/preview.js\");\n/* harmony import */ var _store_selectors_roads__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../store/selectors/roads */ \"./src/renderer/baccarat/player/store/selectors/roads.js\");\n/* harmony import */ var _constants_strings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../constants/strings */ \"./src/renderer/baccarat/player/constants/strings.js\");\n\n\n\n\n\n\nconst {\n  gameIdSelector\n} = _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_1__.selectors;\nconst mstp = (state, {\n  gridCellSpan = 2,\n  ...props\n}) => ({\n  road: (0,_store_selectors_roads__WEBPACK_IMPORTED_MODULE_4__.bigEyeRoadSelector)(state),\n  previews: (0,_store_selectors_roads__WEBPACK_IMPORTED_MODULE_4__.roadsPreviewsSelector)(state),\n  gameId: gameIdSelector(state),\n  gridCellSpan,\n  PreviewContext: _contexts_preview__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n  ...props,\n  role: _constants_strings__WEBPACK_IMPORTED_MODULE_5__.BIG_EYE,\n  'data-e2e': 'big-eye-road'\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_redux__WEBPACK_IMPORTED_MODULE_0__.connect)(mstp)(_tykhe_components__WEBPACK_IMPORTED_MODULE_2__.SvgRoadComponent));\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/components/BigEyeRoad/index.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/components/BigRoad/index.js":
/*!******************************************************************!*\
  !*** ./src/renderer/baccarat/player/components/BigRoad/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../tykhe/bootstrap */ \"./src/renderer/baccarat/tykhe/bootstrap/index.js\");\n/* harmony import */ var _tykhe_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../tykhe/components */ \"./src/renderer/baccarat/tykhe/components/index.js\");\n/* harmony import */ var _contexts_preview__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../contexts/preview */ \"./src/renderer/baccarat/player/contexts/preview.js\");\n/* harmony import */ var _store_selectors_roads__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../store/selectors/roads */ \"./src/renderer/baccarat/player/store/selectors/roads.js\");\n/* harmony import */ var _constants_strings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../constants/strings */ \"./src/renderer/baccarat/player/constants/strings.js\");\n\n\n\n\n\n\nconst {\n  gameIdSelector\n} = _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_1__.selectors;\nconst mstp = (state, {\n  gridCellSpan = 1,\n  ...props\n}) => ({\n  road: (0,_store_selectors_roads__WEBPACK_IMPORTED_MODULE_4__.bigRoadSelector)(state),\n  previews: (0,_store_selectors_roads__WEBPACK_IMPORTED_MODULE_4__.roadsPreviewsSelector)(state),\n  gameId: gameIdSelector(state),\n  gridCellSpan,\n  PreviewContext: _contexts_preview__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n  ...props,\n  role: _constants_strings__WEBPACK_IMPORTED_MODULE_5__.BIG,\n  'data-e2e': 'big-road'\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_redux__WEBPACK_IMPORTED_MODULE_0__.connect)(mstp)(_tykhe_components__WEBPACK_IMPORTED_MODULE_2__.SvgRoadComponent));\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/components/BigRoad/index.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/components/CockroachRoad/index.js":
/*!************************************************************************!*\
  !*** ./src/renderer/baccarat/player/components/CockroachRoad/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../tykhe/bootstrap */ \"./src/renderer/baccarat/tykhe/bootstrap/index.js\");\n/* harmony import */ var _tykhe_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../tykhe/components */ \"./src/renderer/baccarat/tykhe/components/index.js\");\n/* harmony import */ var _contexts_preview__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../contexts/preview */ \"./src/renderer/baccarat/player/contexts/preview.js\");\n/* harmony import */ var _store_selectors_roads__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../store/selectors/roads */ \"./src/renderer/baccarat/player/store/selectors/roads.js\");\n/* harmony import */ var _constants_strings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../constants/strings */ \"./src/renderer/baccarat/player/constants/strings.js\");\n\n\n\n\n\n\nconst {\n  gameIdSelector\n} = _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_1__.selectors;\nconst mstp = (state, {\n  gridCellSpan = 2,\n  ...props\n}) => ({\n  road: (0,_store_selectors_roads__WEBPACK_IMPORTED_MODULE_4__.cockroachRoadSelector)(state),\n  previews: (0,_store_selectors_roads__WEBPACK_IMPORTED_MODULE_4__.roadsPreviewsSelector)(state),\n  gameId: gameIdSelector(state),\n  gridCellSpan,\n  PreviewContext: _contexts_preview__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n  ...props,\n  role: _constants_strings__WEBPACK_IMPORTED_MODULE_5__.COCKROACH,\n  'data-e2e': 'cockroach-road'\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_redux__WEBPACK_IMPORTED_MODULE_0__.connect)(mstp)(_tykhe_components__WEBPACK_IMPORTED_MODULE_2__.SvgRoadComponent));\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/components/CockroachRoad/index.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/components/Grid/components/BetLabel/index.js":
/*!***********************************************************************************!*\
  !*** ./src/renderer/baccarat/player/components/Grid/components/BetLabel/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./style */ \"./src/renderer/baccarat/player/components/Grid/components/BetLabel/style.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\n\n\n\nconst BetLabel = ({\n  children,\n  ...rest\n}) => (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_style__WEBPACK_IMPORTED_MODULE_1__.Label, {\n  ...rest,\n  children: (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", {\n    children: children\n  })\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BetLabel);\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/components/Grid/components/BetLabel/index.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/components/Grid/components/BetLabel/style.js":
/*!***********************************************************************************!*\
  !*** ./src/renderer/baccarat/player/components/Grid/components/BetLabel/style.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Label: () => (/* binding */ Label)\n/* harmony export */ });\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled/base */ \"./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js\");\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\nconst Label = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"foreignObject\",  false ? 0 : {\n  target: \"e1lv1k6h0\",\n  label: \"Label\"\n})( false ? 0 : {\n  name: \"coh2hw\",\n  styles: \"text-overflow:ellipsis;white-space:nowrap;color:#fff;font-family:Roboto;font-weight:normal;font-size:11px;span{height:100%;}\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcY29tcG9uZW50c1xcR3JpZFxcY29tcG9uZW50c1xcQmV0TGFiZWxcXHN0eWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUV5QyIsImZpbGUiOiJDOlxcVXNlcnNcXFR5a2hlXFxlbGVjdHJvbmFwcHNcXHR5a2hlLWVsZWN0cm9uLWFwcHMtYmFjY2FyYXRcXHNyY1xccmVuZGVyZXJcXGJhY2NhcmF0XFxwbGF5ZXJcXGNvbXBvbmVudHNcXEdyaWRcXGNvbXBvbmVudHNcXEJldExhYmVsXFxzdHlsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcblxuZXhwb3J0IGNvbnN0IExhYmVsID0gc3R5bGVkLmZvcmVpZ25PYmplY3RgXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC1mYW1pbHk6IFJvYm90bztcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAxMXB4O1xuXG4gIHNwYW4ge1xuICAgIGhlaWdodDogMTAwJTtcbiAgfVxuYDtcbiJdfQ== */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/components/Grid/components/BetLabel/style.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/components/RoadPreview/index.js":
/*!**********************************************************************!*\
  !*** ./src/renderer/baccarat/player/components/RoadPreview/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var ramda__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ramda */ \"./node_modules/ramda/es/isNil.js\");\n/* harmony import */ var ramda__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ramda */ \"./node_modules/ramda/es/applySpec.js\");\n/* harmony import */ var _tykhe_primitives__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../tykhe/primitives */ \"./src/renderer/baccarat/tykhe/primitives/index.js\");\n/* harmony import */ var _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../tykhe/bootstrap */ \"./src/renderer/baccarat/tykhe/bootstrap/index.js\");\n/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./style */ \"./src/renderer/baccarat/player/components/RoadPreview/style.js\");\n/* harmony import */ var _assets_icons_circle_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../assets/icons/circle.svg */ \"./src/renderer/baccarat/player/assets/icons/circle.svg\");\n/* harmony import */ var _assets_icons_circle_svg__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_assets_icons_circle_svg__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _assets_icons_ring_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../assets/icons/ring.svg */ \"./src/renderer/baccarat/player/assets/icons/ring.svg\");\n/* harmony import */ var _assets_icons_ring_svg__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_assets_icons_ring_svg__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _assets_icons_slash_svg__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../assets/icons/slash.svg */ \"./src/renderer/baccarat/player/assets/icons/slash.svg\");\n/* harmony import */ var _assets_icons_slash_svg__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_assets_icons_slash_svg__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _constants_colors__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../constants/colors */ \"./src/renderer/baccarat/player/constants/colors.js\");\n/* harmony import */ var _constants_strings__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../constants/strings */ \"./src/renderer/baccarat/player/constants/strings.js\");\n/* harmony import */ var _store_selectors_roads__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../store/selectors/roads */ \"./src/renderer/baccarat/player/store/selectors/roads.js\");\n/* harmony import */ var _contexts_preview__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../contexts/preview */ \"./src/renderer/baccarat/player/contexts/preview.js\");\n/* harmony import */ var _uiConfig__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../uiConfig */ \"./src/renderer/baccarat/player/uiConfig.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst {\n  COLORS: {\n    PLAYER_COLOR,\n    BANKER_COLOR\n  },\n  SIGNS: {\n    PLAYER_SIGN,\n    BANKER_SIGN\n  },\n  ICONS: {\n    PLAYER_ICON,\n    BANKER_ICON\n  }\n} = _uiConfig__WEBPACK_IMPORTED_MODULE_12__.UI_CONFIG;\nfunction getIconColor(item) {\n  if (!item) return _constants_colors__WEBPACK_IMPORTED_MODULE_8__.NEUTRAL_COLOR;\n  return item.WinningHand === _constants_strings__WEBPACK_IMPORTED_MODULE_9__.PLAYER ? PLAYER_COLOR : BANKER_COLOR;\n}\nfunction RoadPreview({\n  previews,\n  iconSize,\n  children,\n  ...props\n}) {\n  const {\n    askPBTooltip\n  } = (0,_tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_3__.useIntl)({\n    keys: {\n      askPBTooltip: 'baccarat_ui.ask_pb_tooltip'\n    }\n  });\n  return (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__.jsx)(_contexts_preview__WEBPACK_IMPORTED_MODULE_11__.Consumer, {\n    children: ({\n      toggle\n    }) => {\n      function togglePlayer() {\n        toggle(_constants_strings__WEBPACK_IMPORTED_MODULE_9__.PLAYER);\n      }\n      function toggleBanker() {\n        toggle(_constants_strings__WEBPACK_IMPORTED_MODULE_9__.BANKER);\n      }\n      function toggleNull() {\n        toggle(null);\n      }\n      const colors = {\n        [_constants_strings__WEBPACK_IMPORTED_MODULE_9__.PLAYER]: {\n          [_constants_strings__WEBPACK_IMPORTED_MODULE_9__.BIG_EYE]: getIconColor(previews[_constants_strings__WEBPACK_IMPORTED_MODULE_9__.PLAYER][_constants_strings__WEBPACK_IMPORTED_MODULE_9__.BIG_EYE]),\n          [_constants_strings__WEBPACK_IMPORTED_MODULE_9__.SMALL]: getIconColor(previews[_constants_strings__WEBPACK_IMPORTED_MODULE_9__.PLAYER][_constants_strings__WEBPACK_IMPORTED_MODULE_9__.SMALL]),\n          [_constants_strings__WEBPACK_IMPORTED_MODULE_9__.COCKROACH]: getIconColor(previews[_constants_strings__WEBPACK_IMPORTED_MODULE_9__.PLAYER][_constants_strings__WEBPACK_IMPORTED_MODULE_9__.COCKROACH])\n        },\n        [_constants_strings__WEBPACK_IMPORTED_MODULE_9__.BANKER]: {\n          [_constants_strings__WEBPACK_IMPORTED_MODULE_9__.BIG_EYE]: getIconColor(previews[_constants_strings__WEBPACK_IMPORTED_MODULE_9__.BANKER][_constants_strings__WEBPACK_IMPORTED_MODULE_9__.BIG_EYE]),\n          [_constants_strings__WEBPACK_IMPORTED_MODULE_9__.SMALL]: getIconColor(previews[_constants_strings__WEBPACK_IMPORTED_MODULE_9__.BANKER][_constants_strings__WEBPACK_IMPORTED_MODULE_9__.SMALL]),\n          [_constants_strings__WEBPACK_IMPORTED_MODULE_9__.COCKROACH]: getIconColor(previews[_constants_strings__WEBPACK_IMPORTED_MODULE_9__.BANKER][_constants_strings__WEBPACK_IMPORTED_MODULE_9__.COCKROACH])\n        }\n      };\n      return children ? children({\n        colors,\n        togglePlayer,\n        toggleBanker,\n        toggleNull\n      }) : (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__.jsx)(_tykhe_primitives__WEBPACK_IMPORTED_MODULE_2__.Tooltip, {\n        tooltip: askPBTooltip,\n        yOffset: -30,\n        align: \"top\",\n        children: ({\n          onMouseEnter,\n          onMouseLeave,\n          targetRef\n        }) => (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__.jsxs)(_style__WEBPACK_IMPORTED_MODULE_4__.Container, {\n          ...props,\n          onMouseLeave: () => {\n            toggleNull();\n            onMouseLeave();\n          },\n          onMouseEnter: onMouseEnter,\n          innerRef: targetRef,\n          \"data-e2e\": \"ask-pb\",\n          children: [(0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__.jsxs)(_style__WEBPACK_IMPORTED_MODULE_4__.Column, {\n            id: \"ask-player\",\n            onClick: togglePlayer,\n            children: [(0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__.jsx)(_style__WEBPACK_IMPORTED_MODULE_4__.PlayerPreviewButton, {\n              \"data-e2e\": \"ask-pb-player-preview-toggle\",\n              children: (0,ramda__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(PLAYER_ICON) ? PLAYER_SIGN : (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__.jsx)(_tykhe_primitives__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n                size: 16,\n                svg: PLAYER_ICON\n              })\n            }), (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__.jsx)(_style__WEBPACK_IMPORTED_MODULE_4__.GridItem, {\n              \"data-e2e\": \"ask-pb-big-eye-player\",\n              \"data-color\": (previews[_constants_strings__WEBPACK_IMPORTED_MODULE_9__.PLAYER][_constants_strings__WEBPACK_IMPORTED_MODULE_9__.BIG_EYE] || {}).WinningHand,\n              children: (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__.jsx)(_tykhe_primitives__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n                color: colors[_constants_strings__WEBPACK_IMPORTED_MODULE_9__.PLAYER][_constants_strings__WEBPACK_IMPORTED_MODULE_9__.BIG_EYE],\n                svg: (_assets_icons_ring_svg__WEBPACK_IMPORTED_MODULE_6___default()),\n                size: iconSize\n              })\n            }), (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__.jsx)(_style__WEBPACK_IMPORTED_MODULE_4__.GridItem, {\n              \"data-e2e\": \"ask-pb-small-player\",\n              \"data-color\": (previews[_constants_strings__WEBPACK_IMPORTED_MODULE_9__.PLAYER][_constants_strings__WEBPACK_IMPORTED_MODULE_9__.SMALL] || {}).WinningHand,\n              children: (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__.jsx)(_tykhe_primitives__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n                color: colors[_constants_strings__WEBPACK_IMPORTED_MODULE_9__.PLAYER][_constants_strings__WEBPACK_IMPORTED_MODULE_9__.SMALL],\n                svg: (_assets_icons_circle_svg__WEBPACK_IMPORTED_MODULE_5___default()),\n                size: iconSize\n              })\n            }), (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__.jsx)(_style__WEBPACK_IMPORTED_MODULE_4__.GridItem, {\n              \"data-e2e\": \"ask-pb-cockroach-player\",\n              \"data-color\": (previews[_constants_strings__WEBPACK_IMPORTED_MODULE_9__.PLAYER][_constants_strings__WEBPACK_IMPORTED_MODULE_9__.COCKROACH] || {}).WinningHand,\n              children: (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__.jsx)(_tykhe_primitives__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n                color: colors[_constants_strings__WEBPACK_IMPORTED_MODULE_9__.PLAYER][_constants_strings__WEBPACK_IMPORTED_MODULE_9__.COCKROACH],\n                svg: (_assets_icons_slash_svg__WEBPACK_IMPORTED_MODULE_7___default()),\n                size: iconSize\n              })\n            })]\n          }), (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__.jsxs)(_style__WEBPACK_IMPORTED_MODULE_4__.Column, {\n            id: \"ask-banker\",\n            onClick: toggleBanker,\n            children: [(0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__.jsx)(_style__WEBPACK_IMPORTED_MODULE_4__.BankerPreviewButton, {\n              \"data-e2e\": \"ask-pb-banker-preview-toggle\",\n              children: (0,ramda__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(BANKER_ICON) ? BANKER_SIGN : (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__.jsx)(_tykhe_primitives__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n                size: 16,\n                svg: BANKER_ICON\n              })\n            }), (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__.jsx)(_style__WEBPACK_IMPORTED_MODULE_4__.GridItem, {\n              \"data-e2e\": \"ask-pb-big-eye-banker\",\n              \"data-color\": (previews[_constants_strings__WEBPACK_IMPORTED_MODULE_9__.BANKER][_constants_strings__WEBPACK_IMPORTED_MODULE_9__.BIG_EYE] || {}).WinningHand,\n              children: (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__.jsx)(_tykhe_primitives__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n                color: colors[_constants_strings__WEBPACK_IMPORTED_MODULE_9__.BANKER][_constants_strings__WEBPACK_IMPORTED_MODULE_9__.BIG_EYE],\n                svg: (_assets_icons_ring_svg__WEBPACK_IMPORTED_MODULE_6___default()),\n                size: iconSize\n              })\n            }), (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__.jsx)(_style__WEBPACK_IMPORTED_MODULE_4__.GridItem, {\n              \"data-e2e\": \"ask-pb-small-banker\",\n              \"data-color\": (previews[_constants_strings__WEBPACK_IMPORTED_MODULE_9__.BANKER][_constants_strings__WEBPACK_IMPORTED_MODULE_9__.SMALL] || {}).WinningHand,\n              children: (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__.jsx)(_tykhe_primitives__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n                color: colors[_constants_strings__WEBPACK_IMPORTED_MODULE_9__.BANKER][_constants_strings__WEBPACK_IMPORTED_MODULE_9__.SMALL],\n                svg: (_assets_icons_circle_svg__WEBPACK_IMPORTED_MODULE_5___default()),\n                size: iconSize\n              })\n            }), (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__.jsx)(_style__WEBPACK_IMPORTED_MODULE_4__.GridItem, {\n              \"data-e2e\": \"ask-pb-cockroach-banker\",\n              \"data-color\": (previews[_constants_strings__WEBPACK_IMPORTED_MODULE_9__.BANKER][_constants_strings__WEBPACK_IMPORTED_MODULE_9__.COCKROACH] || {}).WinningHand,\n              children: (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__.jsx)(_tykhe_primitives__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n                color: colors[_constants_strings__WEBPACK_IMPORTED_MODULE_9__.BANKER][_constants_strings__WEBPACK_IMPORTED_MODULE_9__.COCKROACH],\n                svg: (_assets_icons_slash_svg__WEBPACK_IMPORTED_MODULE_7___default()),\n                size: iconSize\n              })\n            })]\n          })]\n        })\n      });\n    }\n  });\n}\nRoadPreview.propTypes = {\n  previews: prop_types__WEBPACK_IMPORTED_MODULE_15__.object,\n  iconSize: prop_types__WEBPACK_IMPORTED_MODULE_15__.number\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_redux__WEBPACK_IMPORTED_MODULE_1__.connect)((0,ramda__WEBPACK_IMPORTED_MODULE_16__[\"default\"])({\n  previews: _store_selectors_roads__WEBPACK_IMPORTED_MODULE_10__.roadsPreviewsSelector\n}))(RoadPreview));\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/components/RoadPreview/index.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/components/RoadPreview/style.js":
/*!**********************************************************************!*\
  !*** ./src/renderer/baccarat/player/components/RoadPreview/style.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BankerPreviewButton: () => (/* binding */ BankerPreviewButton),\n/* harmony export */   Column: () => (/* binding */ Column),\n/* harmony export */   Container: () => (/* binding */ Container),\n/* harmony export */   GridItem: () => (/* binding */ GridItem),\n/* harmony export */   PlayerPreviewButton: () => (/* binding */ PlayerPreviewButton)\n/* harmony export */ });\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled/base */ \"./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js\");\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/css */ \"./node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../tykhe/bootstrap */ \"./src/renderer/baccarat/tykhe/bootstrap/index.js\");\n/* harmony import */ var tinycolor2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tinycolor2 */ \"./node_modules/tinycolor2/esm/tinycolor.js\");\n/* harmony import */ var _uiConfig__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../uiConfig */ \"./src/renderer/baccarat/player/uiConfig.js\");\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\n\n\n\nconst {\n  COLORS: {\n    PLAYER_COLOR,\n    BANKER_COLOR\n  }\n} = _uiConfig__WEBPACK_IMPORTED_MODULE_4__.UI_CONFIG;\nconst {\n  palette,\n  tints\n} = _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_2__.theme;\nconst BORDER_COLOR = (0,tinycolor2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(palette.foreground).setAlpha(tints.darker).toString();\nconst PLAYER_BACKGROUND_COLOR = (0,tinycolor2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(PLAYER_COLOR).setAlpha(0.8).toString();\nconst BANKER_BACKGROUND_COLOR = (0,tinycolor2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(BANKER_COLOR).setAlpha(0.8).toString();\nconst Container = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e11h4h7x4\",\n  label: \"Container\"\n})(\"height:100%;border:1px solid \", BORDER_COLOR, \";margin-right:4px;display:grid;grid-template-columns:repeat(2, 1fr);grid-auto-flow:column;flex:1;\" + ( false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcY29tcG9uZW50c1xcUm9hZFByZXZpZXdcXHN0eWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlCbUMiLCJmaWxlIjoiQzpcXFVzZXJzXFxUeWtoZVxcZWxlY3Ryb25hcHBzXFx0eWtoZS1lbGVjdHJvbi1hcHBzLWJhY2NhcmF0XFxzcmNcXHJlbmRlcmVyXFxiYWNjYXJhdFxccGxheWVyXFxjb21wb25lbnRzXFxSb2FkUHJldmlld1xcc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjc3MsIH0gZnJvbSAnQGVtb3Rpb24vY3NzJztcbmltcG9ydCB7IHRoZW1lLCB9IGZyb20gJy4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcCc7XG5pbXBvcnQgdGlueUNvbG9yIGZyb20gJ3Rpbnljb2xvcjInO1xuXG5pbXBvcnQgeyBVSV9DT05GSUcsIH0gZnJvbSAnLi4vLi4vdWlDb25maWcnO1xuXG5jb25zdCB7XG4gIENPTE9SUzogeyBQTEFZRVJfQ09MT1IsIEJBTktFUl9DT0xPUiwgfSxcbn0gPSBVSV9DT05GSUc7XG5cbmNvbnN0IHsgcGFsZXR0ZSwgdGludHMsIH0gPSB0aGVtZTtcblxuY29uc3QgQk9SREVSX0NPTE9SID0gdGlueUNvbG9yKHBhbGV0dGUuZm9yZWdyb3VuZClcbiAgLnNldEFscGhhKHRpbnRzLmRhcmtlcilcbiAgLnRvU3RyaW5nKCk7XG5cbmNvbnN0IFBMQVlFUl9CQUNLR1JPVU5EX0NPTE9SID0gdGlueUNvbG9yKFBMQVlFUl9DT0xPUilcbiAgLnNldEFscGhhKDAuOClcbiAgLnRvU3RyaW5nKCk7XG5cbmNvbnN0IEJBTktFUl9CQUNLR1JPVU5EX0NPTE9SID0gdGlueUNvbG9yKEJBTktFUl9DT0xPUilcbiAgLnNldEFscGhhKDAuOClcbiAgLnRvU3RyaW5nKCk7XG5cbmV4cG9ydCBjb25zdCBDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBoZWlnaHQ6IDEwMCU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7Qk9SREVSX0NPTE9SfTtcbiAgbWFyZ2luLXJpZ2h0OiA0cHg7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gIGdyaWQtYXV0by1mbG93OiBjb2x1bW47XG4gIGZsZXg6IDE7XG5gO1xuXG5leHBvcnQgY29uc3QgQ29sdW1uID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNCwgMWZyKTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuYDtcblxuZXhwb3J0IGNvbnN0IEdyaWRJdGVtID0gc3R5bGVkLmRpdmBcbiAgZm9udC1zaXplOiAxM3B4O1xuICBjb2xvcjogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAganVzdGlmeS1zZWxmOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5gO1xuXG5jb25zdCBwcmV2aWV3QnV0dG9uID0gY3NzYFxuICB3aWR0aDogY2FsYygxMDAlICsgMXB4KTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBjb2xvcjogI2ZmZjtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5gO1xuXG5jb25zdCBzdmdTY2FsZUNsYXNzTmFtZSA9IGNzc2BcbiAgc3ZnIHtcbiAgICB3aWR0aDogYXV0bztcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgyKTtcbiAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFBsYXllclByZXZpZXdCdXR0b24gPSBzdHlsZWQuZGl2YFxuICAke3ByZXZpZXdCdXR0b259O1xuICBiYWNrZ3JvdW5kOiAke1BMQVlFUl9CQUNLR1JPVU5EX0NPTE9SfTtcbiAgYm9yZGVyOiAzcHggc29saWQgJHtQTEFZRVJfQ09MT1J9O1xuICBsZWZ0OiAtMXB4O1xuICB0b3A6IC0xcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICAke3N2Z1NjYWxlQ2xhc3NOYW1lfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBCYW5rZXJQcmV2aWV3QnV0dG9uID0gc3R5bGVkLmRpdmBcbiAgJHtwcmV2aWV3QnV0dG9ufTtcbiAgYmFja2dyb3VuZDogJHtCQU5LRVJfQkFDS0dST1VORF9DT0xPUn07XG4gIGJvcmRlcjogM3B4IHNvbGlkICR7QkFOS0VSX0NPTE9SfTtcbiAgdG9wOiAtMXB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgJHtzdmdTY2FsZUNsYXNzTmFtZX07XG5gO1xuIl19 */\"));\nconst Column = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e11h4h7x3\",\n  label: \"Column\"\n})( false ? 0 : {\n  name: \"xdqkxa\",\n  styles: \"display:grid;grid-template-rows:repeat(4, 1fr);cursor:pointer\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcY29tcG9uZW50c1xcUm9hZFByZXZpZXdcXHN0eWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1DZ0MiLCJmaWxlIjoiQzpcXFVzZXJzXFxUeWtoZVxcZWxlY3Ryb25hcHBzXFx0eWtoZS1lbGVjdHJvbi1hcHBzLWJhY2NhcmF0XFxzcmNcXHJlbmRlcmVyXFxiYWNjYXJhdFxccGxheWVyXFxjb21wb25lbnRzXFxSb2FkUHJldmlld1xcc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjc3MsIH0gZnJvbSAnQGVtb3Rpb24vY3NzJztcbmltcG9ydCB7IHRoZW1lLCB9IGZyb20gJy4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcCc7XG5pbXBvcnQgdGlueUNvbG9yIGZyb20gJ3Rpbnljb2xvcjInO1xuXG5pbXBvcnQgeyBVSV9DT05GSUcsIH0gZnJvbSAnLi4vLi4vdWlDb25maWcnO1xuXG5jb25zdCB7XG4gIENPTE9SUzogeyBQTEFZRVJfQ09MT1IsIEJBTktFUl9DT0xPUiwgfSxcbn0gPSBVSV9DT05GSUc7XG5cbmNvbnN0IHsgcGFsZXR0ZSwgdGludHMsIH0gPSB0aGVtZTtcblxuY29uc3QgQk9SREVSX0NPTE9SID0gdGlueUNvbG9yKHBhbGV0dGUuZm9yZWdyb3VuZClcbiAgLnNldEFscGhhKHRpbnRzLmRhcmtlcilcbiAgLnRvU3RyaW5nKCk7XG5cbmNvbnN0IFBMQVlFUl9CQUNLR1JPVU5EX0NPTE9SID0gdGlueUNvbG9yKFBMQVlFUl9DT0xPUilcbiAgLnNldEFscGhhKDAuOClcbiAgLnRvU3RyaW5nKCk7XG5cbmNvbnN0IEJBTktFUl9CQUNLR1JPVU5EX0NPTE9SID0gdGlueUNvbG9yKEJBTktFUl9DT0xPUilcbiAgLnNldEFscGhhKDAuOClcbiAgLnRvU3RyaW5nKCk7XG5cbmV4cG9ydCBjb25zdCBDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBoZWlnaHQ6IDEwMCU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7Qk9SREVSX0NPTE9SfTtcbiAgbWFyZ2luLXJpZ2h0OiA0cHg7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gIGdyaWQtYXV0by1mbG93OiBjb2x1bW47XG4gIGZsZXg6IDE7XG5gO1xuXG5leHBvcnQgY29uc3QgQ29sdW1uID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNCwgMWZyKTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuYDtcblxuZXhwb3J0IGNvbnN0IEdyaWRJdGVtID0gc3R5bGVkLmRpdmBcbiAgZm9udC1zaXplOiAxM3B4O1xuICBjb2xvcjogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAganVzdGlmeS1zZWxmOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5gO1xuXG5jb25zdCBwcmV2aWV3QnV0dG9uID0gY3NzYFxuICB3aWR0aDogY2FsYygxMDAlICsgMXB4KTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBjb2xvcjogI2ZmZjtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5gO1xuXG5jb25zdCBzdmdTY2FsZUNsYXNzTmFtZSA9IGNzc2BcbiAgc3ZnIHtcbiAgICB3aWR0aDogYXV0bztcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgyKTtcbiAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFBsYXllclByZXZpZXdCdXR0b24gPSBzdHlsZWQuZGl2YFxuICAke3ByZXZpZXdCdXR0b259O1xuICBiYWNrZ3JvdW5kOiAke1BMQVlFUl9CQUNLR1JPVU5EX0NPTE9SfTtcbiAgYm9yZGVyOiAzcHggc29saWQgJHtQTEFZRVJfQ09MT1J9O1xuICBsZWZ0OiAtMXB4O1xuICB0b3A6IC0xcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICAke3N2Z1NjYWxlQ2xhc3NOYW1lfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBCYW5rZXJQcmV2aWV3QnV0dG9uID0gc3R5bGVkLmRpdmBcbiAgJHtwcmV2aWV3QnV0dG9ufTtcbiAgYmFja2dyb3VuZDogJHtCQU5LRVJfQkFDS0dST1VORF9DT0xPUn07XG4gIGJvcmRlcjogM3B4IHNvbGlkICR7QkFOS0VSX0NPTE9SfTtcbiAgdG9wOiAtMXB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgJHtzdmdTY2FsZUNsYXNzTmFtZX07XG5gO1xuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst GridItem = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e11h4h7x2\",\n  label: \"GridItem\"\n})(\"font-size:13px;color:\", palette.primaryContrast, \";align-self:center;justify-self:center;position:relative;display:flex;justify-content:center;align-items:center;\" + ( false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcY29tcG9uZW50c1xcUm9hZFByZXZpZXdcXHN0eWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlDa0MiLCJmaWxlIjoiQzpcXFVzZXJzXFxUeWtoZVxcZWxlY3Ryb25hcHBzXFx0eWtoZS1lbGVjdHJvbi1hcHBzLWJhY2NhcmF0XFxzcmNcXHJlbmRlcmVyXFxiYWNjYXJhdFxccGxheWVyXFxjb21wb25lbnRzXFxSb2FkUHJldmlld1xcc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjc3MsIH0gZnJvbSAnQGVtb3Rpb24vY3NzJztcbmltcG9ydCB7IHRoZW1lLCB9IGZyb20gJy4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcCc7XG5pbXBvcnQgdGlueUNvbG9yIGZyb20gJ3Rpbnljb2xvcjInO1xuXG5pbXBvcnQgeyBVSV9DT05GSUcsIH0gZnJvbSAnLi4vLi4vdWlDb25maWcnO1xuXG5jb25zdCB7XG4gIENPTE9SUzogeyBQTEFZRVJfQ09MT1IsIEJBTktFUl9DT0xPUiwgfSxcbn0gPSBVSV9DT05GSUc7XG5cbmNvbnN0IHsgcGFsZXR0ZSwgdGludHMsIH0gPSB0aGVtZTtcblxuY29uc3QgQk9SREVSX0NPTE9SID0gdGlueUNvbG9yKHBhbGV0dGUuZm9yZWdyb3VuZClcbiAgLnNldEFscGhhKHRpbnRzLmRhcmtlcilcbiAgLnRvU3RyaW5nKCk7XG5cbmNvbnN0IFBMQVlFUl9CQUNLR1JPVU5EX0NPTE9SID0gdGlueUNvbG9yKFBMQVlFUl9DT0xPUilcbiAgLnNldEFscGhhKDAuOClcbiAgLnRvU3RyaW5nKCk7XG5cbmNvbnN0IEJBTktFUl9CQUNLR1JPVU5EX0NPTE9SID0gdGlueUNvbG9yKEJBTktFUl9DT0xPUilcbiAgLnNldEFscGhhKDAuOClcbiAgLnRvU3RyaW5nKCk7XG5cbmV4cG9ydCBjb25zdCBDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBoZWlnaHQ6IDEwMCU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7Qk9SREVSX0NPTE9SfTtcbiAgbWFyZ2luLXJpZ2h0OiA0cHg7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gIGdyaWQtYXV0by1mbG93OiBjb2x1bW47XG4gIGZsZXg6IDE7XG5gO1xuXG5leHBvcnQgY29uc3QgQ29sdW1uID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNCwgMWZyKTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuYDtcblxuZXhwb3J0IGNvbnN0IEdyaWRJdGVtID0gc3R5bGVkLmRpdmBcbiAgZm9udC1zaXplOiAxM3B4O1xuICBjb2xvcjogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAganVzdGlmeS1zZWxmOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5gO1xuXG5jb25zdCBwcmV2aWV3QnV0dG9uID0gY3NzYFxuICB3aWR0aDogY2FsYygxMDAlICsgMXB4KTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBjb2xvcjogI2ZmZjtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5gO1xuXG5jb25zdCBzdmdTY2FsZUNsYXNzTmFtZSA9IGNzc2BcbiAgc3ZnIHtcbiAgICB3aWR0aDogYXV0bztcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgyKTtcbiAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFBsYXllclByZXZpZXdCdXR0b24gPSBzdHlsZWQuZGl2YFxuICAke3ByZXZpZXdCdXR0b259O1xuICBiYWNrZ3JvdW5kOiAke1BMQVlFUl9CQUNLR1JPVU5EX0NPTE9SfTtcbiAgYm9yZGVyOiAzcHggc29saWQgJHtQTEFZRVJfQ09MT1J9O1xuICBsZWZ0OiAtMXB4O1xuICB0b3A6IC0xcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICAke3N2Z1NjYWxlQ2xhc3NOYW1lfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBCYW5rZXJQcmV2aWV3QnV0dG9uID0gc3R5bGVkLmRpdmBcbiAgJHtwcmV2aWV3QnV0dG9ufTtcbiAgYmFja2dyb3VuZDogJHtCQU5LRVJfQkFDS0dST1VORF9DT0xPUn07XG4gIGJvcmRlcjogM3B4IHNvbGlkICR7QkFOS0VSX0NPTE9SfTtcbiAgdG9wOiAtMXB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgJHtzdmdTY2FsZUNsYXNzTmFtZX07XG5gO1xuIl19 */\"));\nconst previewButton = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)( false ? 0 : {\n  name: \"tdrsbe-previewButton\",\n  styles: \"width:calc(100% + 1px);height:100%;color:#fff;display:flex;align-items:center;justify-content:center;label:previewButton;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcY29tcG9uZW50c1xcUm9hZFByZXZpZXdcXHN0eWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFEeUIiLCJmaWxlIjoiQzpcXFVzZXJzXFxUeWtoZVxcZWxlY3Ryb25hcHBzXFx0eWtoZS1lbGVjdHJvbi1hcHBzLWJhY2NhcmF0XFxzcmNcXHJlbmRlcmVyXFxiYWNjYXJhdFxccGxheWVyXFxjb21wb25lbnRzXFxSb2FkUHJldmlld1xcc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjc3MsIH0gZnJvbSAnQGVtb3Rpb24vY3NzJztcbmltcG9ydCB7IHRoZW1lLCB9IGZyb20gJy4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcCc7XG5pbXBvcnQgdGlueUNvbG9yIGZyb20gJ3Rpbnljb2xvcjInO1xuXG5pbXBvcnQgeyBVSV9DT05GSUcsIH0gZnJvbSAnLi4vLi4vdWlDb25maWcnO1xuXG5jb25zdCB7XG4gIENPTE9SUzogeyBQTEFZRVJfQ09MT1IsIEJBTktFUl9DT0xPUiwgfSxcbn0gPSBVSV9DT05GSUc7XG5cbmNvbnN0IHsgcGFsZXR0ZSwgdGludHMsIH0gPSB0aGVtZTtcblxuY29uc3QgQk9SREVSX0NPTE9SID0gdGlueUNvbG9yKHBhbGV0dGUuZm9yZWdyb3VuZClcbiAgLnNldEFscGhhKHRpbnRzLmRhcmtlcilcbiAgLnRvU3RyaW5nKCk7XG5cbmNvbnN0IFBMQVlFUl9CQUNLR1JPVU5EX0NPTE9SID0gdGlueUNvbG9yKFBMQVlFUl9DT0xPUilcbiAgLnNldEFscGhhKDAuOClcbiAgLnRvU3RyaW5nKCk7XG5cbmNvbnN0IEJBTktFUl9CQUNLR1JPVU5EX0NPTE9SID0gdGlueUNvbG9yKEJBTktFUl9DT0xPUilcbiAgLnNldEFscGhhKDAuOClcbiAgLnRvU3RyaW5nKCk7XG5cbmV4cG9ydCBjb25zdCBDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBoZWlnaHQ6IDEwMCU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7Qk9SREVSX0NPTE9SfTtcbiAgbWFyZ2luLXJpZ2h0OiA0cHg7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gIGdyaWQtYXV0by1mbG93OiBjb2x1bW47XG4gIGZsZXg6IDE7XG5gO1xuXG5leHBvcnQgY29uc3QgQ29sdW1uID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNCwgMWZyKTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuYDtcblxuZXhwb3J0IGNvbnN0IEdyaWRJdGVtID0gc3R5bGVkLmRpdmBcbiAgZm9udC1zaXplOiAxM3B4O1xuICBjb2xvcjogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAganVzdGlmeS1zZWxmOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5gO1xuXG5jb25zdCBwcmV2aWV3QnV0dG9uID0gY3NzYFxuICB3aWR0aDogY2FsYygxMDAlICsgMXB4KTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBjb2xvcjogI2ZmZjtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5gO1xuXG5jb25zdCBzdmdTY2FsZUNsYXNzTmFtZSA9IGNzc2BcbiAgc3ZnIHtcbiAgICB3aWR0aDogYXV0bztcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgyKTtcbiAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFBsYXllclByZXZpZXdCdXR0b24gPSBzdHlsZWQuZGl2YFxuICAke3ByZXZpZXdCdXR0b259O1xuICBiYWNrZ3JvdW5kOiAke1BMQVlFUl9CQUNLR1JPVU5EX0NPTE9SfTtcbiAgYm9yZGVyOiAzcHggc29saWQgJHtQTEFZRVJfQ09MT1J9O1xuICBsZWZ0OiAtMXB4O1xuICB0b3A6IC0xcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICAke3N2Z1NjYWxlQ2xhc3NOYW1lfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBCYW5rZXJQcmV2aWV3QnV0dG9uID0gc3R5bGVkLmRpdmBcbiAgJHtwcmV2aWV3QnV0dG9ufTtcbiAgYmFja2dyb3VuZDogJHtCQU5LRVJfQkFDS0dST1VORF9DT0xPUn07XG4gIGJvcmRlcjogM3B4IHNvbGlkICR7QkFOS0VSX0NPTE9SfTtcbiAgdG9wOiAtMXB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgJHtzdmdTY2FsZUNsYXNzTmFtZX07XG5gO1xuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst svgScaleClassName = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)( false ? 0 : {\n  name: \"1057jfk-svgScaleClassName\",\n  styles: \"svg{width:auto;height:100%;transform:scale(2);};label:svgScaleClassName;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcY29tcG9uZW50c1xcUm9hZFByZXZpZXdcXHN0eWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQThENkIiLCJmaWxlIjoiQzpcXFVzZXJzXFxUeWtoZVxcZWxlY3Ryb25hcHBzXFx0eWtoZS1lbGVjdHJvbi1hcHBzLWJhY2NhcmF0XFxzcmNcXHJlbmRlcmVyXFxiYWNjYXJhdFxccGxheWVyXFxjb21wb25lbnRzXFxSb2FkUHJldmlld1xcc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjc3MsIH0gZnJvbSAnQGVtb3Rpb24vY3NzJztcbmltcG9ydCB7IHRoZW1lLCB9IGZyb20gJy4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcCc7XG5pbXBvcnQgdGlueUNvbG9yIGZyb20gJ3Rpbnljb2xvcjInO1xuXG5pbXBvcnQgeyBVSV9DT05GSUcsIH0gZnJvbSAnLi4vLi4vdWlDb25maWcnO1xuXG5jb25zdCB7XG4gIENPTE9SUzogeyBQTEFZRVJfQ09MT1IsIEJBTktFUl9DT0xPUiwgfSxcbn0gPSBVSV9DT05GSUc7XG5cbmNvbnN0IHsgcGFsZXR0ZSwgdGludHMsIH0gPSB0aGVtZTtcblxuY29uc3QgQk9SREVSX0NPTE9SID0gdGlueUNvbG9yKHBhbGV0dGUuZm9yZWdyb3VuZClcbiAgLnNldEFscGhhKHRpbnRzLmRhcmtlcilcbiAgLnRvU3RyaW5nKCk7XG5cbmNvbnN0IFBMQVlFUl9CQUNLR1JPVU5EX0NPTE9SID0gdGlueUNvbG9yKFBMQVlFUl9DT0xPUilcbiAgLnNldEFscGhhKDAuOClcbiAgLnRvU3RyaW5nKCk7XG5cbmNvbnN0IEJBTktFUl9CQUNLR1JPVU5EX0NPTE9SID0gdGlueUNvbG9yKEJBTktFUl9DT0xPUilcbiAgLnNldEFscGhhKDAuOClcbiAgLnRvU3RyaW5nKCk7XG5cbmV4cG9ydCBjb25zdCBDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBoZWlnaHQ6IDEwMCU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7Qk9SREVSX0NPTE9SfTtcbiAgbWFyZ2luLXJpZ2h0OiA0cHg7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gIGdyaWQtYXV0by1mbG93OiBjb2x1bW47XG4gIGZsZXg6IDE7XG5gO1xuXG5leHBvcnQgY29uc3QgQ29sdW1uID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNCwgMWZyKTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuYDtcblxuZXhwb3J0IGNvbnN0IEdyaWRJdGVtID0gc3R5bGVkLmRpdmBcbiAgZm9udC1zaXplOiAxM3B4O1xuICBjb2xvcjogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAganVzdGlmeS1zZWxmOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5gO1xuXG5jb25zdCBwcmV2aWV3QnV0dG9uID0gY3NzYFxuICB3aWR0aDogY2FsYygxMDAlICsgMXB4KTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBjb2xvcjogI2ZmZjtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5gO1xuXG5jb25zdCBzdmdTY2FsZUNsYXNzTmFtZSA9IGNzc2BcbiAgc3ZnIHtcbiAgICB3aWR0aDogYXV0bztcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgyKTtcbiAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFBsYXllclByZXZpZXdCdXR0b24gPSBzdHlsZWQuZGl2YFxuICAke3ByZXZpZXdCdXR0b259O1xuICBiYWNrZ3JvdW5kOiAke1BMQVlFUl9CQUNLR1JPVU5EX0NPTE9SfTtcbiAgYm9yZGVyOiAzcHggc29saWQgJHtQTEFZRVJfQ09MT1J9O1xuICBsZWZ0OiAtMXB4O1xuICB0b3A6IC0xcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICAke3N2Z1NjYWxlQ2xhc3NOYW1lfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBCYW5rZXJQcmV2aWV3QnV0dG9uID0gc3R5bGVkLmRpdmBcbiAgJHtwcmV2aWV3QnV0dG9ufTtcbiAgYmFja2dyb3VuZDogJHtCQU5LRVJfQkFDS0dST1VORF9DT0xPUn07XG4gIGJvcmRlcjogM3B4IHNvbGlkICR7QkFOS0VSX0NPTE9SfTtcbiAgdG9wOiAtMXB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgJHtzdmdTY2FsZUNsYXNzTmFtZX07XG5gO1xuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst PlayerPreviewButton = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e11h4h7x1\",\n  label: \"PlayerPreviewButton\"\n})(previewButton, \";background:\", PLAYER_BACKGROUND_COLOR, \";border:3px solid \", PLAYER_COLOR, \";left:-1px;top:-1px;position:relative;cursor:pointer;\", svgScaleClassName, \";\" + ( false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcY29tcG9uZW50c1xcUm9hZFByZXZpZXdcXHN0eWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNFNkMiLCJmaWxlIjoiQzpcXFVzZXJzXFxUeWtoZVxcZWxlY3Ryb25hcHBzXFx0eWtoZS1lbGVjdHJvbi1hcHBzLWJhY2NhcmF0XFxzcmNcXHJlbmRlcmVyXFxiYWNjYXJhdFxccGxheWVyXFxjb21wb25lbnRzXFxSb2FkUHJldmlld1xcc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjc3MsIH0gZnJvbSAnQGVtb3Rpb24vY3NzJztcbmltcG9ydCB7IHRoZW1lLCB9IGZyb20gJy4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcCc7XG5pbXBvcnQgdGlueUNvbG9yIGZyb20gJ3Rpbnljb2xvcjInO1xuXG5pbXBvcnQgeyBVSV9DT05GSUcsIH0gZnJvbSAnLi4vLi4vdWlDb25maWcnO1xuXG5jb25zdCB7XG4gIENPTE9SUzogeyBQTEFZRVJfQ09MT1IsIEJBTktFUl9DT0xPUiwgfSxcbn0gPSBVSV9DT05GSUc7XG5cbmNvbnN0IHsgcGFsZXR0ZSwgdGludHMsIH0gPSB0aGVtZTtcblxuY29uc3QgQk9SREVSX0NPTE9SID0gdGlueUNvbG9yKHBhbGV0dGUuZm9yZWdyb3VuZClcbiAgLnNldEFscGhhKHRpbnRzLmRhcmtlcilcbiAgLnRvU3RyaW5nKCk7XG5cbmNvbnN0IFBMQVlFUl9CQUNLR1JPVU5EX0NPTE9SID0gdGlueUNvbG9yKFBMQVlFUl9DT0xPUilcbiAgLnNldEFscGhhKDAuOClcbiAgLnRvU3RyaW5nKCk7XG5cbmNvbnN0IEJBTktFUl9CQUNLR1JPVU5EX0NPTE9SID0gdGlueUNvbG9yKEJBTktFUl9DT0xPUilcbiAgLnNldEFscGhhKDAuOClcbiAgLnRvU3RyaW5nKCk7XG5cbmV4cG9ydCBjb25zdCBDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBoZWlnaHQ6IDEwMCU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7Qk9SREVSX0NPTE9SfTtcbiAgbWFyZ2luLXJpZ2h0OiA0cHg7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gIGdyaWQtYXV0by1mbG93OiBjb2x1bW47XG4gIGZsZXg6IDE7XG5gO1xuXG5leHBvcnQgY29uc3QgQ29sdW1uID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNCwgMWZyKTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuYDtcblxuZXhwb3J0IGNvbnN0IEdyaWRJdGVtID0gc3R5bGVkLmRpdmBcbiAgZm9udC1zaXplOiAxM3B4O1xuICBjb2xvcjogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAganVzdGlmeS1zZWxmOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5gO1xuXG5jb25zdCBwcmV2aWV3QnV0dG9uID0gY3NzYFxuICB3aWR0aDogY2FsYygxMDAlICsgMXB4KTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBjb2xvcjogI2ZmZjtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5gO1xuXG5jb25zdCBzdmdTY2FsZUNsYXNzTmFtZSA9IGNzc2BcbiAgc3ZnIHtcbiAgICB3aWR0aDogYXV0bztcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgyKTtcbiAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFBsYXllclByZXZpZXdCdXR0b24gPSBzdHlsZWQuZGl2YFxuICAke3ByZXZpZXdCdXR0b259O1xuICBiYWNrZ3JvdW5kOiAke1BMQVlFUl9CQUNLR1JPVU5EX0NPTE9SfTtcbiAgYm9yZGVyOiAzcHggc29saWQgJHtQTEFZRVJfQ09MT1J9O1xuICBsZWZ0OiAtMXB4O1xuICB0b3A6IC0xcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICAke3N2Z1NjYWxlQ2xhc3NOYW1lfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBCYW5rZXJQcmV2aWV3QnV0dG9uID0gc3R5bGVkLmRpdmBcbiAgJHtwcmV2aWV3QnV0dG9ufTtcbiAgYmFja2dyb3VuZDogJHtCQU5LRVJfQkFDS0dST1VORF9DT0xPUn07XG4gIGJvcmRlcjogM3B4IHNvbGlkICR7QkFOS0VSX0NPTE9SfTtcbiAgdG9wOiAtMXB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgJHtzdmdTY2FsZUNsYXNzTmFtZX07XG5gO1xuIl19 */\"));\nconst BankerPreviewButton = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e11h4h7x0\",\n  label: \"BankerPreviewButton\"\n})(previewButton, \";background:\", BANKER_BACKGROUND_COLOR, \";border:3px solid \", BANKER_COLOR, \";top:-1px;position:relative;cursor:pointer;\", svgScaleClassName, \";\" + ( false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcY29tcG9uZW50c1xcUm9hZFByZXZpZXdcXHN0eWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlGNkMiLCJmaWxlIjoiQzpcXFVzZXJzXFxUeWtoZVxcZWxlY3Ryb25hcHBzXFx0eWtoZS1lbGVjdHJvbi1hcHBzLWJhY2NhcmF0XFxzcmNcXHJlbmRlcmVyXFxiYWNjYXJhdFxccGxheWVyXFxjb21wb25lbnRzXFxSb2FkUHJldmlld1xcc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjc3MsIH0gZnJvbSAnQGVtb3Rpb24vY3NzJztcbmltcG9ydCB7IHRoZW1lLCB9IGZyb20gJy4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcCc7XG5pbXBvcnQgdGlueUNvbG9yIGZyb20gJ3Rpbnljb2xvcjInO1xuXG5pbXBvcnQgeyBVSV9DT05GSUcsIH0gZnJvbSAnLi4vLi4vdWlDb25maWcnO1xuXG5jb25zdCB7XG4gIENPTE9SUzogeyBQTEFZRVJfQ09MT1IsIEJBTktFUl9DT0xPUiwgfSxcbn0gPSBVSV9DT05GSUc7XG5cbmNvbnN0IHsgcGFsZXR0ZSwgdGludHMsIH0gPSB0aGVtZTtcblxuY29uc3QgQk9SREVSX0NPTE9SID0gdGlueUNvbG9yKHBhbGV0dGUuZm9yZWdyb3VuZClcbiAgLnNldEFscGhhKHRpbnRzLmRhcmtlcilcbiAgLnRvU3RyaW5nKCk7XG5cbmNvbnN0IFBMQVlFUl9CQUNLR1JPVU5EX0NPTE9SID0gdGlueUNvbG9yKFBMQVlFUl9DT0xPUilcbiAgLnNldEFscGhhKDAuOClcbiAgLnRvU3RyaW5nKCk7XG5cbmNvbnN0IEJBTktFUl9CQUNLR1JPVU5EX0NPTE9SID0gdGlueUNvbG9yKEJBTktFUl9DT0xPUilcbiAgLnNldEFscGhhKDAuOClcbiAgLnRvU3RyaW5nKCk7XG5cbmV4cG9ydCBjb25zdCBDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBoZWlnaHQ6IDEwMCU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7Qk9SREVSX0NPTE9SfTtcbiAgbWFyZ2luLXJpZ2h0OiA0cHg7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gIGdyaWQtYXV0by1mbG93OiBjb2x1bW47XG4gIGZsZXg6IDE7XG5gO1xuXG5leHBvcnQgY29uc3QgQ29sdW1uID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNCwgMWZyKTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuYDtcblxuZXhwb3J0IGNvbnN0IEdyaWRJdGVtID0gc3R5bGVkLmRpdmBcbiAgZm9udC1zaXplOiAxM3B4O1xuICBjb2xvcjogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAganVzdGlmeS1zZWxmOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5gO1xuXG5jb25zdCBwcmV2aWV3QnV0dG9uID0gY3NzYFxuICB3aWR0aDogY2FsYygxMDAlICsgMXB4KTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBjb2xvcjogI2ZmZjtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5gO1xuXG5jb25zdCBzdmdTY2FsZUNsYXNzTmFtZSA9IGNzc2BcbiAgc3ZnIHtcbiAgICB3aWR0aDogYXV0bztcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgyKTtcbiAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFBsYXllclByZXZpZXdCdXR0b24gPSBzdHlsZWQuZGl2YFxuICAke3ByZXZpZXdCdXR0b259O1xuICBiYWNrZ3JvdW5kOiAke1BMQVlFUl9CQUNLR1JPVU5EX0NPTE9SfTtcbiAgYm9yZGVyOiAzcHggc29saWQgJHtQTEFZRVJfQ09MT1J9O1xuICBsZWZ0OiAtMXB4O1xuICB0b3A6IC0xcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICAke3N2Z1NjYWxlQ2xhc3NOYW1lfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBCYW5rZXJQcmV2aWV3QnV0dG9uID0gc3R5bGVkLmRpdmBcbiAgJHtwcmV2aWV3QnV0dG9ufTtcbiAgYmFja2dyb3VuZDogJHtCQU5LRVJfQkFDS0dST1VORF9DT0xPUn07XG4gIGJvcmRlcjogM3B4IHNvbGlkICR7QkFOS0VSX0NPTE9SfTtcbiAgdG9wOiAtMXB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgJHtzdmdTY2FsZUNsYXNzTmFtZX07XG5gO1xuIl19 */\"));\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/components/RoadPreview/style.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/components/SmallRoad/index.js":
/*!********************************************************************!*\
  !*** ./src/renderer/baccarat/player/components/SmallRoad/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../tykhe/bootstrap */ \"./src/renderer/baccarat/tykhe/bootstrap/index.js\");\n/* harmony import */ var _tykhe_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../tykhe/components */ \"./src/renderer/baccarat/tykhe/components/index.js\");\n/* harmony import */ var _contexts_preview__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../contexts/preview */ \"./src/renderer/baccarat/player/contexts/preview.js\");\n/* harmony import */ var _store_selectors_roads__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../store/selectors/roads */ \"./src/renderer/baccarat/player/store/selectors/roads.js\");\n/* harmony import */ var _constants_strings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../constants/strings */ \"./src/renderer/baccarat/player/constants/strings.js\");\n\n\n\n\n\n\nconst {\n  gameIdSelector\n} = _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_1__.selectors;\nconst mstp = (state, {\n  gridCellSpan = 2,\n  ...props\n}) => ({\n  road: (0,_store_selectors_roads__WEBPACK_IMPORTED_MODULE_4__.smallRoadSelector)(state),\n  previews: (0,_store_selectors_roads__WEBPACK_IMPORTED_MODULE_4__.roadsPreviewsSelector)(state),\n  gameId: gameIdSelector(state),\n  gridCellSpan,\n  PreviewContext: _contexts_preview__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n  ...props,\n  role: _constants_strings__WEBPACK_IMPORTED_MODULE_5__.SMALL,\n  'data-e2e': 'small-road'\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_redux__WEBPACK_IMPORTED_MODULE_0__.connect)(mstp)(_tykhe_components__WEBPACK_IMPORTED_MODULE_2__.SvgRoadComponent));\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/components/SmallRoad/index.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/components/Stats/index.js":
/*!****************************************************************!*\
  !*** ./src/renderer/baccarat/player/components/Stats/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Stats)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _tykhe_primitives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../tykhe/primitives */ \"./src/renderer/baccarat/tykhe/primitives/index.js\");\n/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./style */ \"./src/renderer/baccarat/player/components/Stats/style.js\");\n/* harmony import */ var _assets_icons_circle_text_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../assets/icons/circle_text.svg */ \"./src/renderer/baccarat/player/assets/icons/circle_text.svg\");\n/* harmony import */ var _assets_icons_circle_text_svg__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_assets_icons_circle_text_svg__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _assets_icons_player_pair_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../assets/icons/player_pair.svg */ \"./src/renderer/baccarat/player/assets/icons/player_pair.svg\");\n/* harmony import */ var _assets_icons_player_pair_svg__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_assets_icons_player_pair_svg__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _assets_icons_banker_pair_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../assets/icons/banker_pair.svg */ \"./src/renderer/baccarat/player/assets/icons/banker_pair.svg\");\n/* harmony import */ var _assets_icons_banker_pair_svg__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_assets_icons_banker_pair_svg__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _contexts_stats__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../contexts/stats */ \"./src/renderer/baccarat/player/contexts/stats.js\");\n/* harmony import */ var _uiConfig__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../uiConfig */ \"./src/renderer/baccarat/player/uiConfig.js\");\n/* harmony import */ var _views_GameBoard_sections_Bottom_svgUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../views/GameBoard/sections/Bottom/svgUtils */ \"./src/renderer/baccarat/player/views/GameBoard/sections/Bottom/svgUtils.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nconst {\n  COLORS: {\n    PLAYER_COLOR,\n    BANKER_COLOR,\n    TIE_COLOR\n  },\n  SIGNS: {\n    PLAYER_SIGN,\n    BANKER_SIGN,\n    TIE_SIGN\n  },\n  ICONS: {\n    PLAYER_ICON,\n    BANKER_ICON\n  }\n} = _uiConfig__WEBPACK_IMPORTED_MODULE_7__.UI_CONFIG;\nconst isDragonTiger = _uiConfig__WEBPACK_IMPORTED_MODULE_7__.UI_CONFIG.isDragonTiger();\nconst isCricketWar = _uiConfig__WEBPACK_IMPORTED_MODULE_7__.UI_CONFIG.isCricketWar();\nfunction Stats({\n  hidePairs,\n  ...props\n}) {\n  return (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_contexts_stats__WEBPACK_IMPORTED_MODULE_6__.Consumer, {\n    children: ({\n      stats\n    }) => (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_style__WEBPACK_IMPORTED_MODULE_2__.Container, {\n      ...props,\n      \"data-e2e\": \"stats-grid\",\n      children: [(0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_style__WEBPACK_IMPORTED_MODULE_2__.GridItem, {\n        \"data-e2e\": \"stats-count-label\",\n        children: '#'\n      }), (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_style__WEBPACK_IMPORTED_MODULE_2__.GridItem, {\n        \"data-e2e\": \"stats-count-value\",\n        children: stats.count\n      }), (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_style__WEBPACK_IMPORTED_MODULE_2__.GridItem, {\n        \"data-e2e\": \"stats-player-wins-label\",\n        children: (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_tykhe_primitives__WEBPACK_IMPORTED_MODULE_1__.Icon, {\n          size: 16,\n          color: PLAYER_COLOR,\n          svg: (0,_views_GameBoard_sections_Bottom_svgUtils__WEBPACK_IMPORTED_MODULE_8__.getCircleSVG)(PLAYER_ICON),\n          map: (0,_views_GameBoard_sections_Bottom_svgUtils__WEBPACK_IMPORTED_MODULE_8__.mapSvg)(PLAYER_SIGN, PLAYER_ICON)\n        })\n      }), (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_style__WEBPACK_IMPORTED_MODULE_2__.GridItem, {\n        \"data-e2e\": \"stats-player-wins-value\",\n        children: stats.Player\n      }), (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_style__WEBPACK_IMPORTED_MODULE_2__.GridItem, {\n        \"data-e2e\": \"stats-banker-wins-label\",\n        children: (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_tykhe_primitives__WEBPACK_IMPORTED_MODULE_1__.Icon, {\n          size: 16,\n          color: BANKER_COLOR,\n          svg: (0,_views_GameBoard_sections_Bottom_svgUtils__WEBPACK_IMPORTED_MODULE_8__.getCircleSVG)(BANKER_ICON),\n          map: (0,_views_GameBoard_sections_Bottom_svgUtils__WEBPACK_IMPORTED_MODULE_8__.mapSvg)(BANKER_SIGN, BANKER_ICON)\n        })\n      }), (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_style__WEBPACK_IMPORTED_MODULE_2__.GridItem, {\n        \"data-e2e\": \"stats-banker-wins-value\",\n        children: stats.Banker\n      }), (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_style__WEBPACK_IMPORTED_MODULE_2__.GridItem, {\n        \"data-e2e\": \"stats-tie-label\",\n        children: (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_tykhe_primitives__WEBPACK_IMPORTED_MODULE_1__.Icon, {\n          color: TIE_COLOR,\n          svg: (_assets_icons_circle_text_svg__WEBPACK_IMPORTED_MODULE_3___default()),\n          map: svg => svg.replace('{{text}}', TIE_SIGN)\n        })\n      }), (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_style__WEBPACK_IMPORTED_MODULE_2__.GridItem, {\n        \"data-e2e\": \"stats-tie-value\",\n        children: stats.Tie\n      }), !hidePairs && !isDragonTiger && !isCricketWar && (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [(0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_style__WEBPACK_IMPORTED_MODULE_2__.GridItem, {\n          \"data-e2e\": \"stats-player-pairs-label\",\n          children: (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_tykhe_primitives__WEBPACK_IMPORTED_MODULE_1__.Icon, {\n            color: PLAYER_COLOR,\n            svg: (_assets_icons_player_pair_svg__WEBPACK_IMPORTED_MODULE_4___default())\n          })\n        }), (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_style__WEBPACK_IMPORTED_MODULE_2__.GridItem, {\n          \"data-e2e\": \"stats-player-pairs-value\",\n          children: stats.playerPairs\n        }), (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_style__WEBPACK_IMPORTED_MODULE_2__.GridItem, {\n          \"data-e2e\": \"stats-banker-pairs-label\",\n          children: (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_tykhe_primitives__WEBPACK_IMPORTED_MODULE_1__.Icon, {\n            color: BANKER_COLOR,\n            svg: (_assets_icons_banker_pair_svg__WEBPACK_IMPORTED_MODULE_5___default())\n          })\n        }), (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_style__WEBPACK_IMPORTED_MODULE_2__.GridItem, {\n          \"data-e2e\": \"stats-banker-pairs-value\",\n          children: stats.bankerPairs\n        })]\n      })]\n    })\n  });\n}\nconst statsType = (0,prop_types__WEBPACK_IMPORTED_MODULE_10__.shape)({\n  count: prop_types__WEBPACK_IMPORTED_MODULE_10__.number,\n  Player: prop_types__WEBPACK_IMPORTED_MODULE_10__.number,\n  Banker: prop_types__WEBPACK_IMPORTED_MODULE_10__.number,\n  Tie: prop_types__WEBPACK_IMPORTED_MODULE_10__.number,\n  playerPairs: prop_types__WEBPACK_IMPORTED_MODULE_10__.number,\n  bankerPairs: prop_types__WEBPACK_IMPORTED_MODULE_10__.number\n});\nStats.propTypes = {\n  stats: statsType,\n  hidePairs: prop_types__WEBPACK_IMPORTED_MODULE_10__.bool\n};\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/components/Stats/index.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/components/Stats/style.js":
/*!****************************************************************!*\
  !*** ./src/renderer/baccarat/player/components/Stats/style.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Container: () => (/* binding */ Container),\n/* harmony export */   GridItem: () => (/* binding */ GridItem)\n/* harmony export */ });\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled/base */ \"./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js\");\n/* harmony import */ var _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../tykhe/bootstrap */ \"./src/renderer/baccarat/tykhe/bootstrap/index.js\");\n/* harmony import */ var _tykhe_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../tykhe/utils */ \"./src/renderer/baccarat/tykhe/utils/index.js\");\n\n\n\nconst {\n  palette,\n  tints\n} = _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_1__.theme;\nconst Container = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e14ztg611\",\n  label: \"Container\"\n})(\"height:100%;border:1px solid \", (0,_tykhe_utils__WEBPACK_IMPORTED_MODULE_2__.hex2rgba)(palette.foreground, tints.darker), \";margin-right:4px;display:grid;grid-template-columns:repeat(2, 1fr);grid-auto-rows:minmax(16.6667%, auto);flex:1;\" + ( false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcY29tcG9uZW50c1xcU3RhdHNcXHN0eWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU1tQyIsImZpbGUiOiJDOlxcVXNlcnNcXFR5a2hlXFxlbGVjdHJvbmFwcHNcXHR5a2hlLWVsZWN0cm9uLWFwcHMtYmFjY2FyYXRcXHNyY1xccmVuZGVyZXJcXGJhY2NhcmF0XFxwbGF5ZXJcXGNvbXBvbmVudHNcXFN0YXRzXFxzdHlsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IHRoZW1lLCB9IGZyb20gJy4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcCc7XG5pbXBvcnQgeyBoZXgycmdiYSwgfSBmcm9tICcuLi8uLi8uLi90eWtoZS91dGlscyc7XG5cbmNvbnN0IHsgcGFsZXR0ZSwgdGludHMsIH0gPSB0aGVtZTtcblxuZXhwb3J0IGNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGhlaWdodDogMTAwJTtcbiAgYm9yZGVyOiAxcHggc29saWQgJHtoZXgycmdiYShwYWxldHRlLmZvcmVncm91bmQsIHRpbnRzLmRhcmtlcil9O1xuICBtYXJnaW4tcmlnaHQ6IDRweDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMWZyKTtcbiAgZ3JpZC1hdXRvLXJvd3M6IG1pbm1heCgxNi42NjY3JSwgYXV0byk7XG4gIGZsZXg6IDE7XG5gO1xuXG5leHBvcnQgY29uc3QgR3JpZEl0ZW0gPSBzdHlsZWQuZGl2YFxuICBmb250LXNpemU6IDEzcHg7XG4gIGNvbG9yOiAke3BhbGV0dGUucHJpbWFyeUNvbnRyYXN0fTtcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xuICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbmA7XG4iXX0= */\"));\nconst GridItem = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e14ztg610\",\n  label: \"GridItem\"\n})(\"font-size:13px;color:\", palette.primaryContrast, \";align-self:center;justify-self:center;position:relative;display:flex;justify-content:center;align-items:center;\" + ( false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcY29tcG9uZW50c1xcU3RhdHNcXHN0eWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdCa0MiLCJmaWxlIjoiQzpcXFVzZXJzXFxUeWtoZVxcZWxlY3Ryb25hcHBzXFx0eWtoZS1lbGVjdHJvbi1hcHBzLWJhY2NhcmF0XFxzcmNcXHJlbmRlcmVyXFxiYWNjYXJhdFxccGxheWVyXFxjb21wb25lbnRzXFxTdGF0c1xcc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyB0aGVtZSwgfSBmcm9tICcuLi8uLi8uLi90eWtoZS9ib290c3RyYXAnO1xuaW1wb3J0IHsgaGV4MnJnYmEsIH0gZnJvbSAnLi4vLi4vLi4vdHlraGUvdXRpbHMnO1xuXG5jb25zdCB7IHBhbGV0dGUsIHRpbnRzLCB9ID0gdGhlbWU7XG5cbmV4cG9ydCBjb25zdCBDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBoZWlnaHQ6IDEwMCU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7aGV4MnJnYmEocGFsZXR0ZS5mb3JlZ3JvdW5kLCB0aW50cy5kYXJrZXIpfTtcbiAgbWFyZ2luLXJpZ2h0OiA0cHg7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gIGdyaWQtYXV0by1yb3dzOiBtaW5tYXgoMTYuNjY2NyUsIGF1dG8pO1xuICBmbGV4OiAxO1xuYDtcblxuZXhwb3J0IGNvbnN0IEdyaWRJdGVtID0gc3R5bGVkLmRpdmBcbiAgZm9udC1zaXplOiAxM3B4O1xuICBjb2xvcjogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAganVzdGlmeS1zZWxmOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5gO1xuIl19 */\"));\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/components/Stats/style.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/constants/config.js":
/*!**********************************************************!*\
  !*** ./src/renderer/baccarat/player/constants/config.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_SCORES_CONFIG: () => (/* binding */ DEFAULT_SCORES_CONFIG),\n/* harmony export */   DEFAULT_STATISTICS_CONFIG: () => (/* binding */ DEFAULT_STATISTICS_CONFIG)\n/* harmony export */ });\nconst DEFAULT_SCORES_CONFIG = {\n  desktop: {\n    left: {},\n    right: {}\n  },\n  landscape: {\n    left: {},\n    right: {}\n  },\n  portrait: {\n    left: {},\n    right: {}\n  }\n};\nconst DEFAULT_STATISTICS_CONFIG = {\n  showStatistics: true,\n  statisticsConfig: {\n    showAmount: true,\n    showPercent: true,\n    showUsers: true,\n    playerOrder: {\n      percent: 1,\n      users: 3,\n      amount: 2\n    },\n    tieOrder: {\n      percent: 1,\n      users: 3,\n      amount: 2\n    },\n    bankerOrder: {\n      percent: 1,\n      users: 3,\n      amount: 2\n    }\n  }\n};\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/constants/config.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/contexts/preview.js":
/*!**********************************************************!*\
  !*** ./src/renderer/baccarat/player/contexts/preview.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Consumer: () => (/* binding */ Consumer),\n/* harmony export */   Provider: () => (/* binding */ Provider),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\n\n\nconst PreviewContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)();\nfunction Provider(props) {\n  const [preview, togglePreview] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  const toggle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(value => {\n    if (preview == null) return togglePreview(value);\n    if (preview === value) return togglePreview(null);\n    return togglePreview(value);\n  }, [preview]);\n  return (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PreviewContext.Provider, {\n    ...props,\n    value: {\n      preview,\n      toggle\n    }\n  });\n}\nconst {\n  Consumer\n} = PreviewContext;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PreviewContext);\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/contexts/preview.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/contexts/stats.js":
/*!********************************************************!*\
  !*** ./src/renderer/baccarat/player/contexts/stats.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Consumer: () => (/* binding */ Consumer),\n/* harmony export */   Provider: () => (/* binding */ Provider),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _providers_Stats__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../providers/Stats */ \"./src/renderer/baccarat/player/providers/Stats.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\n\n\n\nconst StatsContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)();\nconst Provider = props => (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_providers_Stats__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n  children: ({\n    stats\n  }) => (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(StatsContext.Provider, {\n    ...props,\n    value: {\n      stats\n    }\n  })\n});\nconst {\n  Consumer\n} = StatsContext;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (StatsContext);\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/contexts/stats.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/store/selectors/config.js":
/*!****************************************************************!*\
  !*** ./src/renderer/baccarat/player/store/selectors/config.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   baccaratConfigSelector: () => (/* binding */ baccaratConfigSelector),\n/* harmony export */   disabledPerfectPairAndEitherPairSelector: () => (/* binding */ disabledPerfectPairAndEitherPairSelector),\n/* harmony export */   disabledPlayerPairAndBankerPairSelector: () => (/* binding */ disabledPlayerPairAndBankerPairSelector),\n/* harmony export */   disabledSmallAndBigSelector: () => (/* binding */ disabledSmallAndBigSelector),\n/* harmony export */   scoresConfigSelector: () => (/* binding */ scoresConfigSelector),\n/* harmony export */   showStatisticsSelector: () => (/* binding */ showStatisticsSelector),\n/* harmony export */   statisticsConfigSelector: () => (/* binding */ statisticsConfigSelector),\n/* harmony export */   suitedTieEnabledSelector: () => (/* binding */ suitedTieEnabledSelector),\n/* harmony export */   zoomConfigSelector: () => (/* binding */ zoomConfigSelector)\n/* harmony export */ });\n/* harmony import */ var reselect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! reselect */ \"./node_modules/reselect/es/index.js\");\n/* harmony import */ var ramda__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ramda */ \"./node_modules/ramda/es/propOr.js\");\n/* harmony import */ var ramda__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ramda */ \"./node_modules/ramda/es/prop.js\");\n/* harmony import */ var ramda__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ramda */ \"./node_modules/ramda/es/pathOr.js\");\n/* harmony import */ var _constants_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants/config */ \"./src/renderer/baccarat/player/constants/config.js\");\n\n\n\nconst selectConfig = state => state.config;\nconst baccaratConfigSelector = (0,reselect__WEBPACK_IMPORTED_MODULE_1__.createSelector)(selectConfig, config => config.baccarat || {});\n\n/**\r\n * Configuration for disabling small & big sidebets\r\n * DVC2M-3\r\n */\nconst disabledSmallAndBigSelector = (0,reselect__WEBPACK_IMPORTED_MODULE_1__.createSelector)(baccaratConfigSelector, config => config.disableSmallAndBig);\nconst disabledPerfectPairAndEitherPairSelector = (0,reselect__WEBPACK_IMPORTED_MODULE_1__.createSelector)(baccaratConfigSelector, (0,ramda__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'disablePerfectPairAndEitherPair'));\nconst disabledPlayerPairAndBankerPairSelector = (0,reselect__WEBPACK_IMPORTED_MODULE_1__.createSelector)(baccaratConfigSelector, (0,ramda__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'disablePlayerPairAndBankerPair'));\nconst scoresConfigSelector = (0,reselect__WEBPACK_IMPORTED_MODULE_1__.createSelector)(baccaratConfigSelector, ({\n  scoresConfig\n}) => scoresConfig ? JSON.parse(scoresConfig) : _constants_config__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_SCORES_CONFIG);\nconst statisticsConfigSelector = (0,reselect__WEBPACK_IMPORTED_MODULE_1__.createSelector)(baccaratConfigSelector, ({\n  statisticsConfig\n}) => statisticsConfig ? JSON.parse(statisticsConfig) : _constants_config__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_STATISTICS_CONFIG);\nconst showStatisticsSelector = (0,reselect__WEBPACK_IMPORTED_MODULE_1__.createSelector)(statisticsConfigSelector, (0,ramda__WEBPACK_IMPORTED_MODULE_3__[\"default\"])('showStatistics'));\nconst zoomConfigSelector = (0,reselect__WEBPACK_IMPORTED_MODULE_1__.createSelector)(baccaratConfigSelector, ({\n  zoomConfig\n}) => zoomConfig ? JSON.parse(zoomConfig) : undefined);\nconst suitedTieEnabledSelector = (0,reselect__WEBPACK_IMPORTED_MODULE_1__.createSelector)(selectConfig, (0,ramda__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, ['bets', 'suitedTieEnabled']));\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/store/selectors/config.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/views/GameBoard/GameBoard.js":
/*!*******************************************************************!*\
  !*** ./src/renderer/baccarat/player/views/GameBoard/GameBoard.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_33___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_33__);\n/* harmony import */ var bowser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bowser */ \"./node_modules/bowser/es5.js\");\n/* harmony import */ var bowser__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bowser__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/css */ \"./node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var _tykhe_constants_es__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../tykhe/constants/es */ \"./src/renderer/baccarat/tykhe/constants/es/index.js\");\n/* harmony import */ var ramda__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ramda */ \"./node_modules/ramda/es/applySpec.js\");\n/* harmony import */ var _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../tykhe/bootstrap */ \"./src/renderer/baccarat/tykhe/bootstrap/index.js\");\n/* harmony import */ var _sections__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./sections */ \"./src/renderer/baccarat/player/views/GameBoard/sections/index.js\");\n/* harmony import */ var _components_BigRoad__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../components/BigRoad */ \"./src/renderer/baccarat/player/components/BigRoad/index.js\");\n/* harmony import */ var _components_BigEyeRoad__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../components/BigEyeRoad */ \"./src/renderer/baccarat/player/components/BigEyeRoad/index.js\");\n/* harmony import */ var _components_SmallRoad__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../components/SmallRoad */ \"./src/renderer/baccarat/player/components/SmallRoad/index.js\");\n/* harmony import */ var _components_CockroachRoad__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../components/CockroachRoad */ \"./src/renderer/baccarat/player/components/CockroachRoad/index.js\");\n/* harmony import */ var _components_BeadRoad__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/BeadRoad */ \"./src/renderer/baccarat/player/components/BeadRoad/index.js\");\n/* harmony import */ var _components_RoadPreview__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/RoadPreview */ \"./src/renderer/baccarat/player/components/RoadPreview/index.js\");\n/* harmony import */ var _components_Stats__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/Stats */ \"./src/renderer/baccarat/player/components/Stats/index.js\");\n/* harmony import */ var _components_Statistics__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/Statistics */ \"./src/renderer/baccarat/player/components/Statistics/index.js\");\n/* harmony import */ var _components_ResultDisplay__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/ResultDisplay */ \"./src/renderer/baccarat/player/components/ResultDisplay/index.js\");\n/* harmony import */ var _components_Grid_components_BetLabel__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/Grid/components/BetLabel */ \"./src/renderer/baccarat/player/components/Grid/components/BetLabel/index.js\");\n/* harmony import */ var _contexts_preview__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../contexts/preview */ \"./src/renderer/baccarat/player/contexts/preview.js\");\n/* harmony import */ var _contexts_stats__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../contexts/stats */ \"./src/renderer/baccarat/player/contexts/stats.js\");\n/* harmony import */ var _constants_strings__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../constants/strings */ \"./src/renderer/baccarat/player/constants/strings.js\");\n/* harmony import */ var _store_selectors_config__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../store/selectors/config */ \"./src/renderer/baccarat/player/store/selectors/config.js\");\n/* harmony import */ var _store_selectors_statistics__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../store/selectors/statistics */ \"./src/renderer/baccarat/player/store/selectors/statistics.js\");\n/* harmony import */ var _tykhe_bootstrap_store_selectors__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../../tykhe/bootstrap/store/selectors */ \"./src/renderer/baccarat/tykhe/bootstrap/store/selectors/index.js\");\n/* harmony import */ var _uiConfig__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../uiConfig */ \"./src/renderer/baccarat/player/uiConfig.js\");\n/* harmony import */ var _constants_betTypes__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../../constants/betTypes */ \"./src/renderer/baccarat/player/constants/betTypes.js\");\n/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./style */ \"./src/renderer/baccarat/player/views/GameBoard/style.js\");\n/* harmony import */ var _components_Grid_components_CardsHand__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../../components/Grid/components/CardsHand */ \"./src/renderer/baccarat/player/components/Grid/components/CardsHand/index.js\");\n/* harmony import */ var _store_selectors_cards__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../../store/selectors/cards */ \"./src/renderer/baccarat/player/store/selectors/cards.js\");\n/* harmony import */ var _tykhe_hooks__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../../../tykhe/hooks */ \"./src/renderer/baccarat/tykhe/hooks/index.js\");\n/* harmony import */ var _tykhe_primitives_ProgressBar_style__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../../../tykhe/primitives/ProgressBar/style */ \"./src/renderer/baccarat/tykhe/primitives/ProgressBar/style.js\");\n/* harmony import */ var _tykhe_bootstrap_components_ProgressBar__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../../../tykhe/bootstrap/components/ProgressBar */ \"./src/renderer/baccarat/tykhe/bootstrap/components/ProgressBar/index.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst {\n  canPlaceBetsSelector,\n  selectedChipSelector,\n  betsSelector,\n  chipsSelector\n} = _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_5__.selectors;\n\n\n\nconst {\n  soundActions,\n  menuActions,\n  betActions\n} = _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_5__.actions;\nconst {\n  sound\n} = soundActions;\n\n//Changes \nconst isHandheld = false;\n\nconst {\n  DESKTOP,\n  PORTRAIT\n} = _uiConfig__WEBPACK_IMPORTED_MODULE_23__.UI_CONFIG.COMPONENTS.GAMEBOARD;\nconst {\n  MAIN_BETS,\n  SIDE_BETS,\n  GAME_ID\n} = _uiConfig__WEBPACK_IMPORTED_MODULE_23__.UI_CONFIG;\n\nconst {\n  SMALL,\n  BIG,\n  PERFECT_PAIR,\n  EITHER_PAIR,\n  PLAYER_PAIR,\n  BANKER_PAIR\n} = _constants_betTypes__WEBPACK_IMPORTED_MODULE_24__.SIDEBETS;\nconst gridLocaleKeys = {\n  player: 'bets.player',\n  tie: 'bets.tie',\n  suitedTie: 'bets.suited_tie',\n  banker: 'bets.banker',\n  dragon: 'bets.dragon',\n  tiger: 'bets.tiger',\n  bowler: 'bets.bowler',\n  batsman: 'bets.batsman',\n  playerPair: 'bets.player_pair',\n  bankerPair: 'bets.banker_pair',\n  perfectPair: 'bets.perfect_pair_b',\n  big: 'bets.big',\n  small: 'bets.small',\n  eitherPair: 'bets.either_pair',\n  superSix: 'bets.super_six',\n  dragonBonus: 'bets.dragon_bonus',\n  playerNatural: 'bets.player_natural',\n  bankerNatural: 'bets.banker_natural',\n  totals1to4: 'bets.totals_1_to_4',\n  totals5to6: 'bets.totals_5_to_6',\n  totals7: 'bets.totals_7',\n  totals8: 'bets.totals_8',\n  totals9: 'bets.totals_9',\n  winningTotalTooltip: 'baccarat_ui.winning_total_tooltip'\n};\nconst winningPulseClassMap = {\n  [_constants_strings__WEBPACK_IMPORTED_MODULE_19__.PLAYER]: _style__WEBPACK_IMPORTED_MODULE_25__.playerPulseContainer,\n  [_constants_strings__WEBPACK_IMPORTED_MODULE_19__.BANKER]: _style__WEBPACK_IMPORTED_MODULE_25__.bankerPulseContainer,\n  [_constants_strings__WEBPACK_IMPORTED_MODULE_19__.TIE]: _style__WEBPACK_IMPORTED_MODULE_25__.tiePulseContainer\n};\n\n\n\n\n\n\n\n\n\nconst isCW = _uiConfig__WEBPACK_IMPORTED_MODULE_23__.UI_CONFIG.isCricketWar();\nconst isDT = _uiConfig__WEBPACK_IMPORTED_MODULE_23__.UI_CONFIG.isDragonTiger();\nconst hasSuitedTie = isCW || isDT;\nconst isKO = GAME_ID === 20;\nconst getPlayerData = gameResult => {\n  const {\n    isNaturalHand\n  } = gameResult;\n  const isPlayerPair = gameResult.isPlayerPair && !isKO;\n  const isBankerPair = gameResult.isBankerPair && !isKO;\n  const isBankerNatural = isKO && isNaturalHand && gameResult.WinningHand === _constants_strings__WEBPACK_IMPORTED_MODULE_19__.BANKER;\n  const isPlayerNatural = isKO && isNaturalHand && gameResult.WinningHand === _constants_strings__WEBPACK_IMPORTED_MODULE_19__.PLAYER;\n  return [isPlayerPair, isBankerPair, isBankerNatural, isPlayerNatural];\n};\nfunction GameBoard({\n  table,\n  canPlaceBets,\n  placeBet,\n  currentChip,\n  disabledPerfectPairAndEitherPair,\n  disabledPlayerPairAndBankerPair,\n  disabledSmallAndBig,\n  showStatistics,\n  statisticsData,\n  inactive,\n  roundStatus,\n  winningNumber,\n  playSound,\n  limits\n}) {\n  const showResultMessage = roundStatus === _tykhe_constants_es__WEBPACK_IMPORTED_MODULE_4__.GAME_RESULT;\n  const locales = (0,_tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_5__.useIntl)({\n    keys: gridLocaleKeys\n  });\n  const orientation = (0,_tykhe_hooks__WEBPACK_IMPORTED_MODULE_28__.useOrientationChange)();\n  const gameResult = (0,_tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_5__.useGameResult)();\n  const gameStatus = (0,_tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_5__.useGameStatus)();\n  const isMobilePortrait = orientation === 'portrait' && isHandheld;\n  const isMobileLandscape = orientation === 'landscape' && isHandheld;\n  const [isPlayerPair, isBankerPair, isBankerNatural, isPlayerNatural] = getPlayerData(gameResult);\n  const [{\n    cards: {\n      banker,\n      player\n    }\n  }] = (0,_tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_5__.useAppState)((0,ramda__WEBPACK_IMPORTED_MODULE_31__[\"default\"])({\n    cards: _store_selectors_cards__WEBPACK_IMPORTED_MODULE_27__.cardsSelector\n  }));\n  const hasSuitedTie = false;\n  const {\n    COMPONENT: Grid,\n    PROPS: svgProps\n  } = isMobilePortrait ? PORTRAIT : DESKTOP;\n\n  //Filters\n  const smallAndBigFilter = sideBet => !([SMALL, BIG].includes(sideBet) && disabledSmallAndBig);\n  const perfectPairAndEitherPairFilter = sideBet => !([PERFECT_PAIR, EITHER_PAIR].includes(sideBet) && disabledPerfectPairAndEitherPair);\n  const playerPairAndBankerPairFilter = sideBet => !([PLAYER_PAIR, BANKER_PAIR].includes(sideBet) && disabledPlayerPairAndBankerPair);\n  const filters = [smallAndBigFilter, perfectPairAndEitherPairFilter, playerPairAndBankerPairFilter];\n  const sideBetsToDisable = {\n    disabledSmallAndBig,\n    disabledPerfectPairAndEitherPair,\n    disabledPlayerPairAndBankerPair\n  };\n  const sideBets = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => SIDE_BETS.filter(sideBet => filters.every(filter => filter(sideBet))).map(sideBet => ({\n    id: sideBet,\n    ...sideBetsToDisable\n  })), [sideBetsToDisable, filters]);\n  const _statisticsData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    const {\n      TieCount,\n      TieAmount,\n      BankerCount,\n      BankerAmount,\n      PlayerCount,\n      PlayerAmount,\n      SuitedTieAmount = 0\n    } = statisticsData;\n    const total = TieAmount + BankerAmount + PlayerAmount + SuitedTieAmount;\n    return {\n      TieCount,\n      TieAmount,\n      BankerCount,\n      BankerAmount,\n      PlayerCount,\n      PlayerAmount,\n      TiePercent: TieAmount * 100 / total,\n      BankerPercent: BankerAmount * 100 / total,\n      PlayerPercent: PlayerAmount * 100 / total,\n      ...(hasSuitedTie ? {\n        SuitedTiePercent: SuitedTieAmount * 100 / total\n      } : {})\n    };\n  }, [statisticsData]);\n  return (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_32__.jsx)(_contexts_preview__WEBPACK_IMPORTED_MODULE_17__.Provider, {\n    children: (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_32__.jsx)(_contexts_stats__WEBPACK_IMPORTED_MODULE_18__.Provider, {\n      children: (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_32__.jsxs)(_style__WEBPACK_IMPORTED_MODULE_25__.Container, {\n        \"data-name\": \"game-board\",\n        className: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_3__.cx)({\n          [_style__WEBPACK_IMPORTED_MODULE_25__.mobileGameBoard]: isHandheld,\n          [_style__WEBPACK_IMPORTED_MODULE_25__.inactiveGameBoard]: isMobileLandscape && !canPlaceBets,\n          ...(gameStatus === _tykhe_constants_es__WEBPACK_IMPORTED_MODULE_4__.GAME_RESULT ? {\n            [_style__WEBPACK_IMPORTED_MODULE_25__.playerPairPulseContainer]: isPlayerPair || isPlayerNatural,\n            [_style__WEBPACK_IMPORTED_MODULE_25__.bankerPairPulseContainer]: isBankerPair || isBankerNatural\n            // [superSixPulseContainer]: gameResult.isSuperSix && gameResult.WinningHand === BANKER,\n            // [suitedTiePulseContainer]: hasSuitedTie && gameResult.isSuitedTie,\n          } : {})\n        }, gameStatus === _tykhe_constants_es__WEBPACK_IMPORTED_MODULE_4__.GAME_RESULT ? winningPulseClassMap[gameResult.WinningHand] : ''),\n        children: [(0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_32__.jsxs)(_style__WEBPACK_IMPORTED_MODULE_25__.MainContainer, {\n          children: [!isHandheld && (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_32__.jsx)(_tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_5__.GameStatusProvider, {\n            children: ({\n              scaleProgress,\n              duration,\n              label,\n              color,\n              roundStatus,\n              timeDisplay,\n              count\n            }) => (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_32__.jsx)(_style__WEBPACK_IMPORTED_MODULE_25__.Header, {\n              className: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_3__.cx)(_style__WEBPACK_IMPORTED_MODULE_25__.headerClassName, {\n                [_style__WEBPACK_IMPORTED_MODULE_25__.progressBarAnimation]: count > 0\n              }),\n              style: {\n                '--duration': `${duration}s`,\n                '--remaining': Math.ceil(scaleProgress),\n                '--color': color\n              },\n              \"data-e2e\": \"progress-bar\",\n              \"data-current-seconds\": count,\n              \"data-round-status\": roundStatus,\n              children: (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_32__.jsxs)(_tykhe_primitives_ProgressBar_style__WEBPACK_IMPORTED_MODULE_29__.GameStatusLabel, {\n                children: [(0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_32__.jsx)(\"span\", {\n                  children: timeDisplay\n                }), ' ', label]\n              })\n            })\n          }, \"gameStatus\"), (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_32__.jsx)(_style__WEBPACK_IMPORTED_MODULE_25__.BetGridContainer, {\n            children: (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_32__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Suspense, {\n              fallback: null,\n              children: (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_32__.jsx)(Grid, {\n                mainBets: MAIN_BETS,\n                sideBets: sideBets,\n                svgProps,\n                placeBet: type => placeBet({\n                  type,\n                  value: currentChip.value\n                }),\n                locales,\n                showStatistics: false,\n                statisticsData: {\n                  ..._statisticsData\n                },\n                className: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_3__.cx)({\n                  [_style__WEBPACK_IMPORTED_MODULE_25__.inactiveGrid]: !canPlaceBets,\n                  [_style__WEBPACK_IMPORTED_MODULE_25__.tiltedGrid]: isHandheld && !canPlaceBets\n                })\n              })\n            })\n          })]\n        }), (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_32__.jsx)(_style__WEBPACK_IMPORTED_MODULE_25__.ResultMessageContainer, {\n          \"data-name\": \"result-display-container\",\n          children: showResultMessage ? (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_32__.jsx)(_components_ResultDisplay__WEBPACK_IMPORTED_MODULE_15__[\"default\"], {}) : null\n        })]\n      })\n    })\n  });\n}\nGameBoard.propTypes = {\n  inactive: prop_types__WEBPACK_IMPORTED_MODULE_33__.bool,\n  roundStatus: prop_types__WEBPACK_IMPORTED_MODULE_33__.string,\n  winningNumber: prop_types__WEBPACK_IMPORTED_MODULE_33__.number,\n  playSound: prop_types__WEBPACK_IMPORTED_MODULE_33__.func\n};\nGameBoard.defaultProps = {\n  playSound: () => {}\n};\nconst mapStateToProps = (0,ramda__WEBPACK_IMPORTED_MODULE_31__[\"default\"])({\n  table: _tykhe_bootstrap_store_selectors__WEBPACK_IMPORTED_MODULE_22__.tableSelector,\n  canPlaceBets: canPlaceBetsSelector,\n  currentChip: selectedChipSelector,\n  bets: betsSelector,\n  chips: chipsSelector,\n  disabledPerfectPairAndEitherPair: _store_selectors_config__WEBPACK_IMPORTED_MODULE_20__.disabledPerfectPairAndEitherPairSelector,\n  disabledPlayerPairAndBankerPair: _store_selectors_config__WEBPACK_IMPORTED_MODULE_20__.disabledPlayerPairAndBankerPairSelector,\n  disabledSmallAndBig: _store_selectors_config__WEBPACK_IMPORTED_MODULE_20__.disabledSmallAndBigSelector,\n  showStatistics: _store_selectors_config__WEBPACK_IMPORTED_MODULE_20__.showStatisticsSelector,\n  statisticsData: _store_selectors_statistics__WEBPACK_IMPORTED_MODULE_21__.statisticsDataSelector,\n  inactive: _tykhe_bootstrap_store_selectors__WEBPACK_IMPORTED_MODULE_22__.idleGameBoardSelector,\n  roundStatus: _tykhe_bootstrap_store_selectors__WEBPACK_IMPORTED_MODULE_22__.roundStatusSelector,\n  limits: _tykhe_bootstrap_store_selectors__WEBPACK_IMPORTED_MODULE_22__.currentLimitsSelector\n});\nconst mapDispatchToProps = {\n  playSound: sound.play,\n  placeBet: betActions.bet.request\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_redux__WEBPACK_IMPORTED_MODULE_2__.connect)(mapStateToProps, mapDispatchToProps)(GameBoard));\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/views/GameBoard/GameBoard.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/views/GameBoard/actions/style.js":
/*!***********************************************************************!*\
  !*** ./src/renderer/baccarat/player/views/GameBoard/actions/style.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACTION_HEIGHT: () => (/* binding */ ACTION_HEIGHT),\n/* harmony export */   ACTION_WIDTH: () => (/* binding */ ACTION_WIDTH),\n/* harmony export */   Container: () => (/* binding */ Container),\n/* harmony export */   LANDSCAPE_ACTION_HEIGHT: () => (/* binding */ LANDSCAPE_ACTION_HEIGHT),\n/* harmony export */   LANDSCAPE_ACTION_WIDTH: () => (/* binding */ LANDSCAPE_ACTION_WIDTH),\n/* harmony export */   leftContainerClassName: () => (/* binding */ leftContainerClassName),\n/* harmony export */   rightContainerClassName: () => (/* binding */ rightContainerClassName)\n/* harmony export */ });\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled/base */ \"./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js\");\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/css */ \"./node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var _tykhe_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../tykhe/utils */ \"./src/renderer/baccarat/tykhe/utils/index.js\");\n/* harmony import */ var _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../tykhe/bootstrap */ \"./src/renderer/baccarat/tykhe/bootstrap/index.js\");\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\n\n\nconst ACTION_WIDTH = 52;\nconst ACTION_HEIGHT = 44;\nconst LANDSCAPE_ACTION_WIDTH = 40;\nconst LANDSCAPE_ACTION_HEIGHT = 32;\nconst {\n  palette\n} = _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_3__.theme;\nconst Container = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"button\",  false ? 0 : {\n  target: \"e1gq6qk0\",\n  label: \"Container\"\n})(\"margin:0;border:0;padding:0;background:\", palette.background, \";width:\", ACTION_WIDTH, \"px;height:\", ACTION_HEIGHT, \"px;display:flex;justify-content:center;align-items:center;outline:none;position:relative;overflow:hidden;flex-shrink:0;flex:none;svg{fill:\", palette.foreground, \";color:\", palette.foreground, \";}@media all and (orientation: landscape){width:\", LANDSCAPE_ACTION_WIDTH, \"px;height:\", LANDSCAPE_ACTION_HEIGHT, \"px;background:transparent;border:1px solid \", (0,_tykhe_utils__WEBPACK_IMPORTED_MODULE_2__.hex2rgba)(palette.foreground, 0.2), \";}\" + ( false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcYWN0aW9uc1xcc3R5bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBYXNDIiwiZmlsZSI6IkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcYWN0aW9uc1xcc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MsIGtleWZyYW1lcyB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcclxuaW1wb3J0IHsgaGV4MnJnYmEsIH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlraGUvdXRpbHMnO1xyXG5cclxuaW1wb3J0IHsgdGhlbWUsIH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlraGUvYm9vdHN0cmFwJztcclxuXHJcbmV4cG9ydCBjb25zdCBBQ1RJT05fV0lEVEggPSA1MjtcclxuZXhwb3J0IGNvbnN0IEFDVElPTl9IRUlHSFQgPSA0NDtcclxuZXhwb3J0IGNvbnN0IExBTkRTQ0FQRV9BQ1RJT05fV0lEVEggPSA0MDtcclxuZXhwb3J0IGNvbnN0IExBTkRTQ0FQRV9BQ1RJT05fSEVJR0hUID0gMzI7XHJcblxyXG5jb25zdCB7IHBhbGV0dGUsIH0gPSB0aGVtZTtcclxuXHJcbmV4cG9ydCBjb25zdCBDb250YWluZXIgPSBzdHlsZWQuYnV0dG9uYFxyXG4gIG1hcmdpbjogMDtcclxuICBib3JkZXI6IDA7XHJcbiAgcGFkZGluZzogMDtcclxuICBiYWNrZ3JvdW5kOiAke3BhbGV0dGUuYmFja2dyb3VuZH07XHJcbiAgd2lkdGg6ICR7QUNUSU9OX1dJRFRIfXB4O1xyXG4gIGhlaWdodDogJHtBQ1RJT05fSEVJR0hUfXB4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBvdXRsaW5lOiBub25lO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGZsZXgtc2hyaW5rOiAwO1xyXG4gIGZsZXg6IG5vbmU7XHJcblxyXG4gIHN2ZyB7XHJcbiAgICBmaWxsOiAke3BhbGV0dGUuZm9yZWdyb3VuZH07XHJcbiAgICBjb2xvcjogJHtwYWxldHRlLmZvcmVncm91bmR9O1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIGFsbCBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcclxuICAgIHdpZHRoOiAke0xBTkRTQ0FQRV9BQ1RJT05fV0lEVEh9cHg7XHJcbiAgICBoZWlnaHQ6ICR7TEFORFNDQVBFX0FDVElPTl9IRUlHSFR9cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICR7aGV4MnJnYmEocGFsZXR0ZS5mb3JlZ3JvdW5kLCAwLjIpfTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgbGVmdENvbnRhaW5lckNsYXNzTmFtZSA9IGNzc2BcclxuICBib3JkZXItcmFkaXVzOiAwIDhweCA4cHggMDtcclxuXHJcbiAgQG1lZGlhIGFsbCBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIG1hcmdpbi1yaWdodDogOHB4O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCByaWdodENvbnRhaW5lckNsYXNzTmFtZSA9IGNzc2BcclxuICBib3JkZXItcmFkaXVzOiA4cHggMCAwIDhweDtcclxuXHJcbiAgQG1lZGlhIGFsbCBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIG1hcmdpbi1sZWZ0OiA4cHg7XHJcbiAgfVxyXG5gO1xyXG4iXX0= */\"));\nconst leftContainerClassName = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)( false ? 0 : {\n  name: \"1c5jn54-leftContainerClassName\",\n  styles: \"border-radius:0 8px 8px 0;@media all and (orientation: landscape){border-radius:5px;margin-right:8px;};label:leftContainerClassName;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcYWN0aW9uc1xcc3R5bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMEN5QyIsImZpbGUiOiJDOlxcVXNlcnNcXFR5a2hlXFxlbGVjdHJvbmFwcHNcXHR5a2hlLWVsZWN0cm9uLWFwcHMtYmFjY2FyYXRcXHNyY1xccmVuZGVyZXJcXGJhY2NhcmF0XFxwbGF5ZXJcXHZpZXdzXFxHYW1lQm9hcmRcXGFjdGlvbnNcXHN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMgfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XHJcbmltcG9ydCB7IGhleDJyZ2JhLCB9IGZyb20gJy4uLy4uLy4uLy4uL3R5a2hlL3V0aWxzJztcclxuXHJcbmltcG9ydCB7IHRoZW1lLCB9IGZyb20gJy4uLy4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcCc7XHJcblxyXG5leHBvcnQgY29uc3QgQUNUSU9OX1dJRFRIID0gNTI7XHJcbmV4cG9ydCBjb25zdCBBQ1RJT05fSEVJR0hUID0gNDQ7XHJcbmV4cG9ydCBjb25zdCBMQU5EU0NBUEVfQUNUSU9OX1dJRFRIID0gNDA7XHJcbmV4cG9ydCBjb25zdCBMQU5EU0NBUEVfQUNUSU9OX0hFSUdIVCA9IDMyO1xyXG5cclxuY29uc3QgeyBwYWxldHRlLCB9ID0gdGhlbWU7XHJcblxyXG5leHBvcnQgY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmJ1dHRvbmBcclxuICBtYXJnaW46IDA7XHJcbiAgYm9yZGVyOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgYmFja2dyb3VuZDogJHtwYWxldHRlLmJhY2tncm91bmR9O1xyXG4gIHdpZHRoOiAke0FDVElPTl9XSURUSH1weDtcclxuICBoZWlnaHQ6ICR7QUNUSU9OX0hFSUdIVH1weDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgb3V0bGluZTogbm9uZTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBmbGV4LXNocmluazogMDtcclxuICBmbGV4OiBub25lO1xyXG5cclxuICBzdmcge1xyXG4gICAgZmlsbDogJHtwYWxldHRlLmZvcmVncm91bmR9O1xyXG4gICAgY29sb3I6ICR7cGFsZXR0ZS5mb3JlZ3JvdW5kfTtcclxuICB9XHJcblxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICB3aWR0aDogJHtMQU5EU0NBUEVfQUNUSU9OX1dJRFRIfXB4O1xyXG4gICAgaGVpZ2h0OiAke0xBTkRTQ0FQRV9BQ1RJT05fSEVJR0hUfXB4O1xyXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAke2hleDJyZ2JhKHBhbGV0dGUuZm9yZWdyb3VuZCwgMC4yKX07XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGxlZnRDb250YWluZXJDbGFzc05hbWUgPSBjc3NgXHJcbiAgYm9yZGVyLXJhZGl1czogMCA4cHggOHB4IDA7XHJcblxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDhweDtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgcmlnaHRDb250YWluZXJDbGFzc05hbWUgPSBjc3NgXHJcbiAgYm9yZGVyLXJhZGl1czogOHB4IDAgMCA4cHg7XHJcblxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBtYXJnaW4tbGVmdDogOHB4O1xyXG4gIH1cclxuYDtcclxuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst rightContainerClassName = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)( false ? 0 : {\n  name: \"19m0zhw-rightContainerClassName\",\n  styles: \"border-radius:8px 0 0 8px;@media all and (orientation: landscape){border-radius:5px;margin-left:8px;};label:rightContainerClassName;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcYWN0aW9uc1xcc3R5bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUQwQyIsImZpbGUiOiJDOlxcVXNlcnNcXFR5a2hlXFxlbGVjdHJvbmFwcHNcXHR5a2hlLWVsZWN0cm9uLWFwcHMtYmFjY2FyYXRcXHNyY1xccmVuZGVyZXJcXGJhY2NhcmF0XFxwbGF5ZXJcXHZpZXdzXFxHYW1lQm9hcmRcXGFjdGlvbnNcXHN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMgfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XHJcbmltcG9ydCB7IGhleDJyZ2JhLCB9IGZyb20gJy4uLy4uLy4uLy4uL3R5a2hlL3V0aWxzJztcclxuXHJcbmltcG9ydCB7IHRoZW1lLCB9IGZyb20gJy4uLy4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcCc7XHJcblxyXG5leHBvcnQgY29uc3QgQUNUSU9OX1dJRFRIID0gNTI7XHJcbmV4cG9ydCBjb25zdCBBQ1RJT05fSEVJR0hUID0gNDQ7XHJcbmV4cG9ydCBjb25zdCBMQU5EU0NBUEVfQUNUSU9OX1dJRFRIID0gNDA7XHJcbmV4cG9ydCBjb25zdCBMQU5EU0NBUEVfQUNUSU9OX0hFSUdIVCA9IDMyO1xyXG5cclxuY29uc3QgeyBwYWxldHRlLCB9ID0gdGhlbWU7XHJcblxyXG5leHBvcnQgY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmJ1dHRvbmBcclxuICBtYXJnaW46IDA7XHJcbiAgYm9yZGVyOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgYmFja2dyb3VuZDogJHtwYWxldHRlLmJhY2tncm91bmR9O1xyXG4gIHdpZHRoOiAke0FDVElPTl9XSURUSH1weDtcclxuICBoZWlnaHQ6ICR7QUNUSU9OX0hFSUdIVH1weDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgb3V0bGluZTogbm9uZTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBmbGV4LXNocmluazogMDtcclxuICBmbGV4OiBub25lO1xyXG5cclxuICBzdmcge1xyXG4gICAgZmlsbDogJHtwYWxldHRlLmZvcmVncm91bmR9O1xyXG4gICAgY29sb3I6ICR7cGFsZXR0ZS5mb3JlZ3JvdW5kfTtcclxuICB9XHJcblxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICB3aWR0aDogJHtMQU5EU0NBUEVfQUNUSU9OX1dJRFRIfXB4O1xyXG4gICAgaGVpZ2h0OiAke0xBTkRTQ0FQRV9BQ1RJT05fSEVJR0hUfXB4O1xyXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAke2hleDJyZ2JhKHBhbGV0dGUuZm9yZWdyb3VuZCwgMC4yKX07XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGxlZnRDb250YWluZXJDbGFzc05hbWUgPSBjc3NgXHJcbiAgYm9yZGVyLXJhZGl1czogMCA4cHggOHB4IDA7XHJcblxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDhweDtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgcmlnaHRDb250YWluZXJDbGFzc05hbWUgPSBjc3NgXHJcbiAgYm9yZGVyLXJhZGl1czogOHB4IDAgMCA4cHg7XHJcblxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBtYXJnaW4tbGVmdDogOHB4O1xyXG4gIH1cclxuYDtcclxuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/views/GameBoard/actions/style.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/views/GameBoard/sections/Bottom/svgUtils.js":
/*!**********************************************************************************!*\
  !*** ./src/renderer/baccarat/player/views/GameBoard/sections/Bottom/svgUtils.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IconSVG: () => (/* binding */ IconSVG),\n/* harmony export */   TextSVG: () => (/* binding */ TextSVG),\n/* harmony export */   getCircleSVG: () => (/* binding */ getCircleSVG),\n/* harmony export */   mapSvg: () => (/* binding */ mapSvg)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ramda__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ramda */ \"./node_modules/ramda/es/isNil.js\");\n/* harmony import */ var _assets_icons_circle_icon_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../assets/icons/circle_icon.svg */ \"./src/renderer/baccarat/player/assets/icons/circle_icon.svg\");\n/* harmony import */ var _assets_icons_circle_icon_svg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_assets_icons_circle_icon_svg__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _assets_icons_circle_text_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../assets/icons/circle_text.svg */ \"./src/renderer/baccarat/player/assets/icons/circle_text.svg\");\n/* harmony import */ var _assets_icons_circle_text_svg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_assets_icons_circle_text_svg__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\n\n\n\n\n\n// eslint-disable-next-line react/prop-types\n\nconst TextSVG = ({\n  text: content,\n  ...props\n}) => (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"text\", {\n  x: \"50%\",\n  y: \"50%\",\n  textAnchor: \"middle\",\n  dominantBaseline: \"central\",\n  fontSize: \"12\",\n  fill: \"#000\",\n  ...props,\n  children: content\n});\n\n// eslint-disable-next-line react/prop-types\nconst IconSVG = ({\n  svg,\n  ...props\n}) => (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"g\", {\n  dangerouslySetInnerHTML: {\n    __html: svg\n  },\n  ...props\n});\nconst getCircleSVG = icon => !(0,ramda__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(icon) ? (_assets_icons_circle_icon_svg__WEBPACK_IMPORTED_MODULE_1___default()) : (_assets_icons_circle_text_svg__WEBPACK_IMPORTED_MODULE_2___default());\nconst mapSvg = (text, icon) => svg => !(0,ramda__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(icon) ? svg.replace('{{icon}}', icon) : svg.replace('{{text}}', text);\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/views/GameBoard/sections/Bottom/svgUtils.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/views/GameBoard/sections/Center/Center.js":
/*!********************************************************************************!*\
  !*** ./src/renderer/baccarat/player/views/GameBoard/sections/Center/Center.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/css */ \"./node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var bowser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bowser */ \"./node_modules/bowser/es5.js\");\n/* harmony import */ var bowser__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bowser__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../tykhe/bootstrap */ \"./src/renderer/baccarat/tykhe/bootstrap/index.js\");\n/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../style */ \"./src/renderer/baccarat/player/views/GameBoard/sections/style.js\");\n/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./style */ \"./src/renderer/baccarat/player/views/GameBoard/sections/Center/style.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\n\n\n\n\n\n\n\n\n\nconst isHandheld = (bowser__WEBPACK_IMPORTED_MODULE_2___default().mobile) || (bowser__WEBPACK_IMPORTED_MODULE_2___default().tablet);\nconst Center = ({\n  children,\n  className,\n  showTimer,\n  inactive,\n  ...rest\n}) => (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(_style__WEBPACK_IMPORTED_MODULE_4__.Section, {\n  className: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.cx)(_style__WEBPACK_IMPORTED_MODULE_5__.sectionClassName, {\n    [_style__WEBPACK_IMPORTED_MODULE_5__.idleMobileGridSection]: isHandheld && inactive\n  }, isHandheld ? _style__WEBPACK_IMPORTED_MODULE_5__.mobileGridSection : _style__WEBPACK_IMPORTED_MODULE_5__.desktopGridClassName, className),\n  ...rest,\n  children: [!isHandheld && (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_3__.GameStatusProvider, {\n    children: ({\n      scaleProgress,\n      duration,\n      label,\n      color,\n      roundStatus,\n      timeDisplay,\n      count\n    }) => (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_style__WEBPACK_IMPORTED_MODULE_4__.Header, {\n      className: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.cx)(_style__WEBPACK_IMPORTED_MODULE_5__.headerClassName, {\n        [_style__WEBPACK_IMPORTED_MODULE_5__.progressBarAnimation]: count > 0\n      }),\n      style: {\n        '--duration': `${duration}s`,\n        '--remaining': Math.ceil(scaleProgress),\n        '--color': color\n      },\n      \"data-e2e\": \"progress-bar\",\n      \"data-current-seconds\": count,\n      \"data-round-status\": roundStatus,\n      children: (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(_style__WEBPACK_IMPORTED_MODULE_5__.GameStatusLabel, {\n        children: [(0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"span\", {\n          children: timeDisplay\n        }), ' ', label]\n      })\n    })\n  }, \"gameStatus\"), (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_style__WEBPACK_IMPORTED_MODULE_4__.Main, {\n    className: isHandheld ? _style__WEBPACK_IMPORTED_MODULE_4__.mobileMainClassName : _style__WEBPACK_IMPORTED_MODULE_4__.desktopMainClassName,\n    children: children\n  })]\n});\nCenter.propTypes = {\n  showTimer: prop_types__WEBPACK_IMPORTED_MODULE_7__.bool,\n  inactive: prop_types__WEBPACK_IMPORTED_MODULE_7__.bool\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Center);\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/views/GameBoard/sections/Center/Center.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/views/GameBoard/sections/Center/style.js":
/*!*******************************************************************************!*\
  !*** ./src/renderer/baccarat/player/views/GameBoard/sections/Center/style.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GameStatusLabel: () => (/* binding */ GameStatusLabel),\n/* harmony export */   desktopGridClassName: () => (/* binding */ desktopGridClassName),\n/* harmony export */   headerClassName: () => (/* binding */ headerClassName),\n/* harmony export */   idleMobileGridSection: () => (/* binding */ idleMobileGridSection),\n/* harmony export */   mobileGridSection: () => (/* binding */ mobileGridSection),\n/* harmony export */   progressBarAnimation: () => (/* binding */ progressBarAnimation),\n/* harmony export */   sectionClassName: () => (/* binding */ sectionClassName)\n/* harmony export */ });\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled/base */ \"./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js\");\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/css */ \"./node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var _tykhe_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../tykhe/utils */ \"./src/renderer/baccarat/tykhe/utils/index.js\");\n/* harmony import */ var _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../tykhe/bootstrap */ \"./src/renderer/baccarat/tykhe/bootstrap/index.js\");\n/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../style */ \"./src/renderer/baccarat/player/views/GameBoard/sections/style.js\");\n/* harmony import */ var _actions_style__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../actions/style */ \"./src/renderer/baccarat/player/views/GameBoard/actions/style.js\");\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\n\n\n\n\nconst {\n  palette,\n  tints\n} = _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_3__.theme;\nconst progressBarKeyframe = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.keyframes)( false ? 0 : {\n  name: \"ktrfcq-progressBarKeyframe\",\n  styles: \"from{transform:scaleX(var(--remaining));}to{transform:scaleX(0);};label:progressBarKeyframe;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXENlbnRlclxcc3R5bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBVXFDIiwiZmlsZSI6IkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXENlbnRlclxcc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MsIGtleWZyYW1lcyB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcclxuaW1wb3J0IHsgaGV4MnJnYmEsIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlraGUvdXRpbHMnO1xyXG5cclxuaW1wb3J0IHsgdGhlbWUsIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlraGUvYm9vdHN0cmFwJztcclxuaW1wb3J0IHsgTWFpbiwgfSBmcm9tICcuLi9zdHlsZSc7XHJcbmltcG9ydCB7IEFDVElPTl9XSURUSCwgfSBmcm9tICcuLi8uLi9hY3Rpb25zL3N0eWxlJztcclxuXHJcbmNvbnN0IHsgcGFsZXR0ZSwgdGludHMsIH0gPSB0aGVtZTtcclxuXHJcbmNvbnN0IHByb2dyZXNzQmFyS2V5ZnJhbWUgPSBrZXlmcmFtZXNgXHJcbiAgZnJvbSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlWCh2YXIoLS1yZW1haW5pbmcpKTtcclxuICB9XHJcbiAgdG8ge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZVgoMCk7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHByb2dyZXNzQmFyQW5pbWF0aW9uID0gY3NzYFxyXG4gICY6OmJlZm9yZSB7XHJcbiAgICBhbmltYXRpb246ICR7cHJvZ3Jlc3NCYXJLZXlmcmFtZX0gdmFyKC0tZHVyYXRpb24pIGxpbmVhcjtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3Qgc2VjdGlvbkNsYXNzTmFtZSA9IGNzc2BcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgaGVhZGVyQ2xhc3NOYW1lID0gY3NzYFxyXG4gIC0tcmVtYWluaW5nOiAxO1xyXG4gIC0tZHVyYXRpb246IDEwcztcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgY29sb3I6ICR7cGFsZXR0ZS5wcmltYXJ5Q29udHJhc3R9O1xyXG4gIGZpbGw6ICR7cGFsZXR0ZS5wcmltYXJ5Q29udHJhc3R9O1xyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICR7aGV4MnJnYmEocGFsZXR0ZS5wcmltYXJ5LCB0aW50cy5wcmltYXJ5KX07XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICY6YmVmb3JlIHtcclxuICAgIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQ7XHJcbiAgICB3aWxsLWNoYW5nZTogdHJhbnNmb3JtO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yKTtcclxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMXMgbGluZWFyLCB0cmFuc2Zvcm0gdmFyKC0tZHVyYXRpb24pIGxpbmVhcjtcclxuICAgIHotaW5kZXg6IC0xO1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBkZXNrdG9wR3JpZENsYXNzTmFtZSA9IGNzc2BcclxuICBmbGV4OiAxLjU7XHJcblxyXG4gICR7TWFpbn0ge1xyXG4gICAgcGFkZGluZzogNnB4O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBtb2JpbGVHcmlkU2VjdGlvbiA9IGNzc2BcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB3aWR0aDogYXV0bztcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgdG9wOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcblxyXG4gICR7TWFpbn0ge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAwICR7QUNUSU9OX1dJRFRIICsgMTZ9cHg7XHJcbiAgICB0cmFuc2l0aW9uOiBoZWlnaHQgMC4yN3MgbGluZWFyO1xyXG5cclxuICAgIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgbWFyZ2luOiAwICR7QUNUSU9OX1dJRFRIfXB4IDAgMDtcclxuICB9XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogbm9uZTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgaWRsZU1vYmlsZUdyaWRTZWN0aW9uID0gY3NzYFxyXG4gIG1hcmdpbjogMDtcclxuICBwYWRkaW5nLWJvdHRvbTogMDtcclxuICAke01haW59IHtcclxuICAgIGhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xyXG4gICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBHYW1lU3RhdHVzTGFiZWwgPSBzdHlsZWQuc3BhbmBcclxuICBjb2xvcjogI2ZmZjtcclxuICB6LWluZGV4OiAxO1xyXG5gO1xyXG4iXX0= */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst progressBarAnimation = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)(\"&::before{animation:\", progressBarKeyframe, \" var(--duration) linear;}\" + ( false ? 0 : \";label:progressBarAnimation;\"),  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXENlbnRlclxcc3R5bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUJ1QyIsImZpbGUiOiJDOlxcVXNlcnNcXFR5a2hlXFxlbGVjdHJvbmFwcHNcXHR5a2hlLWVsZWN0cm9uLWFwcHMtYmFjY2FyYXRcXHNyY1xccmVuZGVyZXJcXGJhY2NhcmF0XFxwbGF5ZXJcXHZpZXdzXFxHYW1lQm9hcmRcXHNlY3Rpb25zXFxDZW50ZXJcXHN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMgfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XHJcbmltcG9ydCB7IGhleDJyZ2JhLCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5a2hlL3V0aWxzJztcclxuXHJcbmltcG9ydCB7IHRoZW1lLCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcCc7XHJcbmltcG9ydCB7IE1haW4sIH0gZnJvbSAnLi4vc3R5bGUnO1xyXG5pbXBvcnQgeyBBQ1RJT05fV0lEVEgsIH0gZnJvbSAnLi4vLi4vYWN0aW9ucy9zdHlsZSc7XHJcblxyXG5jb25zdCB7IHBhbGV0dGUsIHRpbnRzLCB9ID0gdGhlbWU7XHJcblxyXG5jb25zdCBwcm9ncmVzc0JhcktleWZyYW1lID0ga2V5ZnJhbWVzYFxyXG4gIGZyb20ge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZVgodmFyKC0tcmVtYWluaW5nKSk7XHJcbiAgfVxyXG4gIHRvIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGVYKDApO1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBwcm9ncmVzc0JhckFuaW1hdGlvbiA9IGNzc2BcclxuICAmOjpiZWZvcmUge1xyXG4gICAgYW5pbWF0aW9uOiAke3Byb2dyZXNzQmFyS2V5ZnJhbWV9IHZhcigtLWR1cmF0aW9uKSBsaW5lYXI7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNlY3Rpb25DbGFzc05hbWUgPSBjc3NgXHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGhlYWRlckNsYXNzTmFtZSA9IGNzc2BcclxuICAtLXJlbWFpbmluZzogMTtcclxuICAtLWR1cmF0aW9uOiAxMHM7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGNvbG9yOiAke3BhbGV0dGUucHJpbWFyeUNvbnRyYXN0fTtcclxuICBmaWxsOiAke3BhbGV0dGUucHJpbWFyeUNvbnRyYXN0fTtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAke2hleDJyZ2JhKHBhbGV0dGUucHJpbWFyeSwgdGludHMucHJpbWFyeSl9O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAmOmJlZm9yZSB7XHJcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0O1xyXG4gICAgd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvcik7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDFzIGxpbmVhciwgdHJhbnNmb3JtIHZhcigtLWR1cmF0aW9uKSBsaW5lYXI7XHJcbiAgICB6LWluZGV4OiAtMTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgZGVza3RvcEdyaWRDbGFzc05hbWUgPSBjc3NgXHJcbiAgZmxleDogMS41O1xyXG5cclxuICAke01haW59IHtcclxuICAgIHBhZGRpbmc6IDZweDtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgbW9iaWxlR3JpZFNlY3Rpb24gPSBjc3NgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IGF1dG87XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5cclxuICAke01haW59IHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcGFkZGluZzogMCAke0FDVElPTl9XSURUSCArIDE2fXB4O1xyXG4gICAgdHJhbnNpdGlvbjogaGVpZ2h0IDAuMjdzIGxpbmVhcjtcclxuXHJcbiAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICBwYWRkaW5nOiAwO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQG1lZGlhIGFsbCBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcclxuICAgIG1hcmdpbjogMCAke0FDVElPTl9XSURUSH1weCAwIDA7XHJcbiAgfVxyXG5cclxuICA6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6IG5vbmU7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGlkbGVNb2JpbGVHcmlkU2VjdGlvbiA9IGNzc2BcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZy1ib3R0b206IDA7XHJcbiAgJHtNYWlufSB7XHJcbiAgICBoZWlnaHQ6IDEwMCUgIWltcG9ydGFudDtcclxuICAgIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgR2FtZVN0YXR1c0xhYmVsID0gc3R5bGVkLnNwYW5gXHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgei1pbmRleDogMTtcclxuYDtcclxuIl19 */\");\nconst sectionClassName = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)( false ? 0 : {\n  name: \"1llqdnv-sectionClassName\",\n  styles: \"position:relative;label:sectionClassName;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXENlbnRlclxcc3R5bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUJtQyIsImZpbGUiOiJDOlxcVXNlcnNcXFR5a2hlXFxlbGVjdHJvbmFwcHNcXHR5a2hlLWVsZWN0cm9uLWFwcHMtYmFjY2FyYXRcXHNyY1xccmVuZGVyZXJcXGJhY2NhcmF0XFxwbGF5ZXJcXHZpZXdzXFxHYW1lQm9hcmRcXHNlY3Rpb25zXFxDZW50ZXJcXHN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMgfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XHJcbmltcG9ydCB7IGhleDJyZ2JhLCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5a2hlL3V0aWxzJztcclxuXHJcbmltcG9ydCB7IHRoZW1lLCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcCc7XHJcbmltcG9ydCB7IE1haW4sIH0gZnJvbSAnLi4vc3R5bGUnO1xyXG5pbXBvcnQgeyBBQ1RJT05fV0lEVEgsIH0gZnJvbSAnLi4vLi4vYWN0aW9ucy9zdHlsZSc7XHJcblxyXG5jb25zdCB7IHBhbGV0dGUsIHRpbnRzLCB9ID0gdGhlbWU7XHJcblxyXG5jb25zdCBwcm9ncmVzc0JhcktleWZyYW1lID0ga2V5ZnJhbWVzYFxyXG4gIGZyb20ge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZVgodmFyKC0tcmVtYWluaW5nKSk7XHJcbiAgfVxyXG4gIHRvIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGVYKDApO1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBwcm9ncmVzc0JhckFuaW1hdGlvbiA9IGNzc2BcclxuICAmOjpiZWZvcmUge1xyXG4gICAgYW5pbWF0aW9uOiAke3Byb2dyZXNzQmFyS2V5ZnJhbWV9IHZhcigtLWR1cmF0aW9uKSBsaW5lYXI7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNlY3Rpb25DbGFzc05hbWUgPSBjc3NgXHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGhlYWRlckNsYXNzTmFtZSA9IGNzc2BcclxuICAtLXJlbWFpbmluZzogMTtcclxuICAtLWR1cmF0aW9uOiAxMHM7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGNvbG9yOiAke3BhbGV0dGUucHJpbWFyeUNvbnRyYXN0fTtcclxuICBmaWxsOiAke3BhbGV0dGUucHJpbWFyeUNvbnRyYXN0fTtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAke2hleDJyZ2JhKHBhbGV0dGUucHJpbWFyeSwgdGludHMucHJpbWFyeSl9O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAmOmJlZm9yZSB7XHJcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0O1xyXG4gICAgd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvcik7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDFzIGxpbmVhciwgdHJhbnNmb3JtIHZhcigtLWR1cmF0aW9uKSBsaW5lYXI7XHJcbiAgICB6LWluZGV4OiAtMTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgZGVza3RvcEdyaWRDbGFzc05hbWUgPSBjc3NgXHJcbiAgZmxleDogMS41O1xyXG5cclxuICAke01haW59IHtcclxuICAgIHBhZGRpbmc6IDZweDtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgbW9iaWxlR3JpZFNlY3Rpb24gPSBjc3NgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IGF1dG87XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5cclxuICAke01haW59IHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcGFkZGluZzogMCAke0FDVElPTl9XSURUSCArIDE2fXB4O1xyXG4gICAgdHJhbnNpdGlvbjogaGVpZ2h0IDAuMjdzIGxpbmVhcjtcclxuXHJcbiAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICBwYWRkaW5nOiAwO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQG1lZGlhIGFsbCBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcclxuICAgIG1hcmdpbjogMCAke0FDVElPTl9XSURUSH1weCAwIDA7XHJcbiAgfVxyXG5cclxuICA6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6IG5vbmU7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGlkbGVNb2JpbGVHcmlkU2VjdGlvbiA9IGNzc2BcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZy1ib3R0b206IDA7XHJcbiAgJHtNYWlufSB7XHJcbiAgICBoZWlnaHQ6IDEwMCUgIWltcG9ydGFudDtcclxuICAgIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgR2FtZVN0YXR1c0xhYmVsID0gc3R5bGVkLnNwYW5gXHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgei1pbmRleDogMTtcclxuYDtcclxuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst headerClassName = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)(\"--remaining:1;--duration:10s;display:flex;align-items:center;justify-content:center;color:\", palette.primaryContrast, \";fill:\", palette.primaryContrast, \";text-transform:uppercase;font-weight:bold;font-size:14px;border:1px solid \", (0,_tykhe_utils__WEBPACK_IMPORTED_MODULE_2__.hex2rgba)(palette.primary, tints.primary), \";position:relative;overflow:hidden;&:before{transform-origin:left;will-change:transform;position:absolute;top:0;left:0;right:0;bottom:0;content:'';width:100%;background-color:var(--color);transition:background-color 1s linear,transform var(--duration) linear;z-index:-1;}\" + ( false ? 0 : \";label:headerClassName;\"),  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXENlbnRlclxcc3R5bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNkJrQyIsImZpbGUiOiJDOlxcVXNlcnNcXFR5a2hlXFxlbGVjdHJvbmFwcHNcXHR5a2hlLWVsZWN0cm9uLWFwcHMtYmFjY2FyYXRcXHNyY1xccmVuZGVyZXJcXGJhY2NhcmF0XFxwbGF5ZXJcXHZpZXdzXFxHYW1lQm9hcmRcXHNlY3Rpb25zXFxDZW50ZXJcXHN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMgfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XHJcbmltcG9ydCB7IGhleDJyZ2JhLCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5a2hlL3V0aWxzJztcclxuXHJcbmltcG9ydCB7IHRoZW1lLCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcCc7XHJcbmltcG9ydCB7IE1haW4sIH0gZnJvbSAnLi4vc3R5bGUnO1xyXG5pbXBvcnQgeyBBQ1RJT05fV0lEVEgsIH0gZnJvbSAnLi4vLi4vYWN0aW9ucy9zdHlsZSc7XHJcblxyXG5jb25zdCB7IHBhbGV0dGUsIHRpbnRzLCB9ID0gdGhlbWU7XHJcblxyXG5jb25zdCBwcm9ncmVzc0JhcktleWZyYW1lID0ga2V5ZnJhbWVzYFxyXG4gIGZyb20ge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZVgodmFyKC0tcmVtYWluaW5nKSk7XHJcbiAgfVxyXG4gIHRvIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGVYKDApO1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBwcm9ncmVzc0JhckFuaW1hdGlvbiA9IGNzc2BcclxuICAmOjpiZWZvcmUge1xyXG4gICAgYW5pbWF0aW9uOiAke3Byb2dyZXNzQmFyS2V5ZnJhbWV9IHZhcigtLWR1cmF0aW9uKSBsaW5lYXI7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNlY3Rpb25DbGFzc05hbWUgPSBjc3NgXHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGhlYWRlckNsYXNzTmFtZSA9IGNzc2BcclxuICAtLXJlbWFpbmluZzogMTtcclxuICAtLWR1cmF0aW9uOiAxMHM7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGNvbG9yOiAke3BhbGV0dGUucHJpbWFyeUNvbnRyYXN0fTtcclxuICBmaWxsOiAke3BhbGV0dGUucHJpbWFyeUNvbnRyYXN0fTtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAke2hleDJyZ2JhKHBhbGV0dGUucHJpbWFyeSwgdGludHMucHJpbWFyeSl9O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAmOmJlZm9yZSB7XHJcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0O1xyXG4gICAgd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvcik7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDFzIGxpbmVhciwgdHJhbnNmb3JtIHZhcigtLWR1cmF0aW9uKSBsaW5lYXI7XHJcbiAgICB6LWluZGV4OiAtMTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgZGVza3RvcEdyaWRDbGFzc05hbWUgPSBjc3NgXHJcbiAgZmxleDogMS41O1xyXG5cclxuICAke01haW59IHtcclxuICAgIHBhZGRpbmc6IDZweDtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgbW9iaWxlR3JpZFNlY3Rpb24gPSBjc3NgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IGF1dG87XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5cclxuICAke01haW59IHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcGFkZGluZzogMCAke0FDVElPTl9XSURUSCArIDE2fXB4O1xyXG4gICAgdHJhbnNpdGlvbjogaGVpZ2h0IDAuMjdzIGxpbmVhcjtcclxuXHJcbiAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICBwYWRkaW5nOiAwO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQG1lZGlhIGFsbCBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcclxuICAgIG1hcmdpbjogMCAke0FDVElPTl9XSURUSH1weCAwIDA7XHJcbiAgfVxyXG5cclxuICA6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6IG5vbmU7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGlkbGVNb2JpbGVHcmlkU2VjdGlvbiA9IGNzc2BcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZy1ib3R0b206IDA7XHJcbiAgJHtNYWlufSB7XHJcbiAgICBoZWlnaHQ6IDEwMCUgIWltcG9ydGFudDtcclxuICAgIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgR2FtZVN0YXR1c0xhYmVsID0gc3R5bGVkLnNwYW5gXHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgei1pbmRleDogMTtcclxuYDtcclxuIl19 */\");\nconst desktopGridClassName = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)(\"flex:1.5;\", _style__WEBPACK_IMPORTED_MODULE_4__.Main, \"{padding:6px;}\" + ( false ? 0 : \";label:desktopGridClassName;\"),  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXENlbnRlclxcc3R5bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNER1QyIsImZpbGUiOiJDOlxcVXNlcnNcXFR5a2hlXFxlbGVjdHJvbmFwcHNcXHR5a2hlLWVsZWN0cm9uLWFwcHMtYmFjY2FyYXRcXHNyY1xccmVuZGVyZXJcXGJhY2NhcmF0XFxwbGF5ZXJcXHZpZXdzXFxHYW1lQm9hcmRcXHNlY3Rpb25zXFxDZW50ZXJcXHN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMgfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XHJcbmltcG9ydCB7IGhleDJyZ2JhLCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5a2hlL3V0aWxzJztcclxuXHJcbmltcG9ydCB7IHRoZW1lLCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcCc7XHJcbmltcG9ydCB7IE1haW4sIH0gZnJvbSAnLi4vc3R5bGUnO1xyXG5pbXBvcnQgeyBBQ1RJT05fV0lEVEgsIH0gZnJvbSAnLi4vLi4vYWN0aW9ucy9zdHlsZSc7XHJcblxyXG5jb25zdCB7IHBhbGV0dGUsIHRpbnRzLCB9ID0gdGhlbWU7XHJcblxyXG5jb25zdCBwcm9ncmVzc0JhcktleWZyYW1lID0ga2V5ZnJhbWVzYFxyXG4gIGZyb20ge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZVgodmFyKC0tcmVtYWluaW5nKSk7XHJcbiAgfVxyXG4gIHRvIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGVYKDApO1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBwcm9ncmVzc0JhckFuaW1hdGlvbiA9IGNzc2BcclxuICAmOjpiZWZvcmUge1xyXG4gICAgYW5pbWF0aW9uOiAke3Byb2dyZXNzQmFyS2V5ZnJhbWV9IHZhcigtLWR1cmF0aW9uKSBsaW5lYXI7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNlY3Rpb25DbGFzc05hbWUgPSBjc3NgXHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGhlYWRlckNsYXNzTmFtZSA9IGNzc2BcclxuICAtLXJlbWFpbmluZzogMTtcclxuICAtLWR1cmF0aW9uOiAxMHM7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGNvbG9yOiAke3BhbGV0dGUucHJpbWFyeUNvbnRyYXN0fTtcclxuICBmaWxsOiAke3BhbGV0dGUucHJpbWFyeUNvbnRyYXN0fTtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAke2hleDJyZ2JhKHBhbGV0dGUucHJpbWFyeSwgdGludHMucHJpbWFyeSl9O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAmOmJlZm9yZSB7XHJcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0O1xyXG4gICAgd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvcik7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDFzIGxpbmVhciwgdHJhbnNmb3JtIHZhcigtLWR1cmF0aW9uKSBsaW5lYXI7XHJcbiAgICB6LWluZGV4OiAtMTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgZGVza3RvcEdyaWRDbGFzc05hbWUgPSBjc3NgXHJcbiAgZmxleDogMS41O1xyXG5cclxuICAke01haW59IHtcclxuICAgIHBhZGRpbmc6IDZweDtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgbW9iaWxlR3JpZFNlY3Rpb24gPSBjc3NgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IGF1dG87XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5cclxuICAke01haW59IHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcGFkZGluZzogMCAke0FDVElPTl9XSURUSCArIDE2fXB4O1xyXG4gICAgdHJhbnNpdGlvbjogaGVpZ2h0IDAuMjdzIGxpbmVhcjtcclxuXHJcbiAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICBwYWRkaW5nOiAwO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQG1lZGlhIGFsbCBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcclxuICAgIG1hcmdpbjogMCAke0FDVElPTl9XSURUSH1weCAwIDA7XHJcbiAgfVxyXG5cclxuICA6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6IG5vbmU7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGlkbGVNb2JpbGVHcmlkU2VjdGlvbiA9IGNzc2BcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZy1ib3R0b206IDA7XHJcbiAgJHtNYWlufSB7XHJcbiAgICBoZWlnaHQ6IDEwMCUgIWltcG9ydGFudDtcclxuICAgIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgR2FtZVN0YXR1c0xhYmVsID0gc3R5bGVkLnNwYW5gXHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgei1pbmRleDogMTtcclxuYDtcclxuIl19 */\");\nconst mobileGridSection = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)(\"display:flex;position:relative;width:auto;height:100%;top:0;left:0;right:0;pointer-events:none;\", _style__WEBPACK_IMPORTED_MODULE_4__.Main, \"{position:absolute;width:100%;height:100%;padding:0 \", _actions_style__WEBPACK_IMPORTED_MODULE_5__.ACTION_WIDTH + 16, \"px;transition:height 0.27s linear;@media all and (orientation: landscape){padding:0;}}@media all and (orientation: landscape){margin:0 \", _actions_style__WEBPACK_IMPORTED_MODULE_5__.ACTION_WIDTH, \"px 0 0;}:before{content:none;}\" + ( false ? 0 : \";label:mobileGridSection;\"),  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXENlbnRlclxcc3R5bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0VvQyIsImZpbGUiOiJDOlxcVXNlcnNcXFR5a2hlXFxlbGVjdHJvbmFwcHNcXHR5a2hlLWVsZWN0cm9uLWFwcHMtYmFjY2FyYXRcXHNyY1xccmVuZGVyZXJcXGJhY2NhcmF0XFxwbGF5ZXJcXHZpZXdzXFxHYW1lQm9hcmRcXHNlY3Rpb25zXFxDZW50ZXJcXHN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMgfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XHJcbmltcG9ydCB7IGhleDJyZ2JhLCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5a2hlL3V0aWxzJztcclxuXHJcbmltcG9ydCB7IHRoZW1lLCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcCc7XHJcbmltcG9ydCB7IE1haW4sIH0gZnJvbSAnLi4vc3R5bGUnO1xyXG5pbXBvcnQgeyBBQ1RJT05fV0lEVEgsIH0gZnJvbSAnLi4vLi4vYWN0aW9ucy9zdHlsZSc7XHJcblxyXG5jb25zdCB7IHBhbGV0dGUsIHRpbnRzLCB9ID0gdGhlbWU7XHJcblxyXG5jb25zdCBwcm9ncmVzc0JhcktleWZyYW1lID0ga2V5ZnJhbWVzYFxyXG4gIGZyb20ge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZVgodmFyKC0tcmVtYWluaW5nKSk7XHJcbiAgfVxyXG4gIHRvIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGVYKDApO1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBwcm9ncmVzc0JhckFuaW1hdGlvbiA9IGNzc2BcclxuICAmOjpiZWZvcmUge1xyXG4gICAgYW5pbWF0aW9uOiAke3Byb2dyZXNzQmFyS2V5ZnJhbWV9IHZhcigtLWR1cmF0aW9uKSBsaW5lYXI7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNlY3Rpb25DbGFzc05hbWUgPSBjc3NgXHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGhlYWRlckNsYXNzTmFtZSA9IGNzc2BcclxuICAtLXJlbWFpbmluZzogMTtcclxuICAtLWR1cmF0aW9uOiAxMHM7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGNvbG9yOiAke3BhbGV0dGUucHJpbWFyeUNvbnRyYXN0fTtcclxuICBmaWxsOiAke3BhbGV0dGUucHJpbWFyeUNvbnRyYXN0fTtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAke2hleDJyZ2JhKHBhbGV0dGUucHJpbWFyeSwgdGludHMucHJpbWFyeSl9O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAmOmJlZm9yZSB7XHJcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0O1xyXG4gICAgd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvcik7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDFzIGxpbmVhciwgdHJhbnNmb3JtIHZhcigtLWR1cmF0aW9uKSBsaW5lYXI7XHJcbiAgICB6LWluZGV4OiAtMTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgZGVza3RvcEdyaWRDbGFzc05hbWUgPSBjc3NgXHJcbiAgZmxleDogMS41O1xyXG5cclxuICAke01haW59IHtcclxuICAgIHBhZGRpbmc6IDZweDtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgbW9iaWxlR3JpZFNlY3Rpb24gPSBjc3NgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IGF1dG87XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5cclxuICAke01haW59IHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcGFkZGluZzogMCAke0FDVElPTl9XSURUSCArIDE2fXB4O1xyXG4gICAgdHJhbnNpdGlvbjogaGVpZ2h0IDAuMjdzIGxpbmVhcjtcclxuXHJcbiAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICBwYWRkaW5nOiAwO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQG1lZGlhIGFsbCBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcclxuICAgIG1hcmdpbjogMCAke0FDVElPTl9XSURUSH1weCAwIDA7XHJcbiAgfVxyXG5cclxuICA6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6IG5vbmU7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGlkbGVNb2JpbGVHcmlkU2VjdGlvbiA9IGNzc2BcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZy1ib3R0b206IDA7XHJcbiAgJHtNYWlufSB7XHJcbiAgICBoZWlnaHQ6IDEwMCUgIWltcG9ydGFudDtcclxuICAgIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgR2FtZVN0YXR1c0xhYmVsID0gc3R5bGVkLnNwYW5gXHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgei1pbmRleDogMTtcclxuYDtcclxuIl19 */\");\nconst idleMobileGridSection = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)(\"margin:0;padding-bottom:0;\", _style__WEBPACK_IMPORTED_MODULE_4__.Main, \"{height:100%!important;padding:0!important;}\" + ( false ? 0 : \";label:idleMobileGridSection;\"),  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXENlbnRlclxcc3R5bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUd3QyIsImZpbGUiOiJDOlxcVXNlcnNcXFR5a2hlXFxlbGVjdHJvbmFwcHNcXHR5a2hlLWVsZWN0cm9uLWFwcHMtYmFjY2FyYXRcXHNyY1xccmVuZGVyZXJcXGJhY2NhcmF0XFxwbGF5ZXJcXHZpZXdzXFxHYW1lQm9hcmRcXHNlY3Rpb25zXFxDZW50ZXJcXHN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMgfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XHJcbmltcG9ydCB7IGhleDJyZ2JhLCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5a2hlL3V0aWxzJztcclxuXHJcbmltcG9ydCB7IHRoZW1lLCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcCc7XHJcbmltcG9ydCB7IE1haW4sIH0gZnJvbSAnLi4vc3R5bGUnO1xyXG5pbXBvcnQgeyBBQ1RJT05fV0lEVEgsIH0gZnJvbSAnLi4vLi4vYWN0aW9ucy9zdHlsZSc7XHJcblxyXG5jb25zdCB7IHBhbGV0dGUsIHRpbnRzLCB9ID0gdGhlbWU7XHJcblxyXG5jb25zdCBwcm9ncmVzc0JhcktleWZyYW1lID0ga2V5ZnJhbWVzYFxyXG4gIGZyb20ge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZVgodmFyKC0tcmVtYWluaW5nKSk7XHJcbiAgfVxyXG4gIHRvIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGVYKDApO1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBwcm9ncmVzc0JhckFuaW1hdGlvbiA9IGNzc2BcclxuICAmOjpiZWZvcmUge1xyXG4gICAgYW5pbWF0aW9uOiAke3Byb2dyZXNzQmFyS2V5ZnJhbWV9IHZhcigtLWR1cmF0aW9uKSBsaW5lYXI7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNlY3Rpb25DbGFzc05hbWUgPSBjc3NgXHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGhlYWRlckNsYXNzTmFtZSA9IGNzc2BcclxuICAtLXJlbWFpbmluZzogMTtcclxuICAtLWR1cmF0aW9uOiAxMHM7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGNvbG9yOiAke3BhbGV0dGUucHJpbWFyeUNvbnRyYXN0fTtcclxuICBmaWxsOiAke3BhbGV0dGUucHJpbWFyeUNvbnRyYXN0fTtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAke2hleDJyZ2JhKHBhbGV0dGUucHJpbWFyeSwgdGludHMucHJpbWFyeSl9O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAmOmJlZm9yZSB7XHJcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0O1xyXG4gICAgd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvcik7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDFzIGxpbmVhciwgdHJhbnNmb3JtIHZhcigtLWR1cmF0aW9uKSBsaW5lYXI7XHJcbiAgICB6LWluZGV4OiAtMTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgZGVza3RvcEdyaWRDbGFzc05hbWUgPSBjc3NgXHJcbiAgZmxleDogMS41O1xyXG5cclxuICAke01haW59IHtcclxuICAgIHBhZGRpbmc6IDZweDtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgbW9iaWxlR3JpZFNlY3Rpb24gPSBjc3NgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IGF1dG87XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5cclxuICAke01haW59IHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcGFkZGluZzogMCAke0FDVElPTl9XSURUSCArIDE2fXB4O1xyXG4gICAgdHJhbnNpdGlvbjogaGVpZ2h0IDAuMjdzIGxpbmVhcjtcclxuXHJcbiAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICBwYWRkaW5nOiAwO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQG1lZGlhIGFsbCBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcclxuICAgIG1hcmdpbjogMCAke0FDVElPTl9XSURUSH1weCAwIDA7XHJcbiAgfVxyXG5cclxuICA6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6IG5vbmU7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGlkbGVNb2JpbGVHcmlkU2VjdGlvbiA9IGNzc2BcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZy1ib3R0b206IDA7XHJcbiAgJHtNYWlufSB7XHJcbiAgICBoZWlnaHQ6IDEwMCUgIWltcG9ydGFudDtcclxuICAgIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgR2FtZVN0YXR1c0xhYmVsID0gc3R5bGVkLnNwYW5gXHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgei1pbmRleDogMTtcclxuYDtcclxuIl19 */\");\nconst GameStatusLabel = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"span\",  false ? 0 : {\n  target: \"ehq43ro0\",\n  label: \"GameStatusLabel\"\n})( false ? 0 : {\n  name: \"16drh21\",\n  styles: \"color:#fff;z-index:1\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXENlbnRlclxcc3R5bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEcwQyIsImZpbGUiOiJDOlxcVXNlcnNcXFR5a2hlXFxlbGVjdHJvbmFwcHNcXHR5a2hlLWVsZWN0cm9uLWFwcHMtYmFjY2FyYXRcXHNyY1xccmVuZGVyZXJcXGJhY2NhcmF0XFxwbGF5ZXJcXHZpZXdzXFxHYW1lQm9hcmRcXHNlY3Rpb25zXFxDZW50ZXJcXHN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMgfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XHJcbmltcG9ydCB7IGhleDJyZ2JhLCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5a2hlL3V0aWxzJztcclxuXHJcbmltcG9ydCB7IHRoZW1lLCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcCc7XHJcbmltcG9ydCB7IE1haW4sIH0gZnJvbSAnLi4vc3R5bGUnO1xyXG5pbXBvcnQgeyBBQ1RJT05fV0lEVEgsIH0gZnJvbSAnLi4vLi4vYWN0aW9ucy9zdHlsZSc7XHJcblxyXG5jb25zdCB7IHBhbGV0dGUsIHRpbnRzLCB9ID0gdGhlbWU7XHJcblxyXG5jb25zdCBwcm9ncmVzc0JhcktleWZyYW1lID0ga2V5ZnJhbWVzYFxyXG4gIGZyb20ge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZVgodmFyKC0tcmVtYWluaW5nKSk7XHJcbiAgfVxyXG4gIHRvIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGVYKDApO1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBwcm9ncmVzc0JhckFuaW1hdGlvbiA9IGNzc2BcclxuICAmOjpiZWZvcmUge1xyXG4gICAgYW5pbWF0aW9uOiAke3Byb2dyZXNzQmFyS2V5ZnJhbWV9IHZhcigtLWR1cmF0aW9uKSBsaW5lYXI7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNlY3Rpb25DbGFzc05hbWUgPSBjc3NgXHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGhlYWRlckNsYXNzTmFtZSA9IGNzc2BcclxuICAtLXJlbWFpbmluZzogMTtcclxuICAtLWR1cmF0aW9uOiAxMHM7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGNvbG9yOiAke3BhbGV0dGUucHJpbWFyeUNvbnRyYXN0fTtcclxuICBmaWxsOiAke3BhbGV0dGUucHJpbWFyeUNvbnRyYXN0fTtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAke2hleDJyZ2JhKHBhbGV0dGUucHJpbWFyeSwgdGludHMucHJpbWFyeSl9O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAmOmJlZm9yZSB7XHJcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0O1xyXG4gICAgd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvcik7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDFzIGxpbmVhciwgdHJhbnNmb3JtIHZhcigtLWR1cmF0aW9uKSBsaW5lYXI7XHJcbiAgICB6LWluZGV4OiAtMTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgZGVza3RvcEdyaWRDbGFzc05hbWUgPSBjc3NgXHJcbiAgZmxleDogMS41O1xyXG5cclxuICAke01haW59IHtcclxuICAgIHBhZGRpbmc6IDZweDtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgbW9iaWxlR3JpZFNlY3Rpb24gPSBjc3NgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IGF1dG87XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5cclxuICAke01haW59IHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcGFkZGluZzogMCAke0FDVElPTl9XSURUSCArIDE2fXB4O1xyXG4gICAgdHJhbnNpdGlvbjogaGVpZ2h0IDAuMjdzIGxpbmVhcjtcclxuXHJcbiAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICBwYWRkaW5nOiAwO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQG1lZGlhIGFsbCBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcclxuICAgIG1hcmdpbjogMCAke0FDVElPTl9XSURUSH1weCAwIDA7XHJcbiAgfVxyXG5cclxuICA6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6IG5vbmU7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGlkbGVNb2JpbGVHcmlkU2VjdGlvbiA9IGNzc2BcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZy1ib3R0b206IDA7XHJcbiAgJHtNYWlufSB7XHJcbiAgICBoZWlnaHQ6IDEwMCUgIWltcG9ydGFudDtcclxuICAgIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgR2FtZVN0YXR1c0xhYmVsID0gc3R5bGVkLnNwYW5gXHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgei1pbmRleDogMTtcclxuYDtcclxuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/views/GameBoard/sections/Center/style.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/views/GameBoard/sections/Left/Left.js":
/*!****************************************************************************!*\
  !*** ./src/renderer/baccarat/player/views/GameBoard/sections/Left/Left.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/css */ \"./node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var bowser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bowser */ \"./node_modules/bowser/es5.js\");\n/* harmony import */ var bowser__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bowser__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _tykhe_primitives__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../tykhe/primitives */ \"./src/renderer/baccarat/tykhe/primitives/index.js\");\n/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./style */ \"./src/renderer/baccarat/player/views/GameBoard/sections/Left/style.js\");\n/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../style */ \"./src/renderer/baccarat/player/views/GameBoard/sections/style.js\");\n/* harmony import */ var _assets_icons_racetrack_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../assets/icons/racetrack.svg */ \"./src/renderer/baccarat/player/assets/icons/racetrack.svg\");\n/* harmony import */ var _assets_icons_racetrack_svg__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_assets_icons_racetrack_svg__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\n\n\n\n\n\n\n\n\n\nconst isHandheld = (bowser__WEBPACK_IMPORTED_MODULE_2___default().mobile) || (bowser__WEBPACK_IMPORTED_MODULE_2___default().tablet);\nconst sectionStyle = {\n  transformOrigin: 'bottom left'\n};\nconst iconStyle = {\n  marginRight: 5\n};\nconst Left = ({\n  children,\n  label,\n  inactive,\n  className,\n  hidden,\n  ...rest\n}) => (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_style__WEBPACK_IMPORTED_MODULE_5__.Section2, {\n  className: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.cx)(_style__WEBPACK_IMPORTED_MODULE_4__.sectionClassName, {\n    [_style__WEBPACK_IMPORTED_MODULE_5__.mobileSideSection]: isHandheld,\n    [_style__WEBPACK_IMPORTED_MODULE_5__.hiddenMobileSideSection]: hidden\n  }, className),\n  style: sectionStyle,\n  ...rest,\n  children: (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_style__WEBPACK_IMPORTED_MODULE_5__.Padding15, {})\n});\nLeft.propTypes = {\n  label: prop_types__WEBPACK_IMPORTED_MODULE_8__.string,\n  inactive: prop_types__WEBPACK_IMPORTED_MODULE_8__.bool,\n  hidden: prop_types__WEBPACK_IMPORTED_MODULE_8__.bool\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Left);\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/views/GameBoard/sections/Left/Left.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/views/GameBoard/sections/Left/style.js":
/*!*****************************************************************************!*\
  !*** ./src/renderer/baccarat/player/views/GameBoard/sections/Left/style.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mainClassName: () => (/* binding */ mainClassName),\n/* harmony export */   sectionClassName: () => (/* binding */ sectionClassName)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/css */ \"./node_modules/@emotion/css/dist/emotion-css.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nconst sectionClassName = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)( false ? 0 : {\n  name: \"1pl4as4-sectionClassName\",\n  styles: \"flex:1;label:sectionClassName;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXExlZnRcXHN0eWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVtQyIsImZpbGUiOiJDOlxcVXNlcnNcXFR5a2hlXFxlbGVjdHJvbmFwcHNcXHR5a2hlLWVsZWN0cm9uLWFwcHMtYmFjY2FyYXRcXHNyY1xccmVuZGVyZXJcXGJhY2NhcmF0XFxwbGF5ZXJcXHZpZXdzXFxHYW1lQm9hcmRcXHNlY3Rpb25zXFxMZWZ0XFxzdHlsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcywgfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNlY3Rpb25DbGFzc05hbWUgPSBjc3NgXHJcbiAgZmxleDogMTtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBtYWluQ2xhc3NOYW1lID0gY3NzYFxyXG4gIHBhZGRpbmc6IDZweDtcclxuYDtcclxuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst mainClassName = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)( false ? 0 : {\n  name: \"q02gsp-mainClassName\",\n  styles: \"padding:6px;label:mainClassName;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXExlZnRcXHN0eWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU1nQyIsImZpbGUiOiJDOlxcVXNlcnNcXFR5a2hlXFxlbGVjdHJvbmFwcHNcXHR5a2hlLWVsZWN0cm9uLWFwcHMtYmFjY2FyYXRcXHNyY1xccmVuZGVyZXJcXGJhY2NhcmF0XFxwbGF5ZXJcXHZpZXdzXFxHYW1lQm9hcmRcXHNlY3Rpb25zXFxMZWZ0XFxzdHlsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcywgfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNlY3Rpb25DbGFzc05hbWUgPSBjc3NgXHJcbiAgZmxleDogMTtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBtYWluQ2xhc3NOYW1lID0gY3NzYFxyXG4gIHBhZGRpbmc6IDZweDtcclxuYDtcclxuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/views/GameBoard/sections/Left/style.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/views/GameBoard/sections/Right/Right.js":
/*!******************************************************************************!*\
  !*** ./src/renderer/baccarat/player/views/GameBoard/sections/Right/Right.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SectionContext: () => (/* binding */ SectionContext),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/css */ \"./node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var bowser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bowser */ \"./node_modules/bowser/es5.js\");\n/* harmony import */ var bowser__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bowser__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _tykhe_primitives__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../tykhe/primitives */ \"./src/renderer/baccarat/tykhe/primitives/index.js\");\n/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../style */ \"./src/renderer/baccarat/player/views/GameBoard/sections/style.js\");\n/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./style */ \"./src/renderer/baccarat/player/views/GameBoard/sections/Right/style.js\");\n/* harmony import */ var _assets_icons_statistics_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../assets/icons/statistics.svg */ \"./src/renderer/baccarat/player/assets/icons/statistics.svg\");\n/* harmony import */ var _assets_icons_statistics_svg__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_assets_icons_statistics_svg__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _assets_icons_arrow_up_svg__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../assets/icons/arrow-up.svg */ \"./src/renderer/baccarat/player/assets/icons/arrow-up.svg\");\n/* harmony import */ var _assets_icons_arrow_up_svg__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_assets_icons_arrow_up_svg__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\n\n\n\n\n\n\n\n\n\n\nconst SectionContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n  expanded: false,\n  toggle: () => {}\n});\nconst isHandheld = (bowser__WEBPACK_IMPORTED_MODULE_2___default().mobile) || (bowser__WEBPACK_IMPORTED_MODULE_2___default().tablet);\nconst sectionStyle = {\n  transformOrigin: 'center right'\n};\nconst Right = ({\n  children,\n  label,\n  inactive,\n  hidden,\n  className,\n  showHeader\n}) => {\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n    expanded: false\n  });\n  return (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(SectionContext.Provider, {\n    value: {\n      expanded: state.expanded,\n      toggle: () => setState({\n        expanded: true\n      })\n    },\n    children: (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_style__WEBPACK_IMPORTED_MODULE_4__.Section2, {\n      className: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.cx)(_style__WEBPACK_IMPORTED_MODULE_5__.sectionClassName, {\n        [_style__WEBPACK_IMPORTED_MODULE_4__.mobileSideSection]: isHandheld,\n        [_style__WEBPACK_IMPORTED_MODULE_5__.expandedSection]: state.expanded,\n        [_style__WEBPACK_IMPORTED_MODULE_4__.hiddenMobileSideSection]: hidden && isHandheld\n      }, className),\n      style: sectionStyle,\n      \"data-name\": \"gameboard-right-section\",\n      children: (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_style__WEBPACK_IMPORTED_MODULE_4__.Padding15, {})\n    })\n  });\n};\nRight.propTypes = {\n  label: prop_types__WEBPACK_IMPORTED_MODULE_9__.string,\n  inactive: prop_types__WEBPACK_IMPORTED_MODULE_9__.bool,\n  hidden: prop_types__WEBPACK_IMPORTED_MODULE_9__.bool,\n  showHeader: prop_types__WEBPACK_IMPORTED_MODULE_9__.bool\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Right);\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/views/GameBoard/sections/Right/Right.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/views/GameBoard/sections/Right/style.js":
/*!******************************************************************************!*\
  !*** ./src/renderer/baccarat/player/views/GameBoard/sections/Right/style.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   disabledIconClass: () => (/* binding */ disabledIconClass),\n/* harmony export */   expandedIconClass: () => (/* binding */ expandedIconClass),\n/* harmony export */   expandedSection: () => (/* binding */ expandedSection),\n/* harmony export */   sectionClassName: () => (/* binding */ sectionClassName),\n/* harmony export */   toggleIconClass: () => (/* binding */ toggleIconClass)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/css */ \"./node_modules/@emotion/css/dist/emotion-css.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nconst sectionClassName = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)( false ? 0 : {\n  name: \"10dhooa-sectionClassName\",\n  styles: \"height:200%;top:100%;flex:1;transition:transform 0.13s,height 0.13s;>div{flex-flow:column wrap;};label:sectionClassName;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXFJpZ2h0XFxzdHlsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFbUMiLCJmaWxlIjoiQzpcXFVzZXJzXFxUeWtoZVxcZWxlY3Ryb25hcHBzXFx0eWtoZS1lbGVjdHJvbi1hcHBzLWJhY2NhcmF0XFxzcmNcXHJlbmRlcmVyXFxiYWNjYXJhdFxccGxheWVyXFx2aWV3c1xcR2FtZUJvYXJkXFxzZWN0aW9uc1xcUmlnaHRcXHN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XHJcblxyXG5leHBvcnQgY29uc3Qgc2VjdGlvbkNsYXNzTmFtZSA9IGNzc2BcclxuICBoZWlnaHQ6IDIwMCU7XHJcbiAgdG9wOiAxMDAlO1xyXG4gIGZsZXg6IDE7XHJcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMTNzLCBoZWlnaHQgMC4xM3M7XHJcblxyXG4gID4gZGl2IHtcclxuICAgIGZsZXgtZmxvdzogY29sdW1uIHdyYXA7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGV4cGFuZGVkU2VjdGlvbiA9IGNzc2BcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgdG9nZ2xlSWNvbkNsYXNzID0gY3NzYFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICByaWdodDogMTZweDtcclxuICB0b3A6IDA7XHJcbiAgYm90dG9tOiAwO1xyXG4gIG1hcmdpbjogYXV0bztcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XHJcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMTNzO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGV4cGFuZGVkSWNvbkNsYXNzID0gY3NzYFxyXG4gIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgZGlzYWJsZWRJY29uQ2xhc3MgPSBjc3NgXHJcbiAgb3BhY2l0eTogMC40O1xyXG5gO1xyXG4iXX0= */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst expandedSection = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)( false ? 0 : {\n  name: \"16e0hub-expandedSection\",\n  styles: \"transform:translateY(-50%);label:expandedSection;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXFJpZ2h0XFxzdHlsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFha0MiLCJmaWxlIjoiQzpcXFVzZXJzXFxUeWtoZVxcZWxlY3Ryb25hcHBzXFx0eWtoZS1lbGVjdHJvbi1hcHBzLWJhY2NhcmF0XFxzcmNcXHJlbmRlcmVyXFxiYWNjYXJhdFxccGxheWVyXFx2aWV3c1xcR2FtZUJvYXJkXFxzZWN0aW9uc1xcUmlnaHRcXHN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XHJcblxyXG5leHBvcnQgY29uc3Qgc2VjdGlvbkNsYXNzTmFtZSA9IGNzc2BcclxuICBoZWlnaHQ6IDIwMCU7XHJcbiAgdG9wOiAxMDAlO1xyXG4gIGZsZXg6IDE7XHJcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMTNzLCBoZWlnaHQgMC4xM3M7XHJcblxyXG4gID4gZGl2IHtcclxuICAgIGZsZXgtZmxvdzogY29sdW1uIHdyYXA7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGV4cGFuZGVkU2VjdGlvbiA9IGNzc2BcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgdG9nZ2xlSWNvbkNsYXNzID0gY3NzYFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICByaWdodDogMTZweDtcclxuICB0b3A6IDA7XHJcbiAgYm90dG9tOiAwO1xyXG4gIG1hcmdpbjogYXV0bztcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XHJcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMTNzO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGV4cGFuZGVkSWNvbkNsYXNzID0gY3NzYFxyXG4gIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgZGlzYWJsZWRJY29uQ2xhc3MgPSBjc3NgXHJcbiAgb3BhY2l0eTogMC40O1xyXG5gO1xyXG4iXX0= */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst toggleIconClass = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)( false ? 0 : {\n  name: \"yr1xud-toggleIconClass\",\n  styles: \"position:absolute;right:16px;top:0;bottom:0;margin:auto;cursor:pointer;transform:rotate(0deg);transition:transform 0.13s;label:toggleIconClass;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXFJpZ2h0XFxzdHlsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpQmtDIiwiZmlsZSI6IkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXFJpZ2h0XFxzdHlsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcywgfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNlY3Rpb25DbGFzc05hbWUgPSBjc3NgXHJcbiAgaGVpZ2h0OiAyMDAlO1xyXG4gIHRvcDogMTAwJTtcclxuICBmbGV4OiAxO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjEzcywgaGVpZ2h0IDAuMTNzO1xyXG5cclxuICA+IGRpdiB7XHJcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiB3cmFwO1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBleHBhbmRlZFNlY3Rpb24gPSBjc3NgXHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHRvZ2dsZUljb25DbGFzcyA9IGNzc2BcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgcmlnaHQ6IDE2cHg7XHJcbiAgdG9wOiAwO1xyXG4gIGJvdHRvbTogMDtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjEzcztcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBleHBhbmRlZEljb25DbGFzcyA9IGNzc2BcclxuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRpc2FibGVkSWNvbkNsYXNzID0gY3NzYFxyXG4gIG9wYWNpdHk6IDAuNDtcclxuYDtcclxuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst expandedIconClass = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)( false ? 0 : {\n  name: \"1bvyuq9-expandedIconClass\",\n  styles: \"transform:rotate(180deg);label:expandedIconClass;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXFJpZ2h0XFxzdHlsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0Qm9DIiwiZmlsZSI6IkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXFJpZ2h0XFxzdHlsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcywgfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNlY3Rpb25DbGFzc05hbWUgPSBjc3NgXHJcbiAgaGVpZ2h0OiAyMDAlO1xyXG4gIHRvcDogMTAwJTtcclxuICBmbGV4OiAxO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjEzcywgaGVpZ2h0IDAuMTNzO1xyXG5cclxuICA+IGRpdiB7XHJcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiB3cmFwO1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBleHBhbmRlZFNlY3Rpb24gPSBjc3NgXHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHRvZ2dsZUljb25DbGFzcyA9IGNzc2BcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgcmlnaHQ6IDE2cHg7XHJcbiAgdG9wOiAwO1xyXG4gIGJvdHRvbTogMDtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjEzcztcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBleHBhbmRlZEljb25DbGFzcyA9IGNzc2BcclxuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRpc2FibGVkSWNvbkNsYXNzID0gY3NzYFxyXG4gIG9wYWNpdHk6IDAuNDtcclxuYDtcclxuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst disabledIconClass = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)( false ? 0 : {\n  name: \"fj6y4q-disabledIconClass\",\n  styles: \"opacity:0.4;label:disabledIconClass;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXFJpZ2h0XFxzdHlsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnQ29DIiwiZmlsZSI6IkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXFJpZ2h0XFxzdHlsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcywgfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNlY3Rpb25DbGFzc05hbWUgPSBjc3NgXHJcbiAgaGVpZ2h0OiAyMDAlO1xyXG4gIHRvcDogMTAwJTtcclxuICBmbGV4OiAxO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjEzcywgaGVpZ2h0IDAuMTNzO1xyXG5cclxuICA+IGRpdiB7XHJcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiB3cmFwO1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBleHBhbmRlZFNlY3Rpb24gPSBjc3NgXHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHRvZ2dsZUljb25DbGFzcyA9IGNzc2BcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgcmlnaHQ6IDE2cHg7XHJcbiAgdG9wOiAwO1xyXG4gIGJvdHRvbTogMDtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjEzcztcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBleHBhbmRlZEljb25DbGFzcyA9IGNzc2BcclxuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRpc2FibGVkSWNvbkNsYXNzID0gY3NzYFxyXG4gIG9wYWNpdHk6IDAuNDtcclxuYDtcclxuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/views/GameBoard/sections/Right/style.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/views/GameBoard/sections/index.js":
/*!************************************************************************!*\
  !*** ./src/renderer/baccarat/player/views/GameBoard/sections/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Center: () => (/* reexport safe */ _Center_Center__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   Left: () => (/* reexport safe */ _Left_Left__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   Right: () => (/* reexport safe */ _Right_Right__WEBPACK_IMPORTED_MODULE_2__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _Left_Left__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Left/Left */ \"./src/renderer/baccarat/player/views/GameBoard/sections/Left/Left.js\");\n/* harmony import */ var _Center_Center__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Center/Center */ \"./src/renderer/baccarat/player/views/GameBoard/sections/Center/Center.js\");\n/* harmony import */ var _Right_Right__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Right/Right */ \"./src/renderer/baccarat/player/views/GameBoard/sections/Right/Right.js\");\n\n\n\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/views/GameBoard/sections/index.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/views/GameBoard/sections/style.js":
/*!************************************************************************!*\
  !*** ./src/renderer/baccarat/player/views/GameBoard/sections/style.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HEADER_HEIGHT: () => (/* binding */ HEADER_HEIGHT),\n/* harmony export */   Header: () => (/* binding */ Header),\n/* harmony export */   Main: () => (/* binding */ Main),\n/* harmony export */   Padding15: () => (/* binding */ Padding15),\n/* harmony export */   Section: () => (/* binding */ Section),\n/* harmony export */   Section2: () => (/* binding */ Section2),\n/* harmony export */   desktopMainClassName: () => (/* binding */ desktopMainClassName),\n/* harmony export */   hiddenMobileSideSection: () => (/* binding */ hiddenMobileSideSection),\n/* harmony export */   inactiveMainClassName: () => (/* binding */ inactiveMainClassName),\n/* harmony export */   mobileMainClassName: () => (/* binding */ mobileMainClassName),\n/* harmony export */   mobileSideSection: () => (/* binding */ mobileSideSection)\n/* harmony export */ });\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled/base */ \"./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js\");\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/css */ \"./node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var _tykhe_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../tykhe/utils */ \"./src/renderer/baccarat/tykhe/utils/index.js\");\n/* harmony import */ var _tykhe_constants_es__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../tykhe/constants/es */ \"./src/renderer/baccarat/tykhe/constants/es/index.js\");\n/* harmony import */ var _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../tykhe/bootstrap */ \"./src/renderer/baccarat/tykhe/bootstrap/index.js\");\n/* harmony import */ var _actions_style__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../actions/style */ \"./src/renderer/baccarat/player/views/GameBoard/actions/style.js\");\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\n\n\n\n\nconst HEADER_HEIGHT = 30;\nconst {\n  palette,\n  tints\n} = _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_4__.theme;\nconst Padding15 = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"ekm0kob4\",\n  label: \"Padding15\"\n})( false ? 0 : {\n  name: \"bqyv78\",\n  styles: \"display:flex;height:100%;width:10vw\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXHN0eWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVltQyIsImZpbGUiOiJDOlxcVXNlcnNcXFR5a2hlXFxlbGVjdHJvbmFwcHNcXHR5a2hlLWVsZWN0cm9uLWFwcHMtYmFjY2FyYXRcXHNyY1xccmVuZGVyZXJcXGJhY2NhcmF0XFxwbGF5ZXJcXHZpZXdzXFxHYW1lQm9hcmRcXHNlY3Rpb25zXFxzdHlsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcywga2V5ZnJhbWVzIH0gZnJvbSAnQGVtb3Rpb24vY3NzJztcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xyXG5pbXBvcnQgeyBoZXgycmdiYSwgfSBmcm9tICcuLi8uLi8uLi8uLi90eWtoZS91dGlscyc7XHJcbmltcG9ydCB7IFNJWkVTLCB9IGZyb20gJy4uLy4uLy4uLy4uL3R5a2hlL2NvbnN0YW50cy9lcyc7XHJcblxyXG5pbXBvcnQgeyB0aGVtZSwgfSBmcm9tICcuLi8uLi8uLi8uLi90eWtoZS9ib290c3RyYXAnO1xyXG5pbXBvcnQgeyBBQ1RJT05fV0lEVEgsIH0gZnJvbSAnLi4vYWN0aW9ucy9zdHlsZSc7XHJcblxyXG5leHBvcnQgY29uc3QgSEVBREVSX0hFSUdIVCA9IDMwO1xyXG5cclxuY29uc3QgeyBwYWxldHRlLCB0aW50cywgfSA9IHRoZW1lO1xyXG5cclxuZXhwb3J0IGNvbnN0IFBhZGRpbmcxNSA9IHN0eWxlZC5kaXZgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgd2lkdGg6IDEwdnc7XHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBIZWFkZXIgPSBzdHlsZWQuaGVhZGVyYFxyXG4gIGhlaWdodDogJHtIRUFERVJfSEVJR0hUfXB4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBiYWNrZ3JvdW5kOiAke2hleDJyZ2JhKHBhbGV0dGUucHJpbWFyeSwgdGludHMucHJpbWFyeSl9O1xyXG4gIGNvbG9yOiAke3BhbGV0dGUuZm9yZWdyb3VuZH07XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XHJcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4yN3MgbGluZWFyLCB0cmFuc2Zvcm0gMC4yN3MgbGluZWFyO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IE1haW4gPSBzdHlsZWQuZGl2YFxyXG4gIGhlaWdodDogY2FsYygxMDAlIC0gJHtIRUFERVJfSEVJR0hUfXB4KTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgb3BhY2l0eTogMTtcclxuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjdzIGxpbmVhcjtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTZWN0aW9uID0gc3R5bGVkLnNlY3Rpb25gXHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHRvcDogMDtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgdHJhbnNpdGlvbjogZmxleCAwLjI3cyBsaW5lYXIsIGhlaWdodCAwLjI3cyBsaW5lYXI7XHJcbiAgdHJhbnNmb3JtLW9yaWdpbjogYm90dG9tIGNlbnRlcjtcclxuXHJcbiAgOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0IDA7XHJcbiAgICBtYXJnaW46IGF1dG8gMDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIG9wYWNpdHk6ICR7dGludHMucHJpbWFyeX07XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IFNlY3Rpb24yID0gc3R5bGVkLnNlY3Rpb25gXHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHRvcDogMDtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgdHJhbnNpdGlvbjogZmxleCAwLjI3cyBsaW5lYXIsIGhlaWdodCAwLjI3cyBsaW5lYXI7XHJcbiAgdHJhbnNmb3JtLW9yaWdpbjogYm90dG9tIGNlbnRlcjtcclxuXHJcbiAgOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgbW9iaWxlU2lkZVNlY3Rpb24gPSBjc3NgXHJcbiAgd2lkdGg6ICR7QUNUSU9OX1dJRFRIfXB4O1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBoZWlnaHQ6IGF1dG87XHJcbiAgdG9wOiAke1NJWkVTLkFQUEJBUl9QT1JUUkFJVF9IRUlHSFR9cHg7XHJcbiAgYm90dG9tOiAyNSU7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgMCk7XHJcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMjdzLCBvcGFjaXR5IDAuMjdzO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgb3BhY2l0eTogMTtcclxuICB6LWluZGV4OiAxO1xyXG5cclxuICAke01haW59IHtcclxuICAgIHBhZGRpbmc6IDhweCAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gIH1cclxuXHJcbiAgOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiBub25lO1xyXG4gIH1cclxuXHJcbiAgOm50aC1vZi10eXBlKDIpIHtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICAke01haW59IHtcclxuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XHJcbiAgICAgIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgOmxhc3Qtb2YtdHlwZSB7XHJcbiAgICByaWdodDogMDtcclxuICAgICR7TWFpbn0ge1xyXG4gICAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XHJcbiAgICAgIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICAgICAgcGFkZGluZy1yaWdodDogNTJweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQG1lZGlhIGFsbCBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcclxuICAgIGhlaWdodDogNDhweDtcclxuICAgIHdpZHRoOiAke0FDVElPTl9XSURUSH1weDtcclxuICAgIHRvcDogYXV0bztcclxuICAgIGJvdHRvbTogLTQ4cHg7XHJcbiAgICB6LWluZGV4OiAyO1xyXG5cclxuICAgICR7TWFpbn0ge1xyXG4gICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICBmbGV4LWZsb3c6IHJvdy1yZXZlcnNlIG5vd3JhcDtcclxuICAgIH1cclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgaGlkZGVuTW9iaWxlU2lkZVNlY3Rpb24gPSBjc3NgXHJcbiAgQG1lZGlhIGFsbCBhbmQgKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xyXG4gICAgOm50aC1vZi10eXBlKDIpIHtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTEwMCUsIDApO1xyXG4gICAgfVxyXG5cclxuICAgIDpsYXN0LW9mLXR5cGUge1xyXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgxMDAlLCAwKTtcclxuICAgIH1cclxuICB9XHJcbiAgQG1lZGlhIGFsbCBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDEwMHZoKTtcclxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbmFjdGl2ZU1haW5DbGFzc05hbWUgPSBjc3NgXHJcbiAgb3BhY2l0eTogMC40ICFpbXBvcnRhbnQ7XHJcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgZGVza3RvcE1haW5DbGFzc05hbWUgPSBjc3NgXHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjI3cyBsaW5lYXI7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgbW9iaWxlTWFpbkNsYXNzTmFtZSA9IGNzc2BcclxuICBoZWlnaHQ6IDEwMCU7XHJcbmA7XHJcbiJdfQ== */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst Header = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"header\",  false ? 0 : {\n  target: \"ekm0kob3\",\n  label: \"Header\"\n})(\"height:\", HEADER_HEIGHT, \"px;position:relative;background:\", (0,_tykhe_utils__WEBPACK_IMPORTED_MODULE_2__.hex2rgba)(palette.primary, tints.primary), \";color:\", palette.foreground, \";display:flex;justify-content:center;align-items:center;font-size:14px;font-weight:bold;transform:translateY(0);transition:color 0.27s linear,transform 0.27s linear;\" + ( false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXHN0eWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtCbUMiLCJmaWxlIjoiQzpcXFVzZXJzXFxUeWtoZVxcZWxlY3Ryb25hcHBzXFx0eWtoZS1lbGVjdHJvbi1hcHBzLWJhY2NhcmF0XFxzcmNcXHJlbmRlcmVyXFxiYWNjYXJhdFxccGxheWVyXFx2aWV3c1xcR2FtZUJvYXJkXFxzZWN0aW9uc1xcc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MsIGtleWZyYW1lcyB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcclxuaW1wb3J0IHsgaGV4MnJnYmEsIH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlraGUvdXRpbHMnO1xyXG5pbXBvcnQgeyBTSVpFUywgfSBmcm9tICcuLi8uLi8uLi8uLi90eWtoZS9jb25zdGFudHMvZXMnO1xyXG5cclxuaW1wb3J0IHsgdGhlbWUsIH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlraGUvYm9vdHN0cmFwJztcclxuaW1wb3J0IHsgQUNUSU9OX1dJRFRILCB9IGZyb20gJy4uL2FjdGlvbnMvc3R5bGUnO1xyXG5cclxuZXhwb3J0IGNvbnN0IEhFQURFUl9IRUlHSFQgPSAzMDtcclxuXHJcbmNvbnN0IHsgcGFsZXR0ZSwgdGludHMsIH0gPSB0aGVtZTtcclxuXHJcbmV4cG9ydCBjb25zdCBQYWRkaW5nMTUgPSBzdHlsZWQuZGl2YFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMHZ3O1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgSGVhZGVyID0gc3R5bGVkLmhlYWRlcmBcclxuICBoZWlnaHQ6ICR7SEVBREVSX0hFSUdIVH1weDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgYmFja2dyb3VuZDogJHtoZXgycmdiYShwYWxldHRlLnByaW1hcnksIHRpbnRzLnByaW1hcnkpfTtcclxuICBjb2xvcjogJHtwYWxldHRlLmZvcmVncm91bmR9O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMjdzIGxpbmVhciwgdHJhbnNmb3JtIDAuMjdzIGxpbmVhcjtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBNYWluID0gc3R5bGVkLmRpdmBcclxuICBoZWlnaHQ6IGNhbGMoMTAwJSAtICR7SEVBREVSX0hFSUdIVH1weCk7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIG9wYWNpdHk6IDE7XHJcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI3cyBsaW5lYXI7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgU2VjdGlvbiA9IHN0eWxlZC5zZWN0aW9uYFxyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRyYW5zaXRpb246IGZsZXggMC4yN3MgbGluZWFyLCBoZWlnaHQgMC4yN3MgbGluZWFyO1xyXG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbSBjZW50ZXI7XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodCAwO1xyXG4gICAgbWFyZ2luOiBhdXRvIDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBvcGFjaXR5OiAke3RpbnRzLnByaW1hcnl9O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTZWN0aW9uMiA9IHN0eWxlZC5zZWN0aW9uYFxyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRyYW5zaXRpb246IGZsZXggMC4yN3MgbGluZWFyLCBoZWlnaHQgMC4yN3MgbGluZWFyO1xyXG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbSBjZW50ZXI7XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1vYmlsZVNpZGVTZWN0aW9uID0gY3NzYFxyXG4gIHdpZHRoOiAke0FDVElPTl9XSURUSH1weDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIHRvcDogJHtTSVpFUy5BUFBCQVJfUE9SVFJBSVRfSEVJR0hUfXB4O1xyXG4gIGJvdHRvbTogMjUlO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjI3cywgb3BhY2l0eSAwLjI3cztcclxuICBwYWRkaW5nOiAwO1xyXG4gIG9wYWNpdHk6IDE7XHJcbiAgei1pbmRleDogMTtcclxuXHJcbiAgJHtNYWlufSB7XHJcbiAgICBwYWRkaW5nOiA4cHggMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICB9XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogbm9uZTtcclxuICB9XHJcblxyXG4gIDpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgJHtNYWlufSB7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIDpsYXN0LW9mLXR5cGUge1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICAke01haW59IHtcclxuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xyXG4gICAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDUycHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICBoZWlnaHQ6IDQ4cHg7XHJcbiAgICB3aWR0aDogJHtBQ1RJT05fV0lEVEh9cHg7XHJcbiAgICB0b3A6IGF1dG87XHJcbiAgICBib3R0b206IC00OHB4O1xyXG4gICAgei1pbmRleDogMjtcclxuXHJcbiAgICAke01haW59IHtcclxuICAgICAgcGFkZGluZzogMDtcclxuICAgICAgZmxleC1mbG93OiByb3ctcmV2ZXJzZSBub3dyYXA7XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGhpZGRlbk1vYmlsZVNpZGVTZWN0aW9uID0gY3NzYFxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcclxuICAgIDpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0xMDAlLCAwKTtcclxuICAgIH1cclxuXHJcbiAgICA6bGFzdC1vZi10eXBlIHtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMTAwJSwgMCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAxMDB2aCk7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgaW5hY3RpdmVNYWluQ2xhc3NOYW1lID0gY3NzYFxyXG4gIG9wYWNpdHk6IDAuNCAhaW1wb3J0YW50O1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRlc2t0b3BNYWluQ2xhc3NOYW1lID0gY3NzYFxyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4yN3MgbGluZWFyO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1vYmlsZU1haW5DbGFzc05hbWUgPSBjc3NgXHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG5gO1xyXG4iXX0= */\"));\nconst Main = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"ekm0kob2\",\n  label: \"Main\"\n})(\"height:calc(100% - \", HEADER_HEIGHT, \"px);display:flex;align-items:center;justify-content:center;opacity:1;transition:opacity 0.27s linear;\" + ( false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXHN0eWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdDOEIiLCJmaWxlIjoiQzpcXFVzZXJzXFxUeWtoZVxcZWxlY3Ryb25hcHBzXFx0eWtoZS1lbGVjdHJvbi1hcHBzLWJhY2NhcmF0XFxzcmNcXHJlbmRlcmVyXFxiYWNjYXJhdFxccGxheWVyXFx2aWV3c1xcR2FtZUJvYXJkXFxzZWN0aW9uc1xcc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MsIGtleWZyYW1lcyB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcclxuaW1wb3J0IHsgaGV4MnJnYmEsIH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlraGUvdXRpbHMnO1xyXG5pbXBvcnQgeyBTSVpFUywgfSBmcm9tICcuLi8uLi8uLi8uLi90eWtoZS9jb25zdGFudHMvZXMnO1xyXG5cclxuaW1wb3J0IHsgdGhlbWUsIH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlraGUvYm9vdHN0cmFwJztcclxuaW1wb3J0IHsgQUNUSU9OX1dJRFRILCB9IGZyb20gJy4uL2FjdGlvbnMvc3R5bGUnO1xyXG5cclxuZXhwb3J0IGNvbnN0IEhFQURFUl9IRUlHSFQgPSAzMDtcclxuXHJcbmNvbnN0IHsgcGFsZXR0ZSwgdGludHMsIH0gPSB0aGVtZTtcclxuXHJcbmV4cG9ydCBjb25zdCBQYWRkaW5nMTUgPSBzdHlsZWQuZGl2YFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMHZ3O1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgSGVhZGVyID0gc3R5bGVkLmhlYWRlcmBcclxuICBoZWlnaHQ6ICR7SEVBREVSX0hFSUdIVH1weDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgYmFja2dyb3VuZDogJHtoZXgycmdiYShwYWxldHRlLnByaW1hcnksIHRpbnRzLnByaW1hcnkpfTtcclxuICBjb2xvcjogJHtwYWxldHRlLmZvcmVncm91bmR9O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMjdzIGxpbmVhciwgdHJhbnNmb3JtIDAuMjdzIGxpbmVhcjtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBNYWluID0gc3R5bGVkLmRpdmBcclxuICBoZWlnaHQ6IGNhbGMoMTAwJSAtICR7SEVBREVSX0hFSUdIVH1weCk7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIG9wYWNpdHk6IDE7XHJcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI3cyBsaW5lYXI7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgU2VjdGlvbiA9IHN0eWxlZC5zZWN0aW9uYFxyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRyYW5zaXRpb246IGZsZXggMC4yN3MgbGluZWFyLCBoZWlnaHQgMC4yN3MgbGluZWFyO1xyXG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbSBjZW50ZXI7XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodCAwO1xyXG4gICAgbWFyZ2luOiBhdXRvIDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBvcGFjaXR5OiAke3RpbnRzLnByaW1hcnl9O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTZWN0aW9uMiA9IHN0eWxlZC5zZWN0aW9uYFxyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRyYW5zaXRpb246IGZsZXggMC4yN3MgbGluZWFyLCBoZWlnaHQgMC4yN3MgbGluZWFyO1xyXG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbSBjZW50ZXI7XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1vYmlsZVNpZGVTZWN0aW9uID0gY3NzYFxyXG4gIHdpZHRoOiAke0FDVElPTl9XSURUSH1weDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIHRvcDogJHtTSVpFUy5BUFBCQVJfUE9SVFJBSVRfSEVJR0hUfXB4O1xyXG4gIGJvdHRvbTogMjUlO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjI3cywgb3BhY2l0eSAwLjI3cztcclxuICBwYWRkaW5nOiAwO1xyXG4gIG9wYWNpdHk6IDE7XHJcbiAgei1pbmRleDogMTtcclxuXHJcbiAgJHtNYWlufSB7XHJcbiAgICBwYWRkaW5nOiA4cHggMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICB9XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogbm9uZTtcclxuICB9XHJcblxyXG4gIDpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgJHtNYWlufSB7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIDpsYXN0LW9mLXR5cGUge1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICAke01haW59IHtcclxuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xyXG4gICAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDUycHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICBoZWlnaHQ6IDQ4cHg7XHJcbiAgICB3aWR0aDogJHtBQ1RJT05fV0lEVEh9cHg7XHJcbiAgICB0b3A6IGF1dG87XHJcbiAgICBib3R0b206IC00OHB4O1xyXG4gICAgei1pbmRleDogMjtcclxuXHJcbiAgICAke01haW59IHtcclxuICAgICAgcGFkZGluZzogMDtcclxuICAgICAgZmxleC1mbG93OiByb3ctcmV2ZXJzZSBub3dyYXA7XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGhpZGRlbk1vYmlsZVNpZGVTZWN0aW9uID0gY3NzYFxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcclxuICAgIDpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0xMDAlLCAwKTtcclxuICAgIH1cclxuXHJcbiAgICA6bGFzdC1vZi10eXBlIHtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMTAwJSwgMCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAxMDB2aCk7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgaW5hY3RpdmVNYWluQ2xhc3NOYW1lID0gY3NzYFxyXG4gIG9wYWNpdHk6IDAuNCAhaW1wb3J0YW50O1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRlc2t0b3BNYWluQ2xhc3NOYW1lID0gY3NzYFxyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4yN3MgbGluZWFyO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1vYmlsZU1haW5DbGFzc05hbWUgPSBjc3NgXHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG5gO1xyXG4iXX0= */\"));\nconst Section = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"section\",  false ? 0 : {\n  target: \"ekm0kob1\",\n  label: \"Section\"\n})(\"height:100%;top:0;display:inline-block;vertical-align:top;position:relative;transition:flex 0.27s linear,height 0.27s linear;transform-origin:bottom center;:before{content:'';width:100%;height:100%;bottom:0;left:0;margin:auto 0;position:absolute;opacity:\", tints.primary, \";}\" + ( false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXHN0eWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlDcUMiLCJmaWxlIjoiQzpcXFVzZXJzXFxUeWtoZVxcZWxlY3Ryb25hcHBzXFx0eWtoZS1lbGVjdHJvbi1hcHBzLWJhY2NhcmF0XFxzcmNcXHJlbmRlcmVyXFxiYWNjYXJhdFxccGxheWVyXFx2aWV3c1xcR2FtZUJvYXJkXFxzZWN0aW9uc1xcc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MsIGtleWZyYW1lcyB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcclxuaW1wb3J0IHsgaGV4MnJnYmEsIH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlraGUvdXRpbHMnO1xyXG5pbXBvcnQgeyBTSVpFUywgfSBmcm9tICcuLi8uLi8uLi8uLi90eWtoZS9jb25zdGFudHMvZXMnO1xyXG5cclxuaW1wb3J0IHsgdGhlbWUsIH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlraGUvYm9vdHN0cmFwJztcclxuaW1wb3J0IHsgQUNUSU9OX1dJRFRILCB9IGZyb20gJy4uL2FjdGlvbnMvc3R5bGUnO1xyXG5cclxuZXhwb3J0IGNvbnN0IEhFQURFUl9IRUlHSFQgPSAzMDtcclxuXHJcbmNvbnN0IHsgcGFsZXR0ZSwgdGludHMsIH0gPSB0aGVtZTtcclxuXHJcbmV4cG9ydCBjb25zdCBQYWRkaW5nMTUgPSBzdHlsZWQuZGl2YFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMHZ3O1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgSGVhZGVyID0gc3R5bGVkLmhlYWRlcmBcclxuICBoZWlnaHQ6ICR7SEVBREVSX0hFSUdIVH1weDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgYmFja2dyb3VuZDogJHtoZXgycmdiYShwYWxldHRlLnByaW1hcnksIHRpbnRzLnByaW1hcnkpfTtcclxuICBjb2xvcjogJHtwYWxldHRlLmZvcmVncm91bmR9O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMjdzIGxpbmVhciwgdHJhbnNmb3JtIDAuMjdzIGxpbmVhcjtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBNYWluID0gc3R5bGVkLmRpdmBcclxuICBoZWlnaHQ6IGNhbGMoMTAwJSAtICR7SEVBREVSX0hFSUdIVH1weCk7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIG9wYWNpdHk6IDE7XHJcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI3cyBsaW5lYXI7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgU2VjdGlvbiA9IHN0eWxlZC5zZWN0aW9uYFxyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRyYW5zaXRpb246IGZsZXggMC4yN3MgbGluZWFyLCBoZWlnaHQgMC4yN3MgbGluZWFyO1xyXG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbSBjZW50ZXI7XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodCAwO1xyXG4gICAgbWFyZ2luOiBhdXRvIDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBvcGFjaXR5OiAke3RpbnRzLnByaW1hcnl9O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTZWN0aW9uMiA9IHN0eWxlZC5zZWN0aW9uYFxyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRyYW5zaXRpb246IGZsZXggMC4yN3MgbGluZWFyLCBoZWlnaHQgMC4yN3MgbGluZWFyO1xyXG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbSBjZW50ZXI7XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1vYmlsZVNpZGVTZWN0aW9uID0gY3NzYFxyXG4gIHdpZHRoOiAke0FDVElPTl9XSURUSH1weDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIHRvcDogJHtTSVpFUy5BUFBCQVJfUE9SVFJBSVRfSEVJR0hUfXB4O1xyXG4gIGJvdHRvbTogMjUlO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjI3cywgb3BhY2l0eSAwLjI3cztcclxuICBwYWRkaW5nOiAwO1xyXG4gIG9wYWNpdHk6IDE7XHJcbiAgei1pbmRleDogMTtcclxuXHJcbiAgJHtNYWlufSB7XHJcbiAgICBwYWRkaW5nOiA4cHggMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICB9XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogbm9uZTtcclxuICB9XHJcblxyXG4gIDpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgJHtNYWlufSB7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIDpsYXN0LW9mLXR5cGUge1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICAke01haW59IHtcclxuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xyXG4gICAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDUycHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICBoZWlnaHQ6IDQ4cHg7XHJcbiAgICB3aWR0aDogJHtBQ1RJT05fV0lEVEh9cHg7XHJcbiAgICB0b3A6IGF1dG87XHJcbiAgICBib3R0b206IC00OHB4O1xyXG4gICAgei1pbmRleDogMjtcclxuXHJcbiAgICAke01haW59IHtcclxuICAgICAgcGFkZGluZzogMDtcclxuICAgICAgZmxleC1mbG93OiByb3ctcmV2ZXJzZSBub3dyYXA7XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGhpZGRlbk1vYmlsZVNpZGVTZWN0aW9uID0gY3NzYFxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcclxuICAgIDpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0xMDAlLCAwKTtcclxuICAgIH1cclxuXHJcbiAgICA6bGFzdC1vZi10eXBlIHtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMTAwJSwgMCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAxMDB2aCk7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgaW5hY3RpdmVNYWluQ2xhc3NOYW1lID0gY3NzYFxyXG4gIG9wYWNpdHk6IDAuNCAhaW1wb3J0YW50O1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRlc2t0b3BNYWluQ2xhc3NOYW1lID0gY3NzYFxyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4yN3MgbGluZWFyO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1vYmlsZU1haW5DbGFzc05hbWUgPSBjc3NgXHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG5gO1xyXG4iXX0= */\"));\nconst Section2 = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"section\",  false ? 0 : {\n  target: \"ekm0kob0\",\n  label: \"Section2\"\n})( false ? 0 : {\n  name: \"56g24l\",\n  styles: \"height:100%;top:0;display:inline-block;vertical-align:top;position:relative;transition:flex 0.27s linear,height 0.27s linear;transform-origin:bottom center;:before{content:'';width:100%;height:100%;bottom:0;left:0;position:absolute;}\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXHN0eWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQStEc0MiLCJmaWxlIjoiQzpcXFVzZXJzXFxUeWtoZVxcZWxlY3Ryb25hcHBzXFx0eWtoZS1lbGVjdHJvbi1hcHBzLWJhY2NhcmF0XFxzcmNcXHJlbmRlcmVyXFxiYWNjYXJhdFxccGxheWVyXFx2aWV3c1xcR2FtZUJvYXJkXFxzZWN0aW9uc1xcc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MsIGtleWZyYW1lcyB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcclxuaW1wb3J0IHsgaGV4MnJnYmEsIH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlraGUvdXRpbHMnO1xyXG5pbXBvcnQgeyBTSVpFUywgfSBmcm9tICcuLi8uLi8uLi8uLi90eWtoZS9jb25zdGFudHMvZXMnO1xyXG5cclxuaW1wb3J0IHsgdGhlbWUsIH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlraGUvYm9vdHN0cmFwJztcclxuaW1wb3J0IHsgQUNUSU9OX1dJRFRILCB9IGZyb20gJy4uL2FjdGlvbnMvc3R5bGUnO1xyXG5cclxuZXhwb3J0IGNvbnN0IEhFQURFUl9IRUlHSFQgPSAzMDtcclxuXHJcbmNvbnN0IHsgcGFsZXR0ZSwgdGludHMsIH0gPSB0aGVtZTtcclxuXHJcbmV4cG9ydCBjb25zdCBQYWRkaW5nMTUgPSBzdHlsZWQuZGl2YFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMHZ3O1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgSGVhZGVyID0gc3R5bGVkLmhlYWRlcmBcclxuICBoZWlnaHQ6ICR7SEVBREVSX0hFSUdIVH1weDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgYmFja2dyb3VuZDogJHtoZXgycmdiYShwYWxldHRlLnByaW1hcnksIHRpbnRzLnByaW1hcnkpfTtcclxuICBjb2xvcjogJHtwYWxldHRlLmZvcmVncm91bmR9O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMjdzIGxpbmVhciwgdHJhbnNmb3JtIDAuMjdzIGxpbmVhcjtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBNYWluID0gc3R5bGVkLmRpdmBcclxuICBoZWlnaHQ6IGNhbGMoMTAwJSAtICR7SEVBREVSX0hFSUdIVH1weCk7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIG9wYWNpdHk6IDE7XHJcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI3cyBsaW5lYXI7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgU2VjdGlvbiA9IHN0eWxlZC5zZWN0aW9uYFxyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRyYW5zaXRpb246IGZsZXggMC4yN3MgbGluZWFyLCBoZWlnaHQgMC4yN3MgbGluZWFyO1xyXG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbSBjZW50ZXI7XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodCAwO1xyXG4gICAgbWFyZ2luOiBhdXRvIDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBvcGFjaXR5OiAke3RpbnRzLnByaW1hcnl9O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTZWN0aW9uMiA9IHN0eWxlZC5zZWN0aW9uYFxyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRyYW5zaXRpb246IGZsZXggMC4yN3MgbGluZWFyLCBoZWlnaHQgMC4yN3MgbGluZWFyO1xyXG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbSBjZW50ZXI7XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1vYmlsZVNpZGVTZWN0aW9uID0gY3NzYFxyXG4gIHdpZHRoOiAke0FDVElPTl9XSURUSH1weDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIHRvcDogJHtTSVpFUy5BUFBCQVJfUE9SVFJBSVRfSEVJR0hUfXB4O1xyXG4gIGJvdHRvbTogMjUlO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjI3cywgb3BhY2l0eSAwLjI3cztcclxuICBwYWRkaW5nOiAwO1xyXG4gIG9wYWNpdHk6IDE7XHJcbiAgei1pbmRleDogMTtcclxuXHJcbiAgJHtNYWlufSB7XHJcbiAgICBwYWRkaW5nOiA4cHggMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICB9XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogbm9uZTtcclxuICB9XHJcblxyXG4gIDpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgJHtNYWlufSB7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIDpsYXN0LW9mLXR5cGUge1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICAke01haW59IHtcclxuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xyXG4gICAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDUycHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICBoZWlnaHQ6IDQ4cHg7XHJcbiAgICB3aWR0aDogJHtBQ1RJT05fV0lEVEh9cHg7XHJcbiAgICB0b3A6IGF1dG87XHJcbiAgICBib3R0b206IC00OHB4O1xyXG4gICAgei1pbmRleDogMjtcclxuXHJcbiAgICAke01haW59IHtcclxuICAgICAgcGFkZGluZzogMDtcclxuICAgICAgZmxleC1mbG93OiByb3ctcmV2ZXJzZSBub3dyYXA7XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGhpZGRlbk1vYmlsZVNpZGVTZWN0aW9uID0gY3NzYFxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcclxuICAgIDpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0xMDAlLCAwKTtcclxuICAgIH1cclxuXHJcbiAgICA6bGFzdC1vZi10eXBlIHtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMTAwJSwgMCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAxMDB2aCk7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgaW5hY3RpdmVNYWluQ2xhc3NOYW1lID0gY3NzYFxyXG4gIG9wYWNpdHk6IDAuNCAhaW1wb3J0YW50O1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRlc2t0b3BNYWluQ2xhc3NOYW1lID0gY3NzYFxyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4yN3MgbGluZWFyO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1vYmlsZU1haW5DbGFzc05hbWUgPSBjc3NgXHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG5gO1xyXG4iXX0= */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst mobileSideSection = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)(\"width:\", _actions_style__WEBPACK_IMPORTED_MODULE_5__.ACTION_WIDTH, \"px;position:absolute;height:auto;top:\", _tykhe_constants_es__WEBPACK_IMPORTED_MODULE_3__.SIZES.APPBAR_PORTRAIT_HEIGHT, \"px;bottom:25%;transform:translate(0, 0);transition:transform 0.27s,opacity 0.27s;padding:0;opacity:1;z-index:1;\", Main, \"{padding:8px 0;margin:0;width:100%;height:100%;position:relative;display:flex;flex-flow:column nowrap;justify-content:flex-start;}:before{content:none;}:nth-of-type(2){left:0;\", Main, \"{align-items:flex-start;@media all and (orientation: landscape){align-items:center;justify-content:flex-end;padding-left:10px;}}}:last-of-type{right:0;\", Main, \"{align-items:flex-end;@media all and (orientation: landscape){align-items:center;justify-content:flex-start;padding-right:52px;}}}@media all and (orientation: landscape){height:48px;width:\", _actions_style__WEBPACK_IMPORTED_MODULE_5__.ACTION_WIDTH, \"px;top:auto;bottom:-48px;z-index:2;\", Main, \"{padding:0;flex-flow:row-reverse nowrap;}}\" + ( false ? 0 : \";label:mobileSideSection;\"),  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXHN0eWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtGb0MiLCJmaWxlIjoiQzpcXFVzZXJzXFxUeWtoZVxcZWxlY3Ryb25hcHBzXFx0eWtoZS1lbGVjdHJvbi1hcHBzLWJhY2NhcmF0XFxzcmNcXHJlbmRlcmVyXFxiYWNjYXJhdFxccGxheWVyXFx2aWV3c1xcR2FtZUJvYXJkXFxzZWN0aW9uc1xcc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MsIGtleWZyYW1lcyB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcclxuaW1wb3J0IHsgaGV4MnJnYmEsIH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlraGUvdXRpbHMnO1xyXG5pbXBvcnQgeyBTSVpFUywgfSBmcm9tICcuLi8uLi8uLi8uLi90eWtoZS9jb25zdGFudHMvZXMnO1xyXG5cclxuaW1wb3J0IHsgdGhlbWUsIH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlraGUvYm9vdHN0cmFwJztcclxuaW1wb3J0IHsgQUNUSU9OX1dJRFRILCB9IGZyb20gJy4uL2FjdGlvbnMvc3R5bGUnO1xyXG5cclxuZXhwb3J0IGNvbnN0IEhFQURFUl9IRUlHSFQgPSAzMDtcclxuXHJcbmNvbnN0IHsgcGFsZXR0ZSwgdGludHMsIH0gPSB0aGVtZTtcclxuXHJcbmV4cG9ydCBjb25zdCBQYWRkaW5nMTUgPSBzdHlsZWQuZGl2YFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMHZ3O1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgSGVhZGVyID0gc3R5bGVkLmhlYWRlcmBcclxuICBoZWlnaHQ6ICR7SEVBREVSX0hFSUdIVH1weDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgYmFja2dyb3VuZDogJHtoZXgycmdiYShwYWxldHRlLnByaW1hcnksIHRpbnRzLnByaW1hcnkpfTtcclxuICBjb2xvcjogJHtwYWxldHRlLmZvcmVncm91bmR9O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMjdzIGxpbmVhciwgdHJhbnNmb3JtIDAuMjdzIGxpbmVhcjtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBNYWluID0gc3R5bGVkLmRpdmBcclxuICBoZWlnaHQ6IGNhbGMoMTAwJSAtICR7SEVBREVSX0hFSUdIVH1weCk7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIG9wYWNpdHk6IDE7XHJcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI3cyBsaW5lYXI7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgU2VjdGlvbiA9IHN0eWxlZC5zZWN0aW9uYFxyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRyYW5zaXRpb246IGZsZXggMC4yN3MgbGluZWFyLCBoZWlnaHQgMC4yN3MgbGluZWFyO1xyXG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbSBjZW50ZXI7XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodCAwO1xyXG4gICAgbWFyZ2luOiBhdXRvIDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBvcGFjaXR5OiAke3RpbnRzLnByaW1hcnl9O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTZWN0aW9uMiA9IHN0eWxlZC5zZWN0aW9uYFxyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRyYW5zaXRpb246IGZsZXggMC4yN3MgbGluZWFyLCBoZWlnaHQgMC4yN3MgbGluZWFyO1xyXG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbSBjZW50ZXI7XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1vYmlsZVNpZGVTZWN0aW9uID0gY3NzYFxyXG4gIHdpZHRoOiAke0FDVElPTl9XSURUSH1weDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIHRvcDogJHtTSVpFUy5BUFBCQVJfUE9SVFJBSVRfSEVJR0hUfXB4O1xyXG4gIGJvdHRvbTogMjUlO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjI3cywgb3BhY2l0eSAwLjI3cztcclxuICBwYWRkaW5nOiAwO1xyXG4gIG9wYWNpdHk6IDE7XHJcbiAgei1pbmRleDogMTtcclxuXHJcbiAgJHtNYWlufSB7XHJcbiAgICBwYWRkaW5nOiA4cHggMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICB9XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogbm9uZTtcclxuICB9XHJcblxyXG4gIDpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgJHtNYWlufSB7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIDpsYXN0LW9mLXR5cGUge1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICAke01haW59IHtcclxuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xyXG4gICAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDUycHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICBoZWlnaHQ6IDQ4cHg7XHJcbiAgICB3aWR0aDogJHtBQ1RJT05fV0lEVEh9cHg7XHJcbiAgICB0b3A6IGF1dG87XHJcbiAgICBib3R0b206IC00OHB4O1xyXG4gICAgei1pbmRleDogMjtcclxuXHJcbiAgICAke01haW59IHtcclxuICAgICAgcGFkZGluZzogMDtcclxuICAgICAgZmxleC1mbG93OiByb3ctcmV2ZXJzZSBub3dyYXA7XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGhpZGRlbk1vYmlsZVNpZGVTZWN0aW9uID0gY3NzYFxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcclxuICAgIDpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0xMDAlLCAwKTtcclxuICAgIH1cclxuXHJcbiAgICA6bGFzdC1vZi10eXBlIHtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMTAwJSwgMCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAxMDB2aCk7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgaW5hY3RpdmVNYWluQ2xhc3NOYW1lID0gY3NzYFxyXG4gIG9wYWNpdHk6IDAuNCAhaW1wb3J0YW50O1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRlc2t0b3BNYWluQ2xhc3NOYW1lID0gY3NzYFxyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4yN3MgbGluZWFyO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1vYmlsZU1haW5DbGFzc05hbWUgPSBjc3NgXHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG5gO1xyXG4iXX0= */\");\nconst hiddenMobileSideSection = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)( false ? 0 : {\n  name: \"1q8ft13-hiddenMobileSideSection\",\n  styles: \"@media all and (orientation: portrait){:nth-of-type(2){transform:translate(-100%, 0);}:last-of-type{transform:translate(100%, 0);}}@media all and (orientation: landscape){transform:translate(0, 100vh);pointer-events:none;};label:hiddenMobileSideSection;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXHN0eWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1KMEMiLCJmaWxlIjoiQzpcXFVzZXJzXFxUeWtoZVxcZWxlY3Ryb25hcHBzXFx0eWtoZS1lbGVjdHJvbi1hcHBzLWJhY2NhcmF0XFxzcmNcXHJlbmRlcmVyXFxiYWNjYXJhdFxccGxheWVyXFx2aWV3c1xcR2FtZUJvYXJkXFxzZWN0aW9uc1xcc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MsIGtleWZyYW1lcyB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcclxuaW1wb3J0IHsgaGV4MnJnYmEsIH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlraGUvdXRpbHMnO1xyXG5pbXBvcnQgeyBTSVpFUywgfSBmcm9tICcuLi8uLi8uLi8uLi90eWtoZS9jb25zdGFudHMvZXMnO1xyXG5cclxuaW1wb3J0IHsgdGhlbWUsIH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlraGUvYm9vdHN0cmFwJztcclxuaW1wb3J0IHsgQUNUSU9OX1dJRFRILCB9IGZyb20gJy4uL2FjdGlvbnMvc3R5bGUnO1xyXG5cclxuZXhwb3J0IGNvbnN0IEhFQURFUl9IRUlHSFQgPSAzMDtcclxuXHJcbmNvbnN0IHsgcGFsZXR0ZSwgdGludHMsIH0gPSB0aGVtZTtcclxuXHJcbmV4cG9ydCBjb25zdCBQYWRkaW5nMTUgPSBzdHlsZWQuZGl2YFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMHZ3O1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgSGVhZGVyID0gc3R5bGVkLmhlYWRlcmBcclxuICBoZWlnaHQ6ICR7SEVBREVSX0hFSUdIVH1weDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgYmFja2dyb3VuZDogJHtoZXgycmdiYShwYWxldHRlLnByaW1hcnksIHRpbnRzLnByaW1hcnkpfTtcclxuICBjb2xvcjogJHtwYWxldHRlLmZvcmVncm91bmR9O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMjdzIGxpbmVhciwgdHJhbnNmb3JtIDAuMjdzIGxpbmVhcjtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBNYWluID0gc3R5bGVkLmRpdmBcclxuICBoZWlnaHQ6IGNhbGMoMTAwJSAtICR7SEVBREVSX0hFSUdIVH1weCk7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIG9wYWNpdHk6IDE7XHJcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI3cyBsaW5lYXI7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgU2VjdGlvbiA9IHN0eWxlZC5zZWN0aW9uYFxyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRyYW5zaXRpb246IGZsZXggMC4yN3MgbGluZWFyLCBoZWlnaHQgMC4yN3MgbGluZWFyO1xyXG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbSBjZW50ZXI7XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodCAwO1xyXG4gICAgbWFyZ2luOiBhdXRvIDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBvcGFjaXR5OiAke3RpbnRzLnByaW1hcnl9O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTZWN0aW9uMiA9IHN0eWxlZC5zZWN0aW9uYFxyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRyYW5zaXRpb246IGZsZXggMC4yN3MgbGluZWFyLCBoZWlnaHQgMC4yN3MgbGluZWFyO1xyXG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbSBjZW50ZXI7XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1vYmlsZVNpZGVTZWN0aW9uID0gY3NzYFxyXG4gIHdpZHRoOiAke0FDVElPTl9XSURUSH1weDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIHRvcDogJHtTSVpFUy5BUFBCQVJfUE9SVFJBSVRfSEVJR0hUfXB4O1xyXG4gIGJvdHRvbTogMjUlO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjI3cywgb3BhY2l0eSAwLjI3cztcclxuICBwYWRkaW5nOiAwO1xyXG4gIG9wYWNpdHk6IDE7XHJcbiAgei1pbmRleDogMTtcclxuXHJcbiAgJHtNYWlufSB7XHJcbiAgICBwYWRkaW5nOiA4cHggMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICB9XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogbm9uZTtcclxuICB9XHJcblxyXG4gIDpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgJHtNYWlufSB7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIDpsYXN0LW9mLXR5cGUge1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICAke01haW59IHtcclxuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xyXG4gICAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDUycHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICBoZWlnaHQ6IDQ4cHg7XHJcbiAgICB3aWR0aDogJHtBQ1RJT05fV0lEVEh9cHg7XHJcbiAgICB0b3A6IGF1dG87XHJcbiAgICBib3R0b206IC00OHB4O1xyXG4gICAgei1pbmRleDogMjtcclxuXHJcbiAgICAke01haW59IHtcclxuICAgICAgcGFkZGluZzogMDtcclxuICAgICAgZmxleC1mbG93OiByb3ctcmV2ZXJzZSBub3dyYXA7XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGhpZGRlbk1vYmlsZVNpZGVTZWN0aW9uID0gY3NzYFxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcclxuICAgIDpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0xMDAlLCAwKTtcclxuICAgIH1cclxuXHJcbiAgICA6bGFzdC1vZi10eXBlIHtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMTAwJSwgMCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAxMDB2aCk7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgaW5hY3RpdmVNYWluQ2xhc3NOYW1lID0gY3NzYFxyXG4gIG9wYWNpdHk6IDAuNCAhaW1wb3J0YW50O1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRlc2t0b3BNYWluQ2xhc3NOYW1lID0gY3NzYFxyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4yN3MgbGluZWFyO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1vYmlsZU1haW5DbGFzc05hbWUgPSBjc3NgXHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG5gO1xyXG4iXX0= */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst inactiveMainClassName = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)( false ? 0 : {\n  name: \"5if9uz-inactiveMainClassName\",\n  styles: \"opacity:0.4!important;pointer-events:none;label:inactiveMainClassName;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXHN0eWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1Ld0MiLCJmaWxlIjoiQzpcXFVzZXJzXFxUeWtoZVxcZWxlY3Ryb25hcHBzXFx0eWtoZS1lbGVjdHJvbi1hcHBzLWJhY2NhcmF0XFxzcmNcXHJlbmRlcmVyXFxiYWNjYXJhdFxccGxheWVyXFx2aWV3c1xcR2FtZUJvYXJkXFxzZWN0aW9uc1xcc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MsIGtleWZyYW1lcyB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcclxuaW1wb3J0IHsgaGV4MnJnYmEsIH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlraGUvdXRpbHMnO1xyXG5pbXBvcnQgeyBTSVpFUywgfSBmcm9tICcuLi8uLi8uLi8uLi90eWtoZS9jb25zdGFudHMvZXMnO1xyXG5cclxuaW1wb3J0IHsgdGhlbWUsIH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlraGUvYm9vdHN0cmFwJztcclxuaW1wb3J0IHsgQUNUSU9OX1dJRFRILCB9IGZyb20gJy4uL2FjdGlvbnMvc3R5bGUnO1xyXG5cclxuZXhwb3J0IGNvbnN0IEhFQURFUl9IRUlHSFQgPSAzMDtcclxuXHJcbmNvbnN0IHsgcGFsZXR0ZSwgdGludHMsIH0gPSB0aGVtZTtcclxuXHJcbmV4cG9ydCBjb25zdCBQYWRkaW5nMTUgPSBzdHlsZWQuZGl2YFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMHZ3O1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgSGVhZGVyID0gc3R5bGVkLmhlYWRlcmBcclxuICBoZWlnaHQ6ICR7SEVBREVSX0hFSUdIVH1weDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgYmFja2dyb3VuZDogJHtoZXgycmdiYShwYWxldHRlLnByaW1hcnksIHRpbnRzLnByaW1hcnkpfTtcclxuICBjb2xvcjogJHtwYWxldHRlLmZvcmVncm91bmR9O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMjdzIGxpbmVhciwgdHJhbnNmb3JtIDAuMjdzIGxpbmVhcjtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBNYWluID0gc3R5bGVkLmRpdmBcclxuICBoZWlnaHQ6IGNhbGMoMTAwJSAtICR7SEVBREVSX0hFSUdIVH1weCk7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIG9wYWNpdHk6IDE7XHJcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI3cyBsaW5lYXI7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgU2VjdGlvbiA9IHN0eWxlZC5zZWN0aW9uYFxyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRyYW5zaXRpb246IGZsZXggMC4yN3MgbGluZWFyLCBoZWlnaHQgMC4yN3MgbGluZWFyO1xyXG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbSBjZW50ZXI7XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodCAwO1xyXG4gICAgbWFyZ2luOiBhdXRvIDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBvcGFjaXR5OiAke3RpbnRzLnByaW1hcnl9O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTZWN0aW9uMiA9IHN0eWxlZC5zZWN0aW9uYFxyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRyYW5zaXRpb246IGZsZXggMC4yN3MgbGluZWFyLCBoZWlnaHQgMC4yN3MgbGluZWFyO1xyXG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbSBjZW50ZXI7XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1vYmlsZVNpZGVTZWN0aW9uID0gY3NzYFxyXG4gIHdpZHRoOiAke0FDVElPTl9XSURUSH1weDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIHRvcDogJHtTSVpFUy5BUFBCQVJfUE9SVFJBSVRfSEVJR0hUfXB4O1xyXG4gIGJvdHRvbTogMjUlO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjI3cywgb3BhY2l0eSAwLjI3cztcclxuICBwYWRkaW5nOiAwO1xyXG4gIG9wYWNpdHk6IDE7XHJcbiAgei1pbmRleDogMTtcclxuXHJcbiAgJHtNYWlufSB7XHJcbiAgICBwYWRkaW5nOiA4cHggMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICB9XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogbm9uZTtcclxuICB9XHJcblxyXG4gIDpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgJHtNYWlufSB7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIDpsYXN0LW9mLXR5cGUge1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICAke01haW59IHtcclxuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xyXG4gICAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDUycHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICBoZWlnaHQ6IDQ4cHg7XHJcbiAgICB3aWR0aDogJHtBQ1RJT05fV0lEVEh9cHg7XHJcbiAgICB0b3A6IGF1dG87XHJcbiAgICBib3R0b206IC00OHB4O1xyXG4gICAgei1pbmRleDogMjtcclxuXHJcbiAgICAke01haW59IHtcclxuICAgICAgcGFkZGluZzogMDtcclxuICAgICAgZmxleC1mbG93OiByb3ctcmV2ZXJzZSBub3dyYXA7XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGhpZGRlbk1vYmlsZVNpZGVTZWN0aW9uID0gY3NzYFxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcclxuICAgIDpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0xMDAlLCAwKTtcclxuICAgIH1cclxuXHJcbiAgICA6bGFzdC1vZi10eXBlIHtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMTAwJSwgMCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAxMDB2aCk7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgaW5hY3RpdmVNYWluQ2xhc3NOYW1lID0gY3NzYFxyXG4gIG9wYWNpdHk6IDAuNCAhaW1wb3J0YW50O1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRlc2t0b3BNYWluQ2xhc3NOYW1lID0gY3NzYFxyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4yN3MgbGluZWFyO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1vYmlsZU1haW5DbGFzc05hbWUgPSBjc3NgXHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG5gO1xyXG4iXX0= */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst desktopMainClassName = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)( false ? 0 : {\n  name: \"xw2ko0-desktopMainClassName\",\n  styles: \"transform:translateY(0);transition:transform 0.27s linear;label:desktopMainClassName;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXHN0eWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXdLdUMiLCJmaWxlIjoiQzpcXFVzZXJzXFxUeWtoZVxcZWxlY3Ryb25hcHBzXFx0eWtoZS1lbGVjdHJvbi1hcHBzLWJhY2NhcmF0XFxzcmNcXHJlbmRlcmVyXFxiYWNjYXJhdFxccGxheWVyXFx2aWV3c1xcR2FtZUJvYXJkXFxzZWN0aW9uc1xcc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MsIGtleWZyYW1lcyB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcclxuaW1wb3J0IHsgaGV4MnJnYmEsIH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlraGUvdXRpbHMnO1xyXG5pbXBvcnQgeyBTSVpFUywgfSBmcm9tICcuLi8uLi8uLi8uLi90eWtoZS9jb25zdGFudHMvZXMnO1xyXG5cclxuaW1wb3J0IHsgdGhlbWUsIH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlraGUvYm9vdHN0cmFwJztcclxuaW1wb3J0IHsgQUNUSU9OX1dJRFRILCB9IGZyb20gJy4uL2FjdGlvbnMvc3R5bGUnO1xyXG5cclxuZXhwb3J0IGNvbnN0IEhFQURFUl9IRUlHSFQgPSAzMDtcclxuXHJcbmNvbnN0IHsgcGFsZXR0ZSwgdGludHMsIH0gPSB0aGVtZTtcclxuXHJcbmV4cG9ydCBjb25zdCBQYWRkaW5nMTUgPSBzdHlsZWQuZGl2YFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMHZ3O1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgSGVhZGVyID0gc3R5bGVkLmhlYWRlcmBcclxuICBoZWlnaHQ6ICR7SEVBREVSX0hFSUdIVH1weDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgYmFja2dyb3VuZDogJHtoZXgycmdiYShwYWxldHRlLnByaW1hcnksIHRpbnRzLnByaW1hcnkpfTtcclxuICBjb2xvcjogJHtwYWxldHRlLmZvcmVncm91bmR9O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMjdzIGxpbmVhciwgdHJhbnNmb3JtIDAuMjdzIGxpbmVhcjtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBNYWluID0gc3R5bGVkLmRpdmBcclxuICBoZWlnaHQ6IGNhbGMoMTAwJSAtICR7SEVBREVSX0hFSUdIVH1weCk7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIG9wYWNpdHk6IDE7XHJcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI3cyBsaW5lYXI7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgU2VjdGlvbiA9IHN0eWxlZC5zZWN0aW9uYFxyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRyYW5zaXRpb246IGZsZXggMC4yN3MgbGluZWFyLCBoZWlnaHQgMC4yN3MgbGluZWFyO1xyXG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbSBjZW50ZXI7XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodCAwO1xyXG4gICAgbWFyZ2luOiBhdXRvIDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBvcGFjaXR5OiAke3RpbnRzLnByaW1hcnl9O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTZWN0aW9uMiA9IHN0eWxlZC5zZWN0aW9uYFxyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRyYW5zaXRpb246IGZsZXggMC4yN3MgbGluZWFyLCBoZWlnaHQgMC4yN3MgbGluZWFyO1xyXG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbSBjZW50ZXI7XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1vYmlsZVNpZGVTZWN0aW9uID0gY3NzYFxyXG4gIHdpZHRoOiAke0FDVElPTl9XSURUSH1weDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIHRvcDogJHtTSVpFUy5BUFBCQVJfUE9SVFJBSVRfSEVJR0hUfXB4O1xyXG4gIGJvdHRvbTogMjUlO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjI3cywgb3BhY2l0eSAwLjI3cztcclxuICBwYWRkaW5nOiAwO1xyXG4gIG9wYWNpdHk6IDE7XHJcbiAgei1pbmRleDogMTtcclxuXHJcbiAgJHtNYWlufSB7XHJcbiAgICBwYWRkaW5nOiA4cHggMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICB9XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogbm9uZTtcclxuICB9XHJcblxyXG4gIDpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgJHtNYWlufSB7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIDpsYXN0LW9mLXR5cGUge1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICAke01haW59IHtcclxuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xyXG4gICAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDUycHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICBoZWlnaHQ6IDQ4cHg7XHJcbiAgICB3aWR0aDogJHtBQ1RJT05fV0lEVEh9cHg7XHJcbiAgICB0b3A6IGF1dG87XHJcbiAgICBib3R0b206IC00OHB4O1xyXG4gICAgei1pbmRleDogMjtcclxuXHJcbiAgICAke01haW59IHtcclxuICAgICAgcGFkZGluZzogMDtcclxuICAgICAgZmxleC1mbG93OiByb3ctcmV2ZXJzZSBub3dyYXA7XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGhpZGRlbk1vYmlsZVNpZGVTZWN0aW9uID0gY3NzYFxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcclxuICAgIDpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0xMDAlLCAwKTtcclxuICAgIH1cclxuXHJcbiAgICA6bGFzdC1vZi10eXBlIHtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMTAwJSwgMCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAxMDB2aCk7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgaW5hY3RpdmVNYWluQ2xhc3NOYW1lID0gY3NzYFxyXG4gIG9wYWNpdHk6IDAuNCAhaW1wb3J0YW50O1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRlc2t0b3BNYWluQ2xhc3NOYW1lID0gY3NzYFxyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4yN3MgbGluZWFyO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1vYmlsZU1haW5DbGFzc05hbWUgPSBjc3NgXHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG5gO1xyXG4iXX0= */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst mobileMainClassName = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)( false ? 0 : {\n  name: \"1xxbskj-mobileMainClassName\",\n  styles: \"height:100%;label:mobileMainClassName;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc2VjdGlvbnNcXHN0eWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZLc0MiLCJmaWxlIjoiQzpcXFVzZXJzXFxUeWtoZVxcZWxlY3Ryb25hcHBzXFx0eWtoZS1lbGVjdHJvbi1hcHBzLWJhY2NhcmF0XFxzcmNcXHJlbmRlcmVyXFxiYWNjYXJhdFxccGxheWVyXFx2aWV3c1xcR2FtZUJvYXJkXFxzZWN0aW9uc1xcc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MsIGtleWZyYW1lcyB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcclxuaW1wb3J0IHsgaGV4MnJnYmEsIH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlraGUvdXRpbHMnO1xyXG5pbXBvcnQgeyBTSVpFUywgfSBmcm9tICcuLi8uLi8uLi8uLi90eWtoZS9jb25zdGFudHMvZXMnO1xyXG5cclxuaW1wb3J0IHsgdGhlbWUsIH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlraGUvYm9vdHN0cmFwJztcclxuaW1wb3J0IHsgQUNUSU9OX1dJRFRILCB9IGZyb20gJy4uL2FjdGlvbnMvc3R5bGUnO1xyXG5cclxuZXhwb3J0IGNvbnN0IEhFQURFUl9IRUlHSFQgPSAzMDtcclxuXHJcbmNvbnN0IHsgcGFsZXR0ZSwgdGludHMsIH0gPSB0aGVtZTtcclxuXHJcbmV4cG9ydCBjb25zdCBQYWRkaW5nMTUgPSBzdHlsZWQuZGl2YFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMHZ3O1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgSGVhZGVyID0gc3R5bGVkLmhlYWRlcmBcclxuICBoZWlnaHQ6ICR7SEVBREVSX0hFSUdIVH1weDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgYmFja2dyb3VuZDogJHtoZXgycmdiYShwYWxldHRlLnByaW1hcnksIHRpbnRzLnByaW1hcnkpfTtcclxuICBjb2xvcjogJHtwYWxldHRlLmZvcmVncm91bmR9O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMjdzIGxpbmVhciwgdHJhbnNmb3JtIDAuMjdzIGxpbmVhcjtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBNYWluID0gc3R5bGVkLmRpdmBcclxuICBoZWlnaHQ6IGNhbGMoMTAwJSAtICR7SEVBREVSX0hFSUdIVH1weCk7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIG9wYWNpdHk6IDE7XHJcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI3cyBsaW5lYXI7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgU2VjdGlvbiA9IHN0eWxlZC5zZWN0aW9uYFxyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRyYW5zaXRpb246IGZsZXggMC4yN3MgbGluZWFyLCBoZWlnaHQgMC4yN3MgbGluZWFyO1xyXG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbSBjZW50ZXI7XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodCAwO1xyXG4gICAgbWFyZ2luOiBhdXRvIDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBvcGFjaXR5OiAke3RpbnRzLnByaW1hcnl9O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTZWN0aW9uMiA9IHN0eWxlZC5zZWN0aW9uYFxyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRyYW5zaXRpb246IGZsZXggMC4yN3MgbGluZWFyLCBoZWlnaHQgMC4yN3MgbGluZWFyO1xyXG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbSBjZW50ZXI7XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1vYmlsZVNpZGVTZWN0aW9uID0gY3NzYFxyXG4gIHdpZHRoOiAke0FDVElPTl9XSURUSH1weDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIHRvcDogJHtTSVpFUy5BUFBCQVJfUE9SVFJBSVRfSEVJR0hUfXB4O1xyXG4gIGJvdHRvbTogMjUlO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjI3cywgb3BhY2l0eSAwLjI3cztcclxuICBwYWRkaW5nOiAwO1xyXG4gIG9wYWNpdHk6IDE7XHJcbiAgei1pbmRleDogMTtcclxuXHJcbiAgJHtNYWlufSB7XHJcbiAgICBwYWRkaW5nOiA4cHggMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICB9XHJcblxyXG4gIDpiZWZvcmUge1xyXG4gICAgY29udGVudDogbm9uZTtcclxuICB9XHJcblxyXG4gIDpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgJHtNYWlufSB7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIDpsYXN0LW9mLXR5cGUge1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICAke01haW59IHtcclxuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xyXG4gICAgICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDUycHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICBoZWlnaHQ6IDQ4cHg7XHJcbiAgICB3aWR0aDogJHtBQ1RJT05fV0lEVEh9cHg7XHJcbiAgICB0b3A6IGF1dG87XHJcbiAgICBib3R0b206IC00OHB4O1xyXG4gICAgei1pbmRleDogMjtcclxuXHJcbiAgICAke01haW59IHtcclxuICAgICAgcGFkZGluZzogMDtcclxuICAgICAgZmxleC1mbG93OiByb3ctcmV2ZXJzZSBub3dyYXA7XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGhpZGRlbk1vYmlsZVNpZGVTZWN0aW9uID0gY3NzYFxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcclxuICAgIDpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0xMDAlLCAwKTtcclxuICAgIH1cclxuXHJcbiAgICA6bGFzdC1vZi10eXBlIHtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMTAwJSwgMCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAxMDB2aCk7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgaW5hY3RpdmVNYWluQ2xhc3NOYW1lID0gY3NzYFxyXG4gIG9wYWNpdHk6IDAuNCAhaW1wb3J0YW50O1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRlc2t0b3BNYWluQ2xhc3NOYW1lID0gY3NzYFxyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4yN3MgbGluZWFyO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1vYmlsZU1haW5DbGFzc05hbWUgPSBjc3NgXHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG5gO1xyXG4iXX0= */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/views/GameBoard/sections/style.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/views/GameBoard/style.js":
/*!***************************************************************!*\
  !*** ./src/renderer/baccarat/player/views/GameBoard/style.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BankerHandsContainer: () => (/* binding */ BankerHandsContainer),\n/* harmony export */   BankerHandsHandsFlex: () => (/* binding */ BankerHandsHandsFlex),\n/* harmony export */   BankerImg: () => (/* binding */ BankerImg),\n/* harmony export */   BeadRoadBgContainer: () => (/* binding */ BeadRoadBgContainer),\n/* harmony export */   BeadRoadContainer: () => (/* binding */ BeadRoadContainer),\n/* harmony export */   BetGridContainer: () => (/* binding */ BetGridContainer),\n/* harmony export */   BigEyeRoadBgContainer: () => (/* binding */ BigEyeRoadBgContainer),\n/* harmony export */   BigEyeRoadContainer: () => (/* binding */ BigEyeRoadContainer),\n/* harmony export */   BigRoadBgContainer: () => (/* binding */ BigRoadBgContainer),\n/* harmony export */   BigRoadContainer: () => (/* binding */ BigRoadContainer),\n/* harmony export */   CockroachRoadBgContainer: () => (/* binding */ CockroachRoadBgContainer),\n/* harmony export */   CockroachRoadContainer: () => (/* binding */ CockroachRoadContainer),\n/* harmony export */   Container: () => (/* binding */ Container),\n/* harmony export */   ContainerGoldenBorder: () => (/* binding */ ContainerGoldenBorder),\n/* harmony export */   GameHeader: () => (/* binding */ GameHeader),\n/* harmony export */   HEADER_HEIGHT: () => (/* binding */ HEADER_HEIGHT),\n/* harmony export */   Header: () => (/* binding */ Header),\n/* harmony export */   MainContainer: () => (/* binding */ MainContainer),\n/* harmony export */   PlayerHandsContainer: () => (/* binding */ PlayerHandsContainer),\n/* harmony export */   PlayerHandsHandsFlex: () => (/* binding */ PlayerHandsHandsFlex),\n/* harmony export */   PlayerImg: () => (/* binding */ PlayerImg),\n/* harmony export */   ResultMessageContainer: () => (/* binding */ ResultMessageContainer),\n/* harmony export */   RoadPreviewContainer: () => (/* binding */ RoadPreviewContainer),\n/* harmony export */   SmallRoadBgContainer: () => (/* binding */ SmallRoadBgContainer),\n/* harmony export */   SmallRoadContainer: () => (/* binding */ SmallRoadContainer),\n/* harmony export */   StatisticsContainer: () => (/* binding */ StatisticsContainer),\n/* harmony export */   StatsContainer: () => (/* binding */ StatsContainer),\n/* harmony export */   StatusContainer: () => (/* binding */ StatusContainer),\n/* harmony export */   StatusTitle: () => (/* binding */ StatusTitle),\n/* harmony export */   bankerBackground: () => (/* binding */ bankerBackground),\n/* harmony export */   bankerPairPulseContainer: () => (/* binding */ bankerPairPulseContainer),\n/* harmony export */   bankerPulseContainer: () => (/* binding */ bankerPulseContainer),\n/* harmony export */   fadeInAnimation: () => (/* binding */ fadeInAnimation),\n/* harmony export */   headerClassName: () => (/* binding */ headerClassName),\n/* harmony export */   inactiveGameBoard: () => (/* binding */ inactiveGameBoard),\n/* harmony export */   inactiveGrid: () => (/* binding */ inactiveGrid),\n/* harmony export */   mainBetsLabelClassName: () => (/* binding */ mainBetsLabelClassName),\n/* harmony export */   mobileGameBoard: () => (/* binding */ mobileGameBoard),\n/* harmony export */   playerBackground: () => (/* binding */ playerBackground),\n/* harmony export */   playerPairPulseContainer: () => (/* binding */ playerPairPulseContainer),\n/* harmony export */   playerPulseContainer: () => (/* binding */ playerPulseContainer),\n/* harmony export */   progressBarAnimation: () => (/* binding */ progressBarAnimation),\n/* harmony export */   suitedTiePulseContainer: () => (/* binding */ suitedTiePulseContainer),\n/* harmony export */   superSixPulseContainer: () => (/* binding */ superSixPulseContainer),\n/* harmony export */   tiePulseContainer: () => (/* binding */ tiePulseContainer),\n/* harmony export */   tiltedGrid: () => (/* binding */ tiltedGrid)\n/* harmony export */ });\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled/base */ \"./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js\");\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/css */ \"./node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var _tykhe_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../tykhe/utils */ \"./src/renderer/baccarat/tykhe/utils/index.js\");\n/* harmony import */ var tinycolor2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tinycolor2 */ \"./node_modules/tinycolor2/esm/tinycolor.js\");\n/* harmony import */ var _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../tykhe/bootstrap */ \"./src/renderer/baccarat/tykhe/bootstrap/index.js\");\n/* harmony import */ var _assets_images_bg_png__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../assets/images/bg.png */ \"./src/renderer/baccarat/player/assets/images/bg.png\");\n/* harmony import */ var _assets_images_BaccaratName_png__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../assets/images/BaccaratName.png */ \"./src/renderer/baccarat/player/assets/images/BaccaratName.png\");\n/* harmony import */ var _assets_images_BigScreenBorder_png__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../assets/images/BigScreenBorder.png */ \"./src/renderer/baccarat/player/assets/images/BigScreenBorder.png\");\n/* harmony import */ var _assets_images_Banker_png__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../assets/images/Banker.png */ \"./src/renderer/baccarat/player/assets/images/Banker.png\");\n/* harmony import */ var _assets_images_Player_png__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../assets/images/Player.png */ \"./src/renderer/baccarat/player/assets/images/Player.png\");\n/* harmony import */ var _uiConfig__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../uiConfig */ \"./src/renderer/baccarat/player/uiConfig.js\");\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\n\n\n\nconst HEADER_HEIGHT = 60;\nconst {\n  palette,\n  tints\n} = _tykhe_bootstrap__WEBPACK_IMPORTED_MODULE_4__.theme;\n\n\n\n\n\n\nconst {\n  COLORS: {\n    PLAYER_COLOR,\n    BANKER_COLOR\n  }\n} = _uiConfig__WEBPACK_IMPORTED_MODULE_10__.UI_CONFIG;\nconst TRANSITION_TIME = 0.2;\nconst progressBarKeyframe = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.keyframes)( false ? 0 : {\n  name: \"ktrfcq-progressBarKeyframe\",\n  styles: \"from{transform:scaleX(var(--remaining));}to{transform:scaleX(0);};label:progressBarKeyframe;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst progressBarAnimation = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)(\"&::before{animation:\", progressBarKeyframe, \" var(--duration) linear;}\" + ( false ? 0 : \";label:progressBarAnimation;\"),  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\nconst fadeInAnimation = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.keyframes)( false ? 0 : {\n  name: \"fl8gcb-fadeInAnimation\",\n  styles: \"from{opacity:0;}to{opacity:1;};label:fadeInAnimation;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst pulseAnimationKeyframe = color => /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.keyframes)(\"to{fill-opacity:0.85;fill:\", color, \";}\" + ( false ? 0 : \";label:pulseAnimationKeyframe;\"),  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\nconst getAnimation = color => /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)(\"animation:\", pulseAnimationKeyframe(color), \" 0.33s alternate infinite;\" + ( false ? 0 : \";label:getAnimation;\"),  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\nconst PLAYER_HIGHLIGHT_COLOR = '#79C9FF';\nconst BANKER_HIGHLIGHT_COLOR = '#FF4851';\nconst TIE_HIGHLIGHT_COLOR = '#55fb57';\nconst SUPERSIX_HIGHTLIGHT_COLOR = '#B6C2DA';\nconst playerAnimation = getAnimation(PLAYER_HIGHLIGHT_COLOR);\nconst bankerAnimation = getAnimation(BANKER_HIGHLIGHT_COLOR);\nconst tieAnimation = getAnimation(TIE_HIGHLIGHT_COLOR);\nconst suitedTieAnimation = getAnimation(TIE_HIGHLIGHT_COLOR);\nconst superSixAnimation = getAnimation(SUPERSIX_HIGHTLIGHT_COLOR);\nconst playerPulseContainer = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)(\"#bet-player{.highlight{\", playerAnimation, \";}}#bet-dragon,#bet-bowler{.highlight{\", bankerAnimation, \";}}\" + ( false ? 0 : \";label:playerPulseContainer;\"),  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc3R5bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEV1QyIsImZpbGUiOiJDOlxcVXNlcnNcXFR5a2hlXFxlbGVjdHJvbmFwcHNcXHR5a2hlLWVsZWN0cm9uLWFwcHMtYmFjY2FyYXRcXHNyY1xccmVuZGVyZXJcXGJhY2NhcmF0XFxwbGF5ZXJcXHZpZXdzXFxHYW1lQm9hcmRcXHN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMgfSBmcm9tIFwiQGVtb3Rpb24vY3NzXCI7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xyXG5pbXBvcnQgeyBoZXgycmdiYSB9IGZyb20gXCIuLi8uLi8uLi90eWtoZS91dGlsc1wiO1xyXG5pbXBvcnQgdGlueWNvbG9yIGZyb20gJ3Rpbnljb2xvcjInO1xyXG5cclxuXHJcbmltcG9ydCB7IHRoZW1lIH0gZnJvbSBcIi4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcFwiO1xyXG5leHBvcnQgY29uc3QgSEVBREVSX0hFSUdIVCA9IDYwO1xyXG5cclxuY29uc3QgeyBwYWxldHRlLCB0aW50cywgfSA9IHRoZW1lO1xyXG5cclxuXHJcblxyXG5pbXBvcnQgYmdJbWFnZSBmcm9tICcuLi8uLi9hc3NldHMvaW1hZ2VzL2JnLnBuZydcclxuaW1wb3J0IGdhbWVOYW1lSW1nIGZyb20gJy4uLy4uL2Fzc2V0cy9pbWFnZXMvQmFjY2FyYXROYW1lLnBuZydcclxuaW1wb3J0IGdvbGRlbkJvcmRlckltZyBmcm9tICcuLi8uLi9hc3NldHMvaW1hZ2VzL0JpZ1NjcmVlbkJvcmRlci5wbmcnXHJcblxyXG5pbXBvcnQgQmFua2VyIGZyb20gJy4uLy4uL2Fzc2V0cy9pbWFnZXMvQmFua2VyLnBuZyc7XHJcbmltcG9ydCBQbGF5ZXIgZnJvbSAnLi4vLi4vYXNzZXRzL2ltYWdlcy9QbGF5ZXIucG5nJztcclxuXHJcbmltcG9ydCB7IFVJX0NPTkZJRyB9IGZyb20gXCIuLi8uLi91aUNvbmZpZ1wiO1xyXG5cclxuY29uc3Qge1xyXG4gIENPTE9SUzogeyBQTEFZRVJfQ09MT1IsIEJBTktFUl9DT0xPUn0sXHJcbn0gPSBVSV9DT05GSUc7XHJcblxyXG5cclxuY29uc3QgVFJBTlNJVElPTl9USU1FID0gMC4yO1xyXG5cclxuXHJcbmNvbnN0IHByb2dyZXNzQmFyS2V5ZnJhbWUgPSBrZXlmcmFtZXNgXHJcbiAgZnJvbSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlWCh2YXIoLS1yZW1haW5pbmcpKTtcclxuICB9XHJcbiAgdG8ge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZVgoMCk7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHByb2dyZXNzQmFyQW5pbWF0aW9uID0gY3NzYFxyXG4gICY6OmJlZm9yZSB7XHJcbiAgICBhbmltYXRpb246ICR7cHJvZ3Jlc3NCYXJLZXlmcmFtZX0gdmFyKC0tZHVyYXRpb24pIGxpbmVhcjtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgZmFkZUluQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxyXG4gIGZyb20ge1xyXG4gICAgb3BhY2l0eTogMDtcclxuICB9XHJcbiAgdG8ge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcbmA7XHJcblxyXG5jb25zdCBwdWxzZUFuaW1hdGlvbktleWZyYW1lID0gKGNvbG9yKSA9PiBrZXlmcmFtZXNgXHJcbiAgdG8ge1xyXG4gICAgZmlsbC1vcGFjaXR5OiAwLjg1O1xyXG4gICAgZmlsbDogJHtjb2xvcn07XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgZ2V0QW5pbWF0aW9uID0gKGNvbG9yKSA9PiBjc3NgXHJcbiAgYW5pbWF0aW9uOiAke3B1bHNlQW5pbWF0aW9uS2V5ZnJhbWUoY29sb3IpfSAwLjMzcyBhbHRlcm5hdGUgaW5maW5pdGU7XHJcbmA7XHJcblxyXG5jb25zdCBQTEFZRVJfSElHSExJR0hUX0NPTE9SID0gJyM3OUM5RkYnO1xyXG5jb25zdCBCQU5LRVJfSElHSExJR0hUX0NPTE9SID0gJyNGRjQ4NTEnO1xyXG5jb25zdCBUSUVfSElHSExJR0hUX0NPTE9SID0gJyM1NWZiNTcnO1xyXG5jb25zdCBTVVBFUlNJWF9ISUdIVExJR0hUX0NPTE9SID0gJyNCNkMyREEnO1xyXG5jb25zdCBwbGF5ZXJBbmltYXRpb24gPSBnZXRBbmltYXRpb24oUExBWUVSX0hJR0hMSUdIVF9DT0xPUik7XHJcbmNvbnN0IGJhbmtlckFuaW1hdGlvbiA9IGdldEFuaW1hdGlvbihCQU5LRVJfSElHSExJR0hUX0NPTE9SKTtcclxuY29uc3QgdGllQW5pbWF0aW9uID0gZ2V0QW5pbWF0aW9uKFRJRV9ISUdITElHSFRfQ09MT1IpO1xyXG5jb25zdCBzdWl0ZWRUaWVBbmltYXRpb24gPSBnZXRBbmltYXRpb24oVElFX0hJR0hMSUdIVF9DT0xPUik7XHJcbmNvbnN0IHN1cGVyU2l4QW5pbWF0aW9uID0gZ2V0QW5pbWF0aW9uKFNVUEVSU0lYX0hJR0hUTElHSFRfQ09MT1IpO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBwbGF5ZXJQdWxzZUNvbnRhaW5lciA9IGNzc2BcclxuICAjYmV0LXBsYXllciB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtwbGF5ZXJBbmltYXRpb259O1xyXG4gICAgfTtcclxuICB9XHJcbiAgI2JldC1kcmFnb24sICNiZXQtYm93bGVyIHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke2JhbmtlckFuaW1hdGlvbn07XHJcbiAgICB9O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBwbGF5ZXJQYWlyUHVsc2VDb250YWluZXIgPSBjc3NgXHJcbiAgI2JldC1wbGF5ZXItcGFpciwgI2JldC1uYXR1cmFsLXBsYXllciB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtwbGF5ZXJBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBzdXBlclNpeFB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtc3VwZXItc2l4IHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke3N1cGVyU2l4QW5pbWF0aW9ufTtcclxuICAgIH1cclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgYmFua2VyUHVsc2VDb250YWluZXIgPSBjc3NgXHJcbiAgI2JldC1iYW5rZXIge1xyXG4gICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICR7YmFua2VyQW5pbWF0aW9ufTtcclxuICAgIH1cclxuICB9O1xyXG4gICNiZXQtdGlnZXIsICNiZXQtYmF0c21hbiB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtwbGF5ZXJBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuZXhwb3J0IGNvbnN0IGJhbmtlclBhaXJQdWxzZUNvbnRhaW5lciA9IGNzc2BcclxuICAjYmV0LWJhbmtlci1wYWlyLCAjYmV0LW5hdHVyYWwtYmFua2VyIHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke2JhbmtlckFuaW1hdGlvbn07XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHRpZVB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtdGllIHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke3RpZUFuaW1hdGlvbn07XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHN1aXRlZFRpZVB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtc3VpdGVkLXRpZSB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtzdWl0ZWRUaWVBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbmFjdGl2ZUdhbWVCb2FyZCA9IGNzc2BcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNDMlKTtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbmFjdGl2ZUdyaWQgPSBjc3NgXHJcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgICAqIHtcclxuICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgfSAgIFxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHRpbHRlZEdyaWQgPSBjc3NgXHJcbiAgQG1lZGlhIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuNykgcm90YXRlWCg2MGRlZyk7XHJcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiBib3R0b207XHJcbiAgICBtYXgtd2lkdGg6IDgwMHB4O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBtb2JpbGVHYW1lQm9hcmQgPSBjc3NgXHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuXHJcbiAgIFtpZF49J2JldC0nXSB7XHJcbiAgICAmOmhvdmVyLFxyXG4gICAgJjphY3RpdmUge1xyXG4gICAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgICBmaWxsLW9wYWNpdHk6IDAuNjU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBtZWRpYSAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzpoaWRkZW47XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzIGxpbmVhcjtcclxuXHJcbiAgI2JldC1pY29uIHtcclxuICAgIHBvaW50ZXItZXZlbnRzOiBhbGw7XHJcbiAgfVxyXG5cclxuICBbaWRePSdiZXQtJ10ge1xyXG4gICAgJi5kaXNhYmxlZCB7XHJcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgfVxyXG4gICAgJjpob3ZlcixcclxuICAgICY6YWN0aXZlIHtcclxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgICBmaWxsLW9wYWNpdHk6IDAuODU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG5gO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgSGVhZGVyID0gc3R5bGVkLmhlYWRlcmBcclxuICBoZWlnaHQ6ICR7SEVBREVSX0hFSUdIVH1weDtcclxuICB3aWR0aDogMTAwJTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgYmFja2dyb3VuZDogJHtoZXgycmdiYShwYWxldHRlLnByaW1hcnksIHRpbnRzLnByaW1hcnkpfTtcclxuICBjb2xvcjogJHtwYWxldHRlLmZvcmVncm91bmR9O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBmb250LXNpemU6IDM0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMjdzIGxpbmVhciwgdHJhbnNmb3JtIDAuMjdzIGxpbmVhcjtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBoZWFkZXJDbGFzc05hbWUgPSBjc3NgXHJcbiAgLS1yZW1haW5pbmc6IDE7XHJcbiAgLS1kdXJhdGlvbjogMTBzO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBjb2xvcjogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XHJcbiAgZmlsbDogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBmb250LXNpemU6IDM0cHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgJHtoZXgycmdiYShwYWxldHRlLnByaW1hcnksIHRpbnRzLnByaW1hcnkpfTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgJjpiZWZvcmUge1xyXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdDtcclxuICAgIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3IpO1xyXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAxcyBsaW5lYXIsIHRyYW5zZm9ybSB2YXIoLS1kdXJhdGlvbikgbGluZWFyO1xyXG4gICAgei1pbmRleDogLTE7XHJcbiAgfVxyXG5gO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgQmFua2VySW1nID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgaGVpZ2h0OiAxMiU7XHJcbiAgd2lkdGg6IDE4JTtcclxuICB0b3A6IDUlO1xyXG4gIGxlZnQ6IDY4JTtcclxuXHJcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7QmFua2VyfSk7XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xyXG5gXHJcbmV4cG9ydCBjb25zdCBQbGF5ZXJJbWcgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBoZWlnaHQ6IDEyJTtcclxuICB3aWR0aDogMTQlO1xyXG4gIHRvcDogNSU7XHJcbiAgbGVmdDogMTYlO1xyXG5cclxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHtQbGF5ZXJ9KTtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3A7XHJcbmBcclxuXHJcblxyXG5leHBvcnQgY29uc3QgQ29udGFpbmVyR29sZGVuQm9yZGVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgbWFyZ2luLWxlZnQ6IDBweDtcclxuICBtYXJnaW4tdG9wOiAwcHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHNjYWxlOiAxO1xyXG5cclxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHtnb2xkZW5Cb3JkZXJJbWd9KTtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgR2FtZUhlYWRlciA9IHN0eWxlZC5kaXZgXHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBtYXJnaW4tbGVmdDogNjEwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAzcHg7XHJcbiAgICB3aWR0aDogNzA5cHg7XHJcbiAgICBoZWlnaHQ6IDIwMnB4O1xyXG4gICAgc2NhbGU6IDE7XHJcblxyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7Z2FtZU5hbWVJbWd9KTtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgTWFpbkNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA3NyU7XHJcbiAgaGVpZ2h0OiAzODBweDtcclxuXHJcbiAgdG9wOiAzNSU7XHJcbiAgbGVmdDogMTIlO1xyXG5cclxuXHJcbiAgYFxyXG5leHBvcnQgY29uc3QgQmV0R3JpZENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIHBlcnNwZWN0aXZlOiAxMDAwcHg7XHJcblxyXG4gIGBcclxuXHJcblxyXG5leHBvcnQgY29uc3QgQmlnUm9hZEJnQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDI4cHgpO1xyXG4gIGhlaWdodDogMjkuMiU7XHJcbiAgdG9wOiAxOS40JTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMzYsIDFmcik7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNiwgMWZyKTtcclxuICBnYXA6IDFweCAxcHg7XHJcblxyXG4gIG1hcmdpbi1sZWZ0OiAxNHB4O1xyXG4gIG1hcmdpbi1yaWdodDogMTRweDtcclxuXHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBCaWdSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDI4cHgpO1xyXG4gIGhlaWdodDogMzAlO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgZGlzcGxheTogZmxleDtcclxuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBsaW5lYXI7XHJcbiAgY3Vyc29yOiB6b29tLWluO1xyXG5cclxuICA+IHN2ZyB7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9XHJcblxyXG4gIHRvcDogMTklO1xyXG4gIGZsZXg6IG5vbmU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG5cclxuXHJcbiAgbWFyZ2luLWxlZnQ6IDE0cHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5cclxuYDtcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IEJpZ0V5ZVJvYWRCZ0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiBjYWxjKDMzLjMzJSAtIDE0cHgpO1xyXG4gIGhlaWdodDogMTQuMiU7XHJcbiAgdG9wOiA1MC40JTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMjQsIDFmcik7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNiwgMWZyKTtcclxuICBnYXA6IDFweCAxcHg7XHJcblxyXG4gIG1hcmdpbi1sZWZ0OiAxNHB4O1xyXG4gIFxyXG5gO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBCaWdFeWVSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMzMuMzMlIC0gMTRweCk7XHJcbiAgaGVpZ2h0OiAxNSU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGxpbmVhcjtcclxuICBjdXJzb3I6IHpvb20taW47XHJcblxyXG4gID4gc3ZnIHtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgdG9wOiA1MCU7XHJcbiAgZmxleDogbm9uZTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDE0cHg7XHJcblxyXG5gO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgU21hbGxSb2FkQmdDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE0LjIlO1xyXG4gIHRvcDogNTAuNCU7XHJcbiAgbGVmdDogMzMuMzMlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuXHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyNCwgMWZyKTtcclxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg2LCAxZnIpO1xyXG4gIGdhcDogMXB4IDFweDtcclxuXHJcbiAgbWFyZ2luLWxlZnQ6IDdweDtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBDb2Nrcm9hY2hSb2FkQmdDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE0LjIlO1xyXG4gIHRvcDogNTAuNCU7XHJcbiAgbGVmdDogNjYuNjYlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuXHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyNCwgMWZyKTtcclxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg2LCAxZnIpO1xyXG4gIGdhcDogMXB4IDFweDtcclxuXHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5gO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBCZWFkUm9hZEJnQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDUwJTtcclxuICBoZWlnaHQ6IDMzLjIyJTtcclxuXHJcbiAgdG9wOiA2NiU7XHJcbiAgbGVmdDogMDtcclxuICBtYXJnaW4tbGVmdDogMTRweDtcclxuXHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxNiwgMWZyKTtcclxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg2LCAxZnIpO1xyXG4gIGdhcDogMXB4IDFweDtcclxuXHJcblxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IEJlYWRSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6ICA1MCU7XHJcbiAgaGVpZ2h0OiAzNS4yMiU7XHJcblxyXG4gIHRvcDogNjUlO1xyXG4gIGxlZnQ6IDA7XHJcbiAgbWFyZ2luLWxlZnQ6IDE0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xyXG4gIGN1cnNvcjogem9vbS1pbjtcclxuXHJcbiAgPiBzdmcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuYDtcclxuXHJcblxyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBTbWFsbFJvYWRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE1JTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xyXG4gIGN1cnNvcjogem9vbS1pbjtcclxuXHJcbiAgPiBzdmcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuICB0b3A6IDUwJTtcclxuICBsZWZ0OiAzMy4zMyU7XHJcbiAgZmxleDogbm9uZTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDdweDtcclxuXHJcbmA7XHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IENvY2tyb2FjaFJvYWRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE1JTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xyXG4gIGN1cnNvcjogem9vbS1pbjtcclxuXHJcbiAgPiBzdmcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuICB0b3A6IDUwJTtcclxuICBsZWZ0OiA2Ni42NiU7XHJcbiAgZmxleDogbm9uZTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5cclxuXHJcbmA7XHJcblxyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBSb2FkUHJldmlld0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA1JTtcclxuICBoZWlnaHQ6IDIyJTtcclxuXHJcbiAgdG9wOiA2MCU7XHJcbiAgbGVmdDogMzMuMzMlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTdGF0c0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA3JTtcclxuICBoZWlnaHQ6IDIyJTtcclxuXHJcbiAgdG9wOiA2MCU7XHJcbiAgbGVmdDogNDMuMzMlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTdGF0aXN0aWNzQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDQ4LjM1JTtcclxuICBoZWlnaHQ6IDE4LjIlO1xyXG5cclxuICB0b3A6IDgxJTtcclxuICByaWdodDogMCU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuXHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5gO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBQbGF5ZXJIYW5kc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxNSU7XHJcbiAgaGVpZ2h0OiAxMyU7XHJcblxyXG4gIHRvcDogMjQlO1xyXG4gIGxlZnQ6IDE2JTtcclxuICBtYXJnaW4tcmlnaHQ6IDE0cHg7XHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBCYW5rZXJIYW5kc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxNSU7XHJcbiAgaGVpZ2h0OiAxMyU7XHJcblxyXG4gIHRvcDogMjQlO1xyXG4gIGxlZnQ6IDcwJTtcclxuXHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgUGxheWVySGFuZHNIYW5kc0ZsZXggPSBzdHlsZWQuZGl2YFxyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4yN3MgbGluZWFyIDBzO1xyXG4gICAgcGVyc3BlY3RpdmU6IDEwMDBweDtcclxuICAgIHBhZGRpbmc6IDJweCAwcHg7XHJcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBCYW5rZXJIYW5kc0hhbmRzRmxleCA9IHN0eWxlZC5kaXZgXHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI3cyBsaW5lYXIgMHM7XHJcbiAgICBwZXJzcGVjdGl2ZTogMTAwMHB4O1xyXG4gICAgcGFkZGluZzogMnB4IDBweDtcclxuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IFJlc3VsdE1lc3NhZ2VDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHRvcDogNDAlO1xyXG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8gLHNhbnMtc2VyaWY7XHJcbiAgZm9udC1zdHlsZTpub3JtYWw7XHJcbiAgZm9udC1zdHJldGNoOm5vcm1hbDtcclxuICBsaW5lLWhlaWdodDpub3JtYWw7XHJcbiAgbGV0dGVyLXNwYWNpbmc6bm9ybWFsO1xyXG4gIGZvbnQtc2l6ZToxNnB4ICFpbXBvcnRhbnQ7XHJcbiAgZm9udC13ZWlnaHQ6OTAwO1xyXG4gIHRleHQtc2hhZG93OjAgMCAxcHggcmdiYSgwLDAsMCwwLjYpO1xyXG5cclxuICBjb2xvcjogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XHJcbiAgZGlzcGxheTpmbGV4O1xyXG4gIGZsZXgtZmxvdzpjb2x1bW4gbm93cmFwO1xyXG4gIHdoaXRlLXNwYWNlOm5vd3JhcDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOmNlbnRlcjtcclxuICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XHJcbiAgd2lkdGg6IGF1dG87XHJcbiAgcGFkZGluZy10b3A6MjBweDtcclxuICBwYWRkaW5nLWJvdHRvbToyMHB4O1xyXG4gIGFuaW1hdGlvbjogJHtmYWRlSW5BbmltYXRpb259ICR7VFJBTlNJVElPTl9USU1FfXMgbGluZWFyO1xyXG5cclxuICBtYXJnaW4tbGVmdDogMzAlO1xyXG4gIG1hcmdpbi1yaWdodDogMzAlO1xyXG5cclxuXHJcblxyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgU3RhdHVzQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDQwMHB4O1xyXG4gIHRvcDogMCU7XHJcbiAgbWFyZ2luOiAwIDQwJTtcclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IFN0YXR1c1RpdGxlID0gc3R5bGVkLmRpdmBcclxuICB3aWR0aDogYXV0bztcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgZm9udC1zaXplOiA0MHB4O1xyXG5gO1xyXG5cclxuXHJcblxyXG5jb25zdCBtYWluQmV0c0xhYmVsID0gY3NzYFxyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgbWFpbkJldHNMYWJlbENsYXNzTmFtZSA9IGNzc2BcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuYDtcclxuXHJcblxyXG5jb25zdCBwbGF5ZXJUcmFuc3BhcmVudCA9IHRpbnljb2xvcihQTEFZRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDApXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IHBsYXllck1lZCA9IHRpbnljb2xvcihQTEFZRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDAuNjUpXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IHBsYXllckZ1bGwgPSB0aW55Y29sb3IoUExBWUVSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwLjkpXHJcbiAgLnRvU3RyaW5nKCk7XHJcblxyXG5jb25zdCBiYW5rZXJUcmFuc3BhcmVudCA9IHRpbnljb2xvcihCQU5LRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDApXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IGJhbmtlck1lZCA9IHRpbnljb2xvcihCQU5LRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDAuNjUpXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IGJhbmtlckZ1bGwgPSB0aW55Y29sb3IoQkFOS0VSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwLjkpXHJcbiAgLnRvU3RyaW5nKCk7XHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IHBsYXllckJhY2tncm91bmQgPSBjc3NgXHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAzMyU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudChcclxuICAgICAgICAgIHRvIGxlZnQsXHJcbiAgICAgICAgICAke3BsYXllclRyYW5zcGFyZW50fSxcclxuICAgICAgICAgICR7cGxheWVyTWVkfSAxNiUsXHJcbiAgICAgICAgICAke3BsYXllckZ1bGx9IDUwJSxcclxuICAgICAgICAgICR7cGxheWVyTWVkfSA4NCUsXHJcbiAgICAgICAgICAke3BsYXllclRyYW5zcGFyZW50fVxyXG4gICk7XHJcblxyXG4gIHNwYW4ge1xyXG4gICAgbWFyZ2luLXRvcDogMnB4O1xyXG4gICAgZm9udC1mYW1pbHk6IFJvYm90bztcclxuICAgIGZvbnQtc2l6ZTogNDBweDtcclxuICAgIGNvbG9yOiAjZmZiO1xyXG4gICAgcGFkZGluZy1sZWZ0OiA0cHg7XHJcbiAgfVxyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBiYW5rZXJCYWNrZ3JvdW5kID0gY3NzYFxyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMzMlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoXHJcbiAgICAgICAgICB0byBsZWZ0LFxyXG4gICAgICAgICAgJHtiYW5rZXJUcmFuc3BhcmVudH0sXHJcbiAgICAgICAgICAke2Jhbmtlck1lZH0gMTYlLFxyXG4gICAgICAgICAgJHtiYW5rZXJGdWxsfSA1MCUsXHJcbiAgICAgICAgICAke2Jhbmtlck1lZH0gODQlLFxyXG4gICAgICAgICAgJHtiYW5rZXJUcmFuc3BhcmVudH1cclxuICApO1xyXG5cclxuICBzcGFuIHtcclxuICAgIG1hcmdpbi10b3A6IDJweDtcclxuICAgIGZvbnQtZmFtaWx5OiBSb2JvdG87XHJcbiAgICBmb250LXNpemU6IDQwcHg7XHJcbiAgICBjb2xvcjogI2ZmYjtcclxuICAgIHBhZGRpbmctbGVmdDogNHB4O1xyXG4gIH1cclxuXHJcbmA7Il19 */\");\nconst playerPairPulseContainer = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)(\"#bet-player-pair,#bet-natural-player{.highlight{\", playerAnimation, \";}}\" + ( false ? 0 : \";label:playerPairPulseContainer;\"),  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\nconst superSixPulseContainer = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)(\"#bet-super-six{.highlight{\", superSixAnimation, \";}}\" + ( false ? 0 : \";label:superSixPulseContainer;\"),  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc3R5bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUd5QyIsImZpbGUiOiJDOlxcVXNlcnNcXFR5a2hlXFxlbGVjdHJvbmFwcHNcXHR5a2hlLWVsZWN0cm9uLWFwcHMtYmFjY2FyYXRcXHNyY1xccmVuZGVyZXJcXGJhY2NhcmF0XFxwbGF5ZXJcXHZpZXdzXFxHYW1lQm9hcmRcXHN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMgfSBmcm9tIFwiQGVtb3Rpb24vY3NzXCI7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xyXG5pbXBvcnQgeyBoZXgycmdiYSB9IGZyb20gXCIuLi8uLi8uLi90eWtoZS91dGlsc1wiO1xyXG5pbXBvcnQgdGlueWNvbG9yIGZyb20gJ3Rpbnljb2xvcjInO1xyXG5cclxuXHJcbmltcG9ydCB7IHRoZW1lIH0gZnJvbSBcIi4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcFwiO1xyXG5leHBvcnQgY29uc3QgSEVBREVSX0hFSUdIVCA9IDYwO1xyXG5cclxuY29uc3QgeyBwYWxldHRlLCB0aW50cywgfSA9IHRoZW1lO1xyXG5cclxuXHJcblxyXG5pbXBvcnQgYmdJbWFnZSBmcm9tICcuLi8uLi9hc3NldHMvaW1hZ2VzL2JnLnBuZydcclxuaW1wb3J0IGdhbWVOYW1lSW1nIGZyb20gJy4uLy4uL2Fzc2V0cy9pbWFnZXMvQmFjY2FyYXROYW1lLnBuZydcclxuaW1wb3J0IGdvbGRlbkJvcmRlckltZyBmcm9tICcuLi8uLi9hc3NldHMvaW1hZ2VzL0JpZ1NjcmVlbkJvcmRlci5wbmcnXHJcblxyXG5pbXBvcnQgQmFua2VyIGZyb20gJy4uLy4uL2Fzc2V0cy9pbWFnZXMvQmFua2VyLnBuZyc7XHJcbmltcG9ydCBQbGF5ZXIgZnJvbSAnLi4vLi4vYXNzZXRzL2ltYWdlcy9QbGF5ZXIucG5nJztcclxuXHJcbmltcG9ydCB7IFVJX0NPTkZJRyB9IGZyb20gXCIuLi8uLi91aUNvbmZpZ1wiO1xyXG5cclxuY29uc3Qge1xyXG4gIENPTE9SUzogeyBQTEFZRVJfQ09MT1IsIEJBTktFUl9DT0xPUn0sXHJcbn0gPSBVSV9DT05GSUc7XHJcblxyXG5cclxuY29uc3QgVFJBTlNJVElPTl9USU1FID0gMC4yO1xyXG5cclxuXHJcbmNvbnN0IHByb2dyZXNzQmFyS2V5ZnJhbWUgPSBrZXlmcmFtZXNgXHJcbiAgZnJvbSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlWCh2YXIoLS1yZW1haW5pbmcpKTtcclxuICB9XHJcbiAgdG8ge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZVgoMCk7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHByb2dyZXNzQmFyQW5pbWF0aW9uID0gY3NzYFxyXG4gICY6OmJlZm9yZSB7XHJcbiAgICBhbmltYXRpb246ICR7cHJvZ3Jlc3NCYXJLZXlmcmFtZX0gdmFyKC0tZHVyYXRpb24pIGxpbmVhcjtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgZmFkZUluQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxyXG4gIGZyb20ge1xyXG4gICAgb3BhY2l0eTogMDtcclxuICB9XHJcbiAgdG8ge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcbmA7XHJcblxyXG5jb25zdCBwdWxzZUFuaW1hdGlvbktleWZyYW1lID0gKGNvbG9yKSA9PiBrZXlmcmFtZXNgXHJcbiAgdG8ge1xyXG4gICAgZmlsbC1vcGFjaXR5OiAwLjg1O1xyXG4gICAgZmlsbDogJHtjb2xvcn07XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgZ2V0QW5pbWF0aW9uID0gKGNvbG9yKSA9PiBjc3NgXHJcbiAgYW5pbWF0aW9uOiAke3B1bHNlQW5pbWF0aW9uS2V5ZnJhbWUoY29sb3IpfSAwLjMzcyBhbHRlcm5hdGUgaW5maW5pdGU7XHJcbmA7XHJcblxyXG5jb25zdCBQTEFZRVJfSElHSExJR0hUX0NPTE9SID0gJyM3OUM5RkYnO1xyXG5jb25zdCBCQU5LRVJfSElHSExJR0hUX0NPTE9SID0gJyNGRjQ4NTEnO1xyXG5jb25zdCBUSUVfSElHSExJR0hUX0NPTE9SID0gJyM1NWZiNTcnO1xyXG5jb25zdCBTVVBFUlNJWF9ISUdIVExJR0hUX0NPTE9SID0gJyNCNkMyREEnO1xyXG5jb25zdCBwbGF5ZXJBbmltYXRpb24gPSBnZXRBbmltYXRpb24oUExBWUVSX0hJR0hMSUdIVF9DT0xPUik7XHJcbmNvbnN0IGJhbmtlckFuaW1hdGlvbiA9IGdldEFuaW1hdGlvbihCQU5LRVJfSElHSExJR0hUX0NPTE9SKTtcclxuY29uc3QgdGllQW5pbWF0aW9uID0gZ2V0QW5pbWF0aW9uKFRJRV9ISUdITElHSFRfQ09MT1IpO1xyXG5jb25zdCBzdWl0ZWRUaWVBbmltYXRpb24gPSBnZXRBbmltYXRpb24oVElFX0hJR0hMSUdIVF9DT0xPUik7XHJcbmNvbnN0IHN1cGVyU2l4QW5pbWF0aW9uID0gZ2V0QW5pbWF0aW9uKFNVUEVSU0lYX0hJR0hUTElHSFRfQ09MT1IpO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBwbGF5ZXJQdWxzZUNvbnRhaW5lciA9IGNzc2BcclxuICAjYmV0LXBsYXllciB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtwbGF5ZXJBbmltYXRpb259O1xyXG4gICAgfTtcclxuICB9XHJcbiAgI2JldC1kcmFnb24sICNiZXQtYm93bGVyIHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke2JhbmtlckFuaW1hdGlvbn07XHJcbiAgICB9O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBwbGF5ZXJQYWlyUHVsc2VDb250YWluZXIgPSBjc3NgXHJcbiAgI2JldC1wbGF5ZXItcGFpciwgI2JldC1uYXR1cmFsLXBsYXllciB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtwbGF5ZXJBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBzdXBlclNpeFB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtc3VwZXItc2l4IHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke3N1cGVyU2l4QW5pbWF0aW9ufTtcclxuICAgIH1cclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgYmFua2VyUHVsc2VDb250YWluZXIgPSBjc3NgXHJcbiAgI2JldC1iYW5rZXIge1xyXG4gICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICR7YmFua2VyQW5pbWF0aW9ufTtcclxuICAgIH1cclxuICB9O1xyXG4gICNiZXQtdGlnZXIsICNiZXQtYmF0c21hbiB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtwbGF5ZXJBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuZXhwb3J0IGNvbnN0IGJhbmtlclBhaXJQdWxzZUNvbnRhaW5lciA9IGNzc2BcclxuICAjYmV0LWJhbmtlci1wYWlyLCAjYmV0LW5hdHVyYWwtYmFua2VyIHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke2JhbmtlckFuaW1hdGlvbn07XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHRpZVB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtdGllIHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke3RpZUFuaW1hdGlvbn07XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHN1aXRlZFRpZVB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtc3VpdGVkLXRpZSB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtzdWl0ZWRUaWVBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbmFjdGl2ZUdhbWVCb2FyZCA9IGNzc2BcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNDMlKTtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbmFjdGl2ZUdyaWQgPSBjc3NgXHJcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgICAqIHtcclxuICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgfSAgIFxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHRpbHRlZEdyaWQgPSBjc3NgXHJcbiAgQG1lZGlhIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuNykgcm90YXRlWCg2MGRlZyk7XHJcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiBib3R0b207XHJcbiAgICBtYXgtd2lkdGg6IDgwMHB4O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBtb2JpbGVHYW1lQm9hcmQgPSBjc3NgXHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuXHJcbiAgIFtpZF49J2JldC0nXSB7XHJcbiAgICAmOmhvdmVyLFxyXG4gICAgJjphY3RpdmUge1xyXG4gICAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgICBmaWxsLW9wYWNpdHk6IDAuNjU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBtZWRpYSAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzpoaWRkZW47XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzIGxpbmVhcjtcclxuXHJcbiAgI2JldC1pY29uIHtcclxuICAgIHBvaW50ZXItZXZlbnRzOiBhbGw7XHJcbiAgfVxyXG5cclxuICBbaWRePSdiZXQtJ10ge1xyXG4gICAgJi5kaXNhYmxlZCB7XHJcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgfVxyXG4gICAgJjpob3ZlcixcclxuICAgICY6YWN0aXZlIHtcclxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgICBmaWxsLW9wYWNpdHk6IDAuODU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG5gO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgSGVhZGVyID0gc3R5bGVkLmhlYWRlcmBcclxuICBoZWlnaHQ6ICR7SEVBREVSX0hFSUdIVH1weDtcclxuICB3aWR0aDogMTAwJTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgYmFja2dyb3VuZDogJHtoZXgycmdiYShwYWxldHRlLnByaW1hcnksIHRpbnRzLnByaW1hcnkpfTtcclxuICBjb2xvcjogJHtwYWxldHRlLmZvcmVncm91bmR9O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBmb250LXNpemU6IDM0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMjdzIGxpbmVhciwgdHJhbnNmb3JtIDAuMjdzIGxpbmVhcjtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBoZWFkZXJDbGFzc05hbWUgPSBjc3NgXHJcbiAgLS1yZW1haW5pbmc6IDE7XHJcbiAgLS1kdXJhdGlvbjogMTBzO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBjb2xvcjogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XHJcbiAgZmlsbDogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBmb250LXNpemU6IDM0cHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgJHtoZXgycmdiYShwYWxldHRlLnByaW1hcnksIHRpbnRzLnByaW1hcnkpfTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgJjpiZWZvcmUge1xyXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdDtcclxuICAgIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3IpO1xyXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAxcyBsaW5lYXIsIHRyYW5zZm9ybSB2YXIoLS1kdXJhdGlvbikgbGluZWFyO1xyXG4gICAgei1pbmRleDogLTE7XHJcbiAgfVxyXG5gO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgQmFua2VySW1nID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgaGVpZ2h0OiAxMiU7XHJcbiAgd2lkdGg6IDE4JTtcclxuICB0b3A6IDUlO1xyXG4gIGxlZnQ6IDY4JTtcclxuXHJcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7QmFua2VyfSk7XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xyXG5gXHJcbmV4cG9ydCBjb25zdCBQbGF5ZXJJbWcgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBoZWlnaHQ6IDEyJTtcclxuICB3aWR0aDogMTQlO1xyXG4gIHRvcDogNSU7XHJcbiAgbGVmdDogMTYlO1xyXG5cclxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHtQbGF5ZXJ9KTtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3A7XHJcbmBcclxuXHJcblxyXG5leHBvcnQgY29uc3QgQ29udGFpbmVyR29sZGVuQm9yZGVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgbWFyZ2luLWxlZnQ6IDBweDtcclxuICBtYXJnaW4tdG9wOiAwcHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHNjYWxlOiAxO1xyXG5cclxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHtnb2xkZW5Cb3JkZXJJbWd9KTtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgR2FtZUhlYWRlciA9IHN0eWxlZC5kaXZgXHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBtYXJnaW4tbGVmdDogNjEwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAzcHg7XHJcbiAgICB3aWR0aDogNzA5cHg7XHJcbiAgICBoZWlnaHQ6IDIwMnB4O1xyXG4gICAgc2NhbGU6IDE7XHJcblxyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7Z2FtZU5hbWVJbWd9KTtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgTWFpbkNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA3NyU7XHJcbiAgaGVpZ2h0OiAzODBweDtcclxuXHJcbiAgdG9wOiAzNSU7XHJcbiAgbGVmdDogMTIlO1xyXG5cclxuXHJcbiAgYFxyXG5leHBvcnQgY29uc3QgQmV0R3JpZENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIHBlcnNwZWN0aXZlOiAxMDAwcHg7XHJcblxyXG4gIGBcclxuXHJcblxyXG5leHBvcnQgY29uc3QgQmlnUm9hZEJnQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDI4cHgpO1xyXG4gIGhlaWdodDogMjkuMiU7XHJcbiAgdG9wOiAxOS40JTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMzYsIDFmcik7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNiwgMWZyKTtcclxuICBnYXA6IDFweCAxcHg7XHJcblxyXG4gIG1hcmdpbi1sZWZ0OiAxNHB4O1xyXG4gIG1hcmdpbi1yaWdodDogMTRweDtcclxuXHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBCaWdSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDI4cHgpO1xyXG4gIGhlaWdodDogMzAlO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgZGlzcGxheTogZmxleDtcclxuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBsaW5lYXI7XHJcbiAgY3Vyc29yOiB6b29tLWluO1xyXG5cclxuICA+IHN2ZyB7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9XHJcblxyXG4gIHRvcDogMTklO1xyXG4gIGZsZXg6IG5vbmU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG5cclxuXHJcbiAgbWFyZ2luLWxlZnQ6IDE0cHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5cclxuYDtcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IEJpZ0V5ZVJvYWRCZ0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiBjYWxjKDMzLjMzJSAtIDE0cHgpO1xyXG4gIGhlaWdodDogMTQuMiU7XHJcbiAgdG9wOiA1MC40JTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMjQsIDFmcik7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNiwgMWZyKTtcclxuICBnYXA6IDFweCAxcHg7XHJcblxyXG4gIG1hcmdpbi1sZWZ0OiAxNHB4O1xyXG4gIFxyXG5gO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBCaWdFeWVSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMzMuMzMlIC0gMTRweCk7XHJcbiAgaGVpZ2h0OiAxNSU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGxpbmVhcjtcclxuICBjdXJzb3I6IHpvb20taW47XHJcblxyXG4gID4gc3ZnIHtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgdG9wOiA1MCU7XHJcbiAgZmxleDogbm9uZTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDE0cHg7XHJcblxyXG5gO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgU21hbGxSb2FkQmdDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE0LjIlO1xyXG4gIHRvcDogNTAuNCU7XHJcbiAgbGVmdDogMzMuMzMlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuXHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyNCwgMWZyKTtcclxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg2LCAxZnIpO1xyXG4gIGdhcDogMXB4IDFweDtcclxuXHJcbiAgbWFyZ2luLWxlZnQ6IDdweDtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBDb2Nrcm9hY2hSb2FkQmdDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE0LjIlO1xyXG4gIHRvcDogNTAuNCU7XHJcbiAgbGVmdDogNjYuNjYlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuXHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyNCwgMWZyKTtcclxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg2LCAxZnIpO1xyXG4gIGdhcDogMXB4IDFweDtcclxuXHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5gO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBCZWFkUm9hZEJnQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDUwJTtcclxuICBoZWlnaHQ6IDMzLjIyJTtcclxuXHJcbiAgdG9wOiA2NiU7XHJcbiAgbGVmdDogMDtcclxuICBtYXJnaW4tbGVmdDogMTRweDtcclxuXHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxNiwgMWZyKTtcclxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg2LCAxZnIpO1xyXG4gIGdhcDogMXB4IDFweDtcclxuXHJcblxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IEJlYWRSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6ICA1MCU7XHJcbiAgaGVpZ2h0OiAzNS4yMiU7XHJcblxyXG4gIHRvcDogNjUlO1xyXG4gIGxlZnQ6IDA7XHJcbiAgbWFyZ2luLWxlZnQ6IDE0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xyXG4gIGN1cnNvcjogem9vbS1pbjtcclxuXHJcbiAgPiBzdmcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuYDtcclxuXHJcblxyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBTbWFsbFJvYWRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE1JTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xyXG4gIGN1cnNvcjogem9vbS1pbjtcclxuXHJcbiAgPiBzdmcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuICB0b3A6IDUwJTtcclxuICBsZWZ0OiAzMy4zMyU7XHJcbiAgZmxleDogbm9uZTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDdweDtcclxuXHJcbmA7XHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IENvY2tyb2FjaFJvYWRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE1JTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xyXG4gIGN1cnNvcjogem9vbS1pbjtcclxuXHJcbiAgPiBzdmcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuICB0b3A6IDUwJTtcclxuICBsZWZ0OiA2Ni42NiU7XHJcbiAgZmxleDogbm9uZTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5cclxuXHJcbmA7XHJcblxyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBSb2FkUHJldmlld0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA1JTtcclxuICBoZWlnaHQ6IDIyJTtcclxuXHJcbiAgdG9wOiA2MCU7XHJcbiAgbGVmdDogMzMuMzMlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTdGF0c0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA3JTtcclxuICBoZWlnaHQ6IDIyJTtcclxuXHJcbiAgdG9wOiA2MCU7XHJcbiAgbGVmdDogNDMuMzMlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTdGF0aXN0aWNzQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDQ4LjM1JTtcclxuICBoZWlnaHQ6IDE4LjIlO1xyXG5cclxuICB0b3A6IDgxJTtcclxuICByaWdodDogMCU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuXHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5gO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBQbGF5ZXJIYW5kc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxNSU7XHJcbiAgaGVpZ2h0OiAxMyU7XHJcblxyXG4gIHRvcDogMjQlO1xyXG4gIGxlZnQ6IDE2JTtcclxuICBtYXJnaW4tcmlnaHQ6IDE0cHg7XHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBCYW5rZXJIYW5kc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxNSU7XHJcbiAgaGVpZ2h0OiAxMyU7XHJcblxyXG4gIHRvcDogMjQlO1xyXG4gIGxlZnQ6IDcwJTtcclxuXHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgUGxheWVySGFuZHNIYW5kc0ZsZXggPSBzdHlsZWQuZGl2YFxyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4yN3MgbGluZWFyIDBzO1xyXG4gICAgcGVyc3BlY3RpdmU6IDEwMDBweDtcclxuICAgIHBhZGRpbmc6IDJweCAwcHg7XHJcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBCYW5rZXJIYW5kc0hhbmRzRmxleCA9IHN0eWxlZC5kaXZgXHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI3cyBsaW5lYXIgMHM7XHJcbiAgICBwZXJzcGVjdGl2ZTogMTAwMHB4O1xyXG4gICAgcGFkZGluZzogMnB4IDBweDtcclxuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IFJlc3VsdE1lc3NhZ2VDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHRvcDogNDAlO1xyXG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8gLHNhbnMtc2VyaWY7XHJcbiAgZm9udC1zdHlsZTpub3JtYWw7XHJcbiAgZm9udC1zdHJldGNoOm5vcm1hbDtcclxuICBsaW5lLWhlaWdodDpub3JtYWw7XHJcbiAgbGV0dGVyLXNwYWNpbmc6bm9ybWFsO1xyXG4gIGZvbnQtc2l6ZToxNnB4ICFpbXBvcnRhbnQ7XHJcbiAgZm9udC13ZWlnaHQ6OTAwO1xyXG4gIHRleHQtc2hhZG93OjAgMCAxcHggcmdiYSgwLDAsMCwwLjYpO1xyXG5cclxuICBjb2xvcjogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XHJcbiAgZGlzcGxheTpmbGV4O1xyXG4gIGZsZXgtZmxvdzpjb2x1bW4gbm93cmFwO1xyXG4gIHdoaXRlLXNwYWNlOm5vd3JhcDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOmNlbnRlcjtcclxuICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XHJcbiAgd2lkdGg6IGF1dG87XHJcbiAgcGFkZGluZy10b3A6MjBweDtcclxuICBwYWRkaW5nLWJvdHRvbToyMHB4O1xyXG4gIGFuaW1hdGlvbjogJHtmYWRlSW5BbmltYXRpb259ICR7VFJBTlNJVElPTl9USU1FfXMgbGluZWFyO1xyXG5cclxuICBtYXJnaW4tbGVmdDogMzAlO1xyXG4gIG1hcmdpbi1yaWdodDogMzAlO1xyXG5cclxuXHJcblxyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgU3RhdHVzQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDQwMHB4O1xyXG4gIHRvcDogMCU7XHJcbiAgbWFyZ2luOiAwIDQwJTtcclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IFN0YXR1c1RpdGxlID0gc3R5bGVkLmRpdmBcclxuICB3aWR0aDogYXV0bztcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgZm9udC1zaXplOiA0MHB4O1xyXG5gO1xyXG5cclxuXHJcblxyXG5jb25zdCBtYWluQmV0c0xhYmVsID0gY3NzYFxyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgbWFpbkJldHNMYWJlbENsYXNzTmFtZSA9IGNzc2BcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuYDtcclxuXHJcblxyXG5jb25zdCBwbGF5ZXJUcmFuc3BhcmVudCA9IHRpbnljb2xvcihQTEFZRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDApXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IHBsYXllck1lZCA9IHRpbnljb2xvcihQTEFZRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDAuNjUpXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IHBsYXllckZ1bGwgPSB0aW55Y29sb3IoUExBWUVSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwLjkpXHJcbiAgLnRvU3RyaW5nKCk7XHJcblxyXG5jb25zdCBiYW5rZXJUcmFuc3BhcmVudCA9IHRpbnljb2xvcihCQU5LRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDApXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IGJhbmtlck1lZCA9IHRpbnljb2xvcihCQU5LRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDAuNjUpXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IGJhbmtlckZ1bGwgPSB0aW55Y29sb3IoQkFOS0VSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwLjkpXHJcbiAgLnRvU3RyaW5nKCk7XHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IHBsYXllckJhY2tncm91bmQgPSBjc3NgXHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAzMyU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudChcclxuICAgICAgICAgIHRvIGxlZnQsXHJcbiAgICAgICAgICAke3BsYXllclRyYW5zcGFyZW50fSxcclxuICAgICAgICAgICR7cGxheWVyTWVkfSAxNiUsXHJcbiAgICAgICAgICAke3BsYXllckZ1bGx9IDUwJSxcclxuICAgICAgICAgICR7cGxheWVyTWVkfSA4NCUsXHJcbiAgICAgICAgICAke3BsYXllclRyYW5zcGFyZW50fVxyXG4gICk7XHJcblxyXG4gIHNwYW4ge1xyXG4gICAgbWFyZ2luLXRvcDogMnB4O1xyXG4gICAgZm9udC1mYW1pbHk6IFJvYm90bztcclxuICAgIGZvbnQtc2l6ZTogNDBweDtcclxuICAgIGNvbG9yOiAjZmZiO1xyXG4gICAgcGFkZGluZy1sZWZ0OiA0cHg7XHJcbiAgfVxyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBiYW5rZXJCYWNrZ3JvdW5kID0gY3NzYFxyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMzMlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoXHJcbiAgICAgICAgICB0byBsZWZ0LFxyXG4gICAgICAgICAgJHtiYW5rZXJUcmFuc3BhcmVudH0sXHJcbiAgICAgICAgICAke2Jhbmtlck1lZH0gMTYlLFxyXG4gICAgICAgICAgJHtiYW5rZXJGdWxsfSA1MCUsXHJcbiAgICAgICAgICAke2Jhbmtlck1lZH0gODQlLFxyXG4gICAgICAgICAgJHtiYW5rZXJUcmFuc3BhcmVudH1cclxuICApO1xyXG5cclxuICBzcGFuIHtcclxuICAgIG1hcmdpbi10b3A6IDJweDtcclxuICAgIGZvbnQtZmFtaWx5OiBSb2JvdG87XHJcbiAgICBmb250LXNpemU6IDQwcHg7XHJcbiAgICBjb2xvcjogI2ZmYjtcclxuICAgIHBhZGRpbmctbGVmdDogNHB4O1xyXG4gIH1cclxuXHJcbmA7Il19 */\");\nconst bankerPulseContainer = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)(\"#bet-banker{.highlight{\", bankerAnimation, \";}}#bet-tiger,#bet-batsman{.highlight{\", playerAnimation, \";}}\" + ( false ? 0 : \";label:bankerPulseContainer;\"),  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\nconst bankerPairPulseContainer = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)(\"#bet-banker-pair,#bet-natural-banker{.highlight{\", bankerAnimation, \";}}\" + ( false ? 0 : \";label:bankerPairPulseContainer;\"),  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\nconst tiePulseContainer = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)(\"#bet-tie{.highlight{\", tieAnimation, \";}}\" + ( false ? 0 : \";label:tiePulseContainer;\"),  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\nconst suitedTiePulseContainer = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)(\"#bet-suited-tie{.highlight{\", suitedTieAnimation, \";}}\" + ( false ? 0 : \";label:suitedTiePulseContainer;\"),  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\nconst inactiveGameBoard = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)( false ? 0 : {\n  name: \"lrmzvd-inactiveGameBoard\",\n  styles: \"transform:translateY(43%);label:inactiveGameBoard;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc3R5bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNklvQyIsImZpbGUiOiJDOlxcVXNlcnNcXFR5a2hlXFxlbGVjdHJvbmFwcHNcXHR5a2hlLWVsZWN0cm9uLWFwcHMtYmFjY2FyYXRcXHNyY1xccmVuZGVyZXJcXGJhY2NhcmF0XFxwbGF5ZXJcXHZpZXdzXFxHYW1lQm9hcmRcXHN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMgfSBmcm9tIFwiQGVtb3Rpb24vY3NzXCI7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xyXG5pbXBvcnQgeyBoZXgycmdiYSB9IGZyb20gXCIuLi8uLi8uLi90eWtoZS91dGlsc1wiO1xyXG5pbXBvcnQgdGlueWNvbG9yIGZyb20gJ3Rpbnljb2xvcjInO1xyXG5cclxuXHJcbmltcG9ydCB7IHRoZW1lIH0gZnJvbSBcIi4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcFwiO1xyXG5leHBvcnQgY29uc3QgSEVBREVSX0hFSUdIVCA9IDYwO1xyXG5cclxuY29uc3QgeyBwYWxldHRlLCB0aW50cywgfSA9IHRoZW1lO1xyXG5cclxuXHJcblxyXG5pbXBvcnQgYmdJbWFnZSBmcm9tICcuLi8uLi9hc3NldHMvaW1hZ2VzL2JnLnBuZydcclxuaW1wb3J0IGdhbWVOYW1lSW1nIGZyb20gJy4uLy4uL2Fzc2V0cy9pbWFnZXMvQmFjY2FyYXROYW1lLnBuZydcclxuaW1wb3J0IGdvbGRlbkJvcmRlckltZyBmcm9tICcuLi8uLi9hc3NldHMvaW1hZ2VzL0JpZ1NjcmVlbkJvcmRlci5wbmcnXHJcblxyXG5pbXBvcnQgQmFua2VyIGZyb20gJy4uLy4uL2Fzc2V0cy9pbWFnZXMvQmFua2VyLnBuZyc7XHJcbmltcG9ydCBQbGF5ZXIgZnJvbSAnLi4vLi4vYXNzZXRzL2ltYWdlcy9QbGF5ZXIucG5nJztcclxuXHJcbmltcG9ydCB7IFVJX0NPTkZJRyB9IGZyb20gXCIuLi8uLi91aUNvbmZpZ1wiO1xyXG5cclxuY29uc3Qge1xyXG4gIENPTE9SUzogeyBQTEFZRVJfQ09MT1IsIEJBTktFUl9DT0xPUn0sXHJcbn0gPSBVSV9DT05GSUc7XHJcblxyXG5cclxuY29uc3QgVFJBTlNJVElPTl9USU1FID0gMC4yO1xyXG5cclxuXHJcbmNvbnN0IHByb2dyZXNzQmFyS2V5ZnJhbWUgPSBrZXlmcmFtZXNgXHJcbiAgZnJvbSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlWCh2YXIoLS1yZW1haW5pbmcpKTtcclxuICB9XHJcbiAgdG8ge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZVgoMCk7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHByb2dyZXNzQmFyQW5pbWF0aW9uID0gY3NzYFxyXG4gICY6OmJlZm9yZSB7XHJcbiAgICBhbmltYXRpb246ICR7cHJvZ3Jlc3NCYXJLZXlmcmFtZX0gdmFyKC0tZHVyYXRpb24pIGxpbmVhcjtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgZmFkZUluQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxyXG4gIGZyb20ge1xyXG4gICAgb3BhY2l0eTogMDtcclxuICB9XHJcbiAgdG8ge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcbmA7XHJcblxyXG5jb25zdCBwdWxzZUFuaW1hdGlvbktleWZyYW1lID0gKGNvbG9yKSA9PiBrZXlmcmFtZXNgXHJcbiAgdG8ge1xyXG4gICAgZmlsbC1vcGFjaXR5OiAwLjg1O1xyXG4gICAgZmlsbDogJHtjb2xvcn07XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgZ2V0QW5pbWF0aW9uID0gKGNvbG9yKSA9PiBjc3NgXHJcbiAgYW5pbWF0aW9uOiAke3B1bHNlQW5pbWF0aW9uS2V5ZnJhbWUoY29sb3IpfSAwLjMzcyBhbHRlcm5hdGUgaW5maW5pdGU7XHJcbmA7XHJcblxyXG5jb25zdCBQTEFZRVJfSElHSExJR0hUX0NPTE9SID0gJyM3OUM5RkYnO1xyXG5jb25zdCBCQU5LRVJfSElHSExJR0hUX0NPTE9SID0gJyNGRjQ4NTEnO1xyXG5jb25zdCBUSUVfSElHSExJR0hUX0NPTE9SID0gJyM1NWZiNTcnO1xyXG5jb25zdCBTVVBFUlNJWF9ISUdIVExJR0hUX0NPTE9SID0gJyNCNkMyREEnO1xyXG5jb25zdCBwbGF5ZXJBbmltYXRpb24gPSBnZXRBbmltYXRpb24oUExBWUVSX0hJR0hMSUdIVF9DT0xPUik7XHJcbmNvbnN0IGJhbmtlckFuaW1hdGlvbiA9IGdldEFuaW1hdGlvbihCQU5LRVJfSElHSExJR0hUX0NPTE9SKTtcclxuY29uc3QgdGllQW5pbWF0aW9uID0gZ2V0QW5pbWF0aW9uKFRJRV9ISUdITElHSFRfQ09MT1IpO1xyXG5jb25zdCBzdWl0ZWRUaWVBbmltYXRpb24gPSBnZXRBbmltYXRpb24oVElFX0hJR0hMSUdIVF9DT0xPUik7XHJcbmNvbnN0IHN1cGVyU2l4QW5pbWF0aW9uID0gZ2V0QW5pbWF0aW9uKFNVUEVSU0lYX0hJR0hUTElHSFRfQ09MT1IpO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBwbGF5ZXJQdWxzZUNvbnRhaW5lciA9IGNzc2BcclxuICAjYmV0LXBsYXllciB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtwbGF5ZXJBbmltYXRpb259O1xyXG4gICAgfTtcclxuICB9XHJcbiAgI2JldC1kcmFnb24sICNiZXQtYm93bGVyIHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke2JhbmtlckFuaW1hdGlvbn07XHJcbiAgICB9O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBwbGF5ZXJQYWlyUHVsc2VDb250YWluZXIgPSBjc3NgXHJcbiAgI2JldC1wbGF5ZXItcGFpciwgI2JldC1uYXR1cmFsLXBsYXllciB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtwbGF5ZXJBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBzdXBlclNpeFB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtc3VwZXItc2l4IHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke3N1cGVyU2l4QW5pbWF0aW9ufTtcclxuICAgIH1cclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgYmFua2VyUHVsc2VDb250YWluZXIgPSBjc3NgXHJcbiAgI2JldC1iYW5rZXIge1xyXG4gICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICR7YmFua2VyQW5pbWF0aW9ufTtcclxuICAgIH1cclxuICB9O1xyXG4gICNiZXQtdGlnZXIsICNiZXQtYmF0c21hbiB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtwbGF5ZXJBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuZXhwb3J0IGNvbnN0IGJhbmtlclBhaXJQdWxzZUNvbnRhaW5lciA9IGNzc2BcclxuICAjYmV0LWJhbmtlci1wYWlyLCAjYmV0LW5hdHVyYWwtYmFua2VyIHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke2JhbmtlckFuaW1hdGlvbn07XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHRpZVB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtdGllIHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke3RpZUFuaW1hdGlvbn07XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHN1aXRlZFRpZVB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtc3VpdGVkLXRpZSB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtzdWl0ZWRUaWVBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbmFjdGl2ZUdhbWVCb2FyZCA9IGNzc2BcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNDMlKTtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbmFjdGl2ZUdyaWQgPSBjc3NgXHJcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgICAqIHtcclxuICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgfSAgIFxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHRpbHRlZEdyaWQgPSBjc3NgXHJcbiAgQG1lZGlhIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuNykgcm90YXRlWCg2MGRlZyk7XHJcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiBib3R0b207XHJcbiAgICBtYXgtd2lkdGg6IDgwMHB4O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBtb2JpbGVHYW1lQm9hcmQgPSBjc3NgXHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuXHJcbiAgIFtpZF49J2JldC0nXSB7XHJcbiAgICAmOmhvdmVyLFxyXG4gICAgJjphY3RpdmUge1xyXG4gICAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgICBmaWxsLW9wYWNpdHk6IDAuNjU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBtZWRpYSAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzpoaWRkZW47XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzIGxpbmVhcjtcclxuXHJcbiAgI2JldC1pY29uIHtcclxuICAgIHBvaW50ZXItZXZlbnRzOiBhbGw7XHJcbiAgfVxyXG5cclxuICBbaWRePSdiZXQtJ10ge1xyXG4gICAgJi5kaXNhYmxlZCB7XHJcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgfVxyXG4gICAgJjpob3ZlcixcclxuICAgICY6YWN0aXZlIHtcclxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgICBmaWxsLW9wYWNpdHk6IDAuODU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG5gO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgSGVhZGVyID0gc3R5bGVkLmhlYWRlcmBcclxuICBoZWlnaHQ6ICR7SEVBREVSX0hFSUdIVH1weDtcclxuICB3aWR0aDogMTAwJTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgYmFja2dyb3VuZDogJHtoZXgycmdiYShwYWxldHRlLnByaW1hcnksIHRpbnRzLnByaW1hcnkpfTtcclxuICBjb2xvcjogJHtwYWxldHRlLmZvcmVncm91bmR9O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBmb250LXNpemU6IDM0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMjdzIGxpbmVhciwgdHJhbnNmb3JtIDAuMjdzIGxpbmVhcjtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBoZWFkZXJDbGFzc05hbWUgPSBjc3NgXHJcbiAgLS1yZW1haW5pbmc6IDE7XHJcbiAgLS1kdXJhdGlvbjogMTBzO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBjb2xvcjogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XHJcbiAgZmlsbDogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBmb250LXNpemU6IDM0cHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgJHtoZXgycmdiYShwYWxldHRlLnByaW1hcnksIHRpbnRzLnByaW1hcnkpfTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgJjpiZWZvcmUge1xyXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdDtcclxuICAgIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3IpO1xyXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAxcyBsaW5lYXIsIHRyYW5zZm9ybSB2YXIoLS1kdXJhdGlvbikgbGluZWFyO1xyXG4gICAgei1pbmRleDogLTE7XHJcbiAgfVxyXG5gO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgQmFua2VySW1nID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgaGVpZ2h0OiAxMiU7XHJcbiAgd2lkdGg6IDE4JTtcclxuICB0b3A6IDUlO1xyXG4gIGxlZnQ6IDY4JTtcclxuXHJcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7QmFua2VyfSk7XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xyXG5gXHJcbmV4cG9ydCBjb25zdCBQbGF5ZXJJbWcgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBoZWlnaHQ6IDEyJTtcclxuICB3aWR0aDogMTQlO1xyXG4gIHRvcDogNSU7XHJcbiAgbGVmdDogMTYlO1xyXG5cclxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHtQbGF5ZXJ9KTtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3A7XHJcbmBcclxuXHJcblxyXG5leHBvcnQgY29uc3QgQ29udGFpbmVyR29sZGVuQm9yZGVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgbWFyZ2luLWxlZnQ6IDBweDtcclxuICBtYXJnaW4tdG9wOiAwcHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHNjYWxlOiAxO1xyXG5cclxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHtnb2xkZW5Cb3JkZXJJbWd9KTtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgR2FtZUhlYWRlciA9IHN0eWxlZC5kaXZgXHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBtYXJnaW4tbGVmdDogNjEwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAzcHg7XHJcbiAgICB3aWR0aDogNzA5cHg7XHJcbiAgICBoZWlnaHQ6IDIwMnB4O1xyXG4gICAgc2NhbGU6IDE7XHJcblxyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7Z2FtZU5hbWVJbWd9KTtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgTWFpbkNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA3NyU7XHJcbiAgaGVpZ2h0OiAzODBweDtcclxuXHJcbiAgdG9wOiAzNSU7XHJcbiAgbGVmdDogMTIlO1xyXG5cclxuXHJcbiAgYFxyXG5leHBvcnQgY29uc3QgQmV0R3JpZENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIHBlcnNwZWN0aXZlOiAxMDAwcHg7XHJcblxyXG4gIGBcclxuXHJcblxyXG5leHBvcnQgY29uc3QgQmlnUm9hZEJnQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDI4cHgpO1xyXG4gIGhlaWdodDogMjkuMiU7XHJcbiAgdG9wOiAxOS40JTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMzYsIDFmcik7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNiwgMWZyKTtcclxuICBnYXA6IDFweCAxcHg7XHJcblxyXG4gIG1hcmdpbi1sZWZ0OiAxNHB4O1xyXG4gIG1hcmdpbi1yaWdodDogMTRweDtcclxuXHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBCaWdSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDI4cHgpO1xyXG4gIGhlaWdodDogMzAlO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgZGlzcGxheTogZmxleDtcclxuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBsaW5lYXI7XHJcbiAgY3Vyc29yOiB6b29tLWluO1xyXG5cclxuICA+IHN2ZyB7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9XHJcblxyXG4gIHRvcDogMTklO1xyXG4gIGZsZXg6IG5vbmU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG5cclxuXHJcbiAgbWFyZ2luLWxlZnQ6IDE0cHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5cclxuYDtcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IEJpZ0V5ZVJvYWRCZ0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiBjYWxjKDMzLjMzJSAtIDE0cHgpO1xyXG4gIGhlaWdodDogMTQuMiU7XHJcbiAgdG9wOiA1MC40JTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMjQsIDFmcik7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNiwgMWZyKTtcclxuICBnYXA6IDFweCAxcHg7XHJcblxyXG4gIG1hcmdpbi1sZWZ0OiAxNHB4O1xyXG4gIFxyXG5gO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBCaWdFeWVSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMzMuMzMlIC0gMTRweCk7XHJcbiAgaGVpZ2h0OiAxNSU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGxpbmVhcjtcclxuICBjdXJzb3I6IHpvb20taW47XHJcblxyXG4gID4gc3ZnIHtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgdG9wOiA1MCU7XHJcbiAgZmxleDogbm9uZTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDE0cHg7XHJcblxyXG5gO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgU21hbGxSb2FkQmdDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE0LjIlO1xyXG4gIHRvcDogNTAuNCU7XHJcbiAgbGVmdDogMzMuMzMlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuXHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyNCwgMWZyKTtcclxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg2LCAxZnIpO1xyXG4gIGdhcDogMXB4IDFweDtcclxuXHJcbiAgbWFyZ2luLWxlZnQ6IDdweDtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBDb2Nrcm9hY2hSb2FkQmdDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE0LjIlO1xyXG4gIHRvcDogNTAuNCU7XHJcbiAgbGVmdDogNjYuNjYlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuXHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyNCwgMWZyKTtcclxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg2LCAxZnIpO1xyXG4gIGdhcDogMXB4IDFweDtcclxuXHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5gO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBCZWFkUm9hZEJnQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDUwJTtcclxuICBoZWlnaHQ6IDMzLjIyJTtcclxuXHJcbiAgdG9wOiA2NiU7XHJcbiAgbGVmdDogMDtcclxuICBtYXJnaW4tbGVmdDogMTRweDtcclxuXHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxNiwgMWZyKTtcclxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg2LCAxZnIpO1xyXG4gIGdhcDogMXB4IDFweDtcclxuXHJcblxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IEJlYWRSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6ICA1MCU7XHJcbiAgaGVpZ2h0OiAzNS4yMiU7XHJcblxyXG4gIHRvcDogNjUlO1xyXG4gIGxlZnQ6IDA7XHJcbiAgbWFyZ2luLWxlZnQ6IDE0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xyXG4gIGN1cnNvcjogem9vbS1pbjtcclxuXHJcbiAgPiBzdmcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuYDtcclxuXHJcblxyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBTbWFsbFJvYWRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE1JTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xyXG4gIGN1cnNvcjogem9vbS1pbjtcclxuXHJcbiAgPiBzdmcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuICB0b3A6IDUwJTtcclxuICBsZWZ0OiAzMy4zMyU7XHJcbiAgZmxleDogbm9uZTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDdweDtcclxuXHJcbmA7XHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IENvY2tyb2FjaFJvYWRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE1JTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xyXG4gIGN1cnNvcjogem9vbS1pbjtcclxuXHJcbiAgPiBzdmcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuICB0b3A6IDUwJTtcclxuICBsZWZ0OiA2Ni42NiU7XHJcbiAgZmxleDogbm9uZTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5cclxuXHJcbmA7XHJcblxyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBSb2FkUHJldmlld0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA1JTtcclxuICBoZWlnaHQ6IDIyJTtcclxuXHJcbiAgdG9wOiA2MCU7XHJcbiAgbGVmdDogMzMuMzMlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTdGF0c0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA3JTtcclxuICBoZWlnaHQ6IDIyJTtcclxuXHJcbiAgdG9wOiA2MCU7XHJcbiAgbGVmdDogNDMuMzMlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTdGF0aXN0aWNzQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDQ4LjM1JTtcclxuICBoZWlnaHQ6IDE4LjIlO1xyXG5cclxuICB0b3A6IDgxJTtcclxuICByaWdodDogMCU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuXHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5gO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBQbGF5ZXJIYW5kc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxNSU7XHJcbiAgaGVpZ2h0OiAxMyU7XHJcblxyXG4gIHRvcDogMjQlO1xyXG4gIGxlZnQ6IDE2JTtcclxuICBtYXJnaW4tcmlnaHQ6IDE0cHg7XHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBCYW5rZXJIYW5kc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxNSU7XHJcbiAgaGVpZ2h0OiAxMyU7XHJcblxyXG4gIHRvcDogMjQlO1xyXG4gIGxlZnQ6IDcwJTtcclxuXHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgUGxheWVySGFuZHNIYW5kc0ZsZXggPSBzdHlsZWQuZGl2YFxyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4yN3MgbGluZWFyIDBzO1xyXG4gICAgcGVyc3BlY3RpdmU6IDEwMDBweDtcclxuICAgIHBhZGRpbmc6IDJweCAwcHg7XHJcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBCYW5rZXJIYW5kc0hhbmRzRmxleCA9IHN0eWxlZC5kaXZgXHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI3cyBsaW5lYXIgMHM7XHJcbiAgICBwZXJzcGVjdGl2ZTogMTAwMHB4O1xyXG4gICAgcGFkZGluZzogMnB4IDBweDtcclxuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IFJlc3VsdE1lc3NhZ2VDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHRvcDogNDAlO1xyXG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8gLHNhbnMtc2VyaWY7XHJcbiAgZm9udC1zdHlsZTpub3JtYWw7XHJcbiAgZm9udC1zdHJldGNoOm5vcm1hbDtcclxuICBsaW5lLWhlaWdodDpub3JtYWw7XHJcbiAgbGV0dGVyLXNwYWNpbmc6bm9ybWFsO1xyXG4gIGZvbnQtc2l6ZToxNnB4ICFpbXBvcnRhbnQ7XHJcbiAgZm9udC13ZWlnaHQ6OTAwO1xyXG4gIHRleHQtc2hhZG93OjAgMCAxcHggcmdiYSgwLDAsMCwwLjYpO1xyXG5cclxuICBjb2xvcjogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XHJcbiAgZGlzcGxheTpmbGV4O1xyXG4gIGZsZXgtZmxvdzpjb2x1bW4gbm93cmFwO1xyXG4gIHdoaXRlLXNwYWNlOm5vd3JhcDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOmNlbnRlcjtcclxuICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XHJcbiAgd2lkdGg6IGF1dG87XHJcbiAgcGFkZGluZy10b3A6MjBweDtcclxuICBwYWRkaW5nLWJvdHRvbToyMHB4O1xyXG4gIGFuaW1hdGlvbjogJHtmYWRlSW5BbmltYXRpb259ICR7VFJBTlNJVElPTl9USU1FfXMgbGluZWFyO1xyXG5cclxuICBtYXJnaW4tbGVmdDogMzAlO1xyXG4gIG1hcmdpbi1yaWdodDogMzAlO1xyXG5cclxuXHJcblxyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgU3RhdHVzQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDQwMHB4O1xyXG4gIHRvcDogMCU7XHJcbiAgbWFyZ2luOiAwIDQwJTtcclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IFN0YXR1c1RpdGxlID0gc3R5bGVkLmRpdmBcclxuICB3aWR0aDogYXV0bztcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgZm9udC1zaXplOiA0MHB4O1xyXG5gO1xyXG5cclxuXHJcblxyXG5jb25zdCBtYWluQmV0c0xhYmVsID0gY3NzYFxyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgbWFpbkJldHNMYWJlbENsYXNzTmFtZSA9IGNzc2BcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuYDtcclxuXHJcblxyXG5jb25zdCBwbGF5ZXJUcmFuc3BhcmVudCA9IHRpbnljb2xvcihQTEFZRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDApXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IHBsYXllck1lZCA9IHRpbnljb2xvcihQTEFZRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDAuNjUpXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IHBsYXllckZ1bGwgPSB0aW55Y29sb3IoUExBWUVSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwLjkpXHJcbiAgLnRvU3RyaW5nKCk7XHJcblxyXG5jb25zdCBiYW5rZXJUcmFuc3BhcmVudCA9IHRpbnljb2xvcihCQU5LRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDApXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IGJhbmtlck1lZCA9IHRpbnljb2xvcihCQU5LRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDAuNjUpXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IGJhbmtlckZ1bGwgPSB0aW55Y29sb3IoQkFOS0VSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwLjkpXHJcbiAgLnRvU3RyaW5nKCk7XHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IHBsYXllckJhY2tncm91bmQgPSBjc3NgXHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAzMyU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudChcclxuICAgICAgICAgIHRvIGxlZnQsXHJcbiAgICAgICAgICAke3BsYXllclRyYW5zcGFyZW50fSxcclxuICAgICAgICAgICR7cGxheWVyTWVkfSAxNiUsXHJcbiAgICAgICAgICAke3BsYXllckZ1bGx9IDUwJSxcclxuICAgICAgICAgICR7cGxheWVyTWVkfSA4NCUsXHJcbiAgICAgICAgICAke3BsYXllclRyYW5zcGFyZW50fVxyXG4gICk7XHJcblxyXG4gIHNwYW4ge1xyXG4gICAgbWFyZ2luLXRvcDogMnB4O1xyXG4gICAgZm9udC1mYW1pbHk6IFJvYm90bztcclxuICAgIGZvbnQtc2l6ZTogNDBweDtcclxuICAgIGNvbG9yOiAjZmZiO1xyXG4gICAgcGFkZGluZy1sZWZ0OiA0cHg7XHJcbiAgfVxyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBiYW5rZXJCYWNrZ3JvdW5kID0gY3NzYFxyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMzMlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoXHJcbiAgICAgICAgICB0byBsZWZ0LFxyXG4gICAgICAgICAgJHtiYW5rZXJUcmFuc3BhcmVudH0sXHJcbiAgICAgICAgICAke2Jhbmtlck1lZH0gMTYlLFxyXG4gICAgICAgICAgJHtiYW5rZXJGdWxsfSA1MCUsXHJcbiAgICAgICAgICAke2Jhbmtlck1lZH0gODQlLFxyXG4gICAgICAgICAgJHtiYW5rZXJUcmFuc3BhcmVudH1cclxuICApO1xyXG5cclxuICBzcGFuIHtcclxuICAgIG1hcmdpbi10b3A6IDJweDtcclxuICAgIGZvbnQtZmFtaWx5OiBSb2JvdG87XHJcbiAgICBmb250LXNpemU6IDQwcHg7XHJcbiAgICBjb2xvcjogI2ZmYjtcclxuICAgIHBhZGRpbmctbGVmdDogNHB4O1xyXG4gIH1cclxuXHJcbmA7Il19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst inactiveGrid = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)( false ? 0 : {\n  name: \"1835gal-inactiveGrid\",\n  styles: \"pointer-events:none;*{pointer-events:none;};label:inactiveGrid;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst tiltedGrid = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)( false ? 0 : {\n  name: \"1h1i4vc-tiltedGrid\",\n  styles: \"@media (orientation: landscape){transform:scale(0.7) rotateX(60deg);transform-origin:bottom;max-width:800px;};label:tiltedGrid;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst mobileGameBoard = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)( false ? 0 : {\n  name: \"1tljdq6-mobileGameBoard\",\n  styles: \"height:auto;position:relative;flex-flow:column nowrap;justify-content:flex-end;[id^='bet-']{&:hover,&:active{.highlight{fill-opacity:0.65;}}}@media (orientation: landscape){height:100%;background:transparent;};label:mobileGameBoard;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst Container = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk27\",\n  label: \"Container\"\n})( false ? 0 : {\n  name: \"141wjhk\",\n  styles: \"height:100%;width:100%;position:relative;overflow:hidden;transform:translateY(0);transition:transform 0.2s linear;#bet-icon{pointer-events:all;}[id^='bet-']{&.disabled{pointer-events:none;}&:hover,&:active{cursor:pointer;.highlight{fill-opacity:0.85;}}}\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst Header = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"header\",  false ? 0 : {\n  target: \"e1tzh8xk26\",\n  label: \"Header\"\n})(\"height:\", HEADER_HEIGHT, \"px;width:100%;position:relative;background:\", (0,_tykhe_utils__WEBPACK_IMPORTED_MODULE_2__.hex2rgba)(palette.primary, tints.primary), \";color:\", palette.foreground, \";display:flex;justify-content:center;align-items:center;font-size:34px;font-weight:bold;transform:translateY(0);transition:color 0.27s linear,transform 0.27s linear;\" + ( false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\nconst headerClassName = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)(\"--remaining:1;--duration:10s;display:flex;align-items:center;justify-content:center;color:\", palette.primaryContrast, \";fill:\", palette.primaryContrast, \";text-transform:uppercase;font-weight:bold;font-size:34px;border:1px solid \", (0,_tykhe_utils__WEBPACK_IMPORTED_MODULE_2__.hex2rgba)(palette.primary, tints.primary), \";position:relative;overflow:hidden;&:before{transform-origin:left;will-change:transform;position:absolute;top:0;left:0;right:0;bottom:0;content:'';width:100%;background-color:var(--color);transition:background-color 1s linear,transform var(--duration) linear;z-index:-1;}\" + ( false ? 0 : \";label:headerClassName;\"),  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\nconst BankerImg = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk25\",\n  label: \"BankerImg\"\n})(\"position:absolute;height:12%;width:18%;top:5%;left:68%;background-image:url(\", _assets_images_Banker_png__WEBPACK_IMPORTED_MODULE_8__[\"default\"], \");background-repeat:no-repeat;background-size:contain;background-position:top;\" + ( false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\nconst PlayerImg = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk24\",\n  label: \"PlayerImg\"\n})(\"position:absolute;height:12%;width:14%;top:5%;left:16%;background-image:url(\", _assets_images_Player_png__WEBPACK_IMPORTED_MODULE_9__[\"default\"], \");background-repeat:no-repeat;background-size:contain;background-position:top;\" + ( false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\nconst ContainerGoldenBorder = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk23\",\n  label: \"ContainerGoldenBorder\"\n})(\"position:absolute;margin-left:0px;margin-top:0px;width:100%;height:100%;scale:1;background-image:url(\", _assets_images_BigScreenBorder_png__WEBPACK_IMPORTED_MODULE_7__[\"default\"], \");background-repeat:no-repeat;background-size:cover;background-position:top;\" + ( false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc3R5bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNFIrQyIsImZpbGUiOiJDOlxcVXNlcnNcXFR5a2hlXFxlbGVjdHJvbmFwcHNcXHR5a2hlLWVsZWN0cm9uLWFwcHMtYmFjY2FyYXRcXHNyY1xccmVuZGVyZXJcXGJhY2NhcmF0XFxwbGF5ZXJcXHZpZXdzXFxHYW1lQm9hcmRcXHN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMgfSBmcm9tIFwiQGVtb3Rpb24vY3NzXCI7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xyXG5pbXBvcnQgeyBoZXgycmdiYSB9IGZyb20gXCIuLi8uLi8uLi90eWtoZS91dGlsc1wiO1xyXG5pbXBvcnQgdGlueWNvbG9yIGZyb20gJ3Rpbnljb2xvcjInO1xyXG5cclxuXHJcbmltcG9ydCB7IHRoZW1lIH0gZnJvbSBcIi4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcFwiO1xyXG5leHBvcnQgY29uc3QgSEVBREVSX0hFSUdIVCA9IDYwO1xyXG5cclxuY29uc3QgeyBwYWxldHRlLCB0aW50cywgfSA9IHRoZW1lO1xyXG5cclxuXHJcblxyXG5pbXBvcnQgYmdJbWFnZSBmcm9tICcuLi8uLi9hc3NldHMvaW1hZ2VzL2JnLnBuZydcclxuaW1wb3J0IGdhbWVOYW1lSW1nIGZyb20gJy4uLy4uL2Fzc2V0cy9pbWFnZXMvQmFjY2FyYXROYW1lLnBuZydcclxuaW1wb3J0IGdvbGRlbkJvcmRlckltZyBmcm9tICcuLi8uLi9hc3NldHMvaW1hZ2VzL0JpZ1NjcmVlbkJvcmRlci5wbmcnXHJcblxyXG5pbXBvcnQgQmFua2VyIGZyb20gJy4uLy4uL2Fzc2V0cy9pbWFnZXMvQmFua2VyLnBuZyc7XHJcbmltcG9ydCBQbGF5ZXIgZnJvbSAnLi4vLi4vYXNzZXRzL2ltYWdlcy9QbGF5ZXIucG5nJztcclxuXHJcbmltcG9ydCB7IFVJX0NPTkZJRyB9IGZyb20gXCIuLi8uLi91aUNvbmZpZ1wiO1xyXG5cclxuY29uc3Qge1xyXG4gIENPTE9SUzogeyBQTEFZRVJfQ09MT1IsIEJBTktFUl9DT0xPUn0sXHJcbn0gPSBVSV9DT05GSUc7XHJcblxyXG5cclxuY29uc3QgVFJBTlNJVElPTl9USU1FID0gMC4yO1xyXG5cclxuXHJcbmNvbnN0IHByb2dyZXNzQmFyS2V5ZnJhbWUgPSBrZXlmcmFtZXNgXHJcbiAgZnJvbSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlWCh2YXIoLS1yZW1haW5pbmcpKTtcclxuICB9XHJcbiAgdG8ge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZVgoMCk7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHByb2dyZXNzQmFyQW5pbWF0aW9uID0gY3NzYFxyXG4gICY6OmJlZm9yZSB7XHJcbiAgICBhbmltYXRpb246ICR7cHJvZ3Jlc3NCYXJLZXlmcmFtZX0gdmFyKC0tZHVyYXRpb24pIGxpbmVhcjtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgZmFkZUluQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxyXG4gIGZyb20ge1xyXG4gICAgb3BhY2l0eTogMDtcclxuICB9XHJcbiAgdG8ge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcbmA7XHJcblxyXG5jb25zdCBwdWxzZUFuaW1hdGlvbktleWZyYW1lID0gKGNvbG9yKSA9PiBrZXlmcmFtZXNgXHJcbiAgdG8ge1xyXG4gICAgZmlsbC1vcGFjaXR5OiAwLjg1O1xyXG4gICAgZmlsbDogJHtjb2xvcn07XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgZ2V0QW5pbWF0aW9uID0gKGNvbG9yKSA9PiBjc3NgXHJcbiAgYW5pbWF0aW9uOiAke3B1bHNlQW5pbWF0aW9uS2V5ZnJhbWUoY29sb3IpfSAwLjMzcyBhbHRlcm5hdGUgaW5maW5pdGU7XHJcbmA7XHJcblxyXG5jb25zdCBQTEFZRVJfSElHSExJR0hUX0NPTE9SID0gJyM3OUM5RkYnO1xyXG5jb25zdCBCQU5LRVJfSElHSExJR0hUX0NPTE9SID0gJyNGRjQ4NTEnO1xyXG5jb25zdCBUSUVfSElHSExJR0hUX0NPTE9SID0gJyM1NWZiNTcnO1xyXG5jb25zdCBTVVBFUlNJWF9ISUdIVExJR0hUX0NPTE9SID0gJyNCNkMyREEnO1xyXG5jb25zdCBwbGF5ZXJBbmltYXRpb24gPSBnZXRBbmltYXRpb24oUExBWUVSX0hJR0hMSUdIVF9DT0xPUik7XHJcbmNvbnN0IGJhbmtlckFuaW1hdGlvbiA9IGdldEFuaW1hdGlvbihCQU5LRVJfSElHSExJR0hUX0NPTE9SKTtcclxuY29uc3QgdGllQW5pbWF0aW9uID0gZ2V0QW5pbWF0aW9uKFRJRV9ISUdITElHSFRfQ09MT1IpO1xyXG5jb25zdCBzdWl0ZWRUaWVBbmltYXRpb24gPSBnZXRBbmltYXRpb24oVElFX0hJR0hMSUdIVF9DT0xPUik7XHJcbmNvbnN0IHN1cGVyU2l4QW5pbWF0aW9uID0gZ2V0QW5pbWF0aW9uKFNVUEVSU0lYX0hJR0hUTElHSFRfQ09MT1IpO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBwbGF5ZXJQdWxzZUNvbnRhaW5lciA9IGNzc2BcclxuICAjYmV0LXBsYXllciB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtwbGF5ZXJBbmltYXRpb259O1xyXG4gICAgfTtcclxuICB9XHJcbiAgI2JldC1kcmFnb24sICNiZXQtYm93bGVyIHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke2JhbmtlckFuaW1hdGlvbn07XHJcbiAgICB9O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBwbGF5ZXJQYWlyUHVsc2VDb250YWluZXIgPSBjc3NgXHJcbiAgI2JldC1wbGF5ZXItcGFpciwgI2JldC1uYXR1cmFsLXBsYXllciB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtwbGF5ZXJBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBzdXBlclNpeFB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtc3VwZXItc2l4IHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke3N1cGVyU2l4QW5pbWF0aW9ufTtcclxuICAgIH1cclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgYmFua2VyUHVsc2VDb250YWluZXIgPSBjc3NgXHJcbiAgI2JldC1iYW5rZXIge1xyXG4gICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICR7YmFua2VyQW5pbWF0aW9ufTtcclxuICAgIH1cclxuICB9O1xyXG4gICNiZXQtdGlnZXIsICNiZXQtYmF0c21hbiB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtwbGF5ZXJBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuZXhwb3J0IGNvbnN0IGJhbmtlclBhaXJQdWxzZUNvbnRhaW5lciA9IGNzc2BcclxuICAjYmV0LWJhbmtlci1wYWlyLCAjYmV0LW5hdHVyYWwtYmFua2VyIHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke2JhbmtlckFuaW1hdGlvbn07XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHRpZVB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtdGllIHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke3RpZUFuaW1hdGlvbn07XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHN1aXRlZFRpZVB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtc3VpdGVkLXRpZSB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtzdWl0ZWRUaWVBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbmFjdGl2ZUdhbWVCb2FyZCA9IGNzc2BcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNDMlKTtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbmFjdGl2ZUdyaWQgPSBjc3NgXHJcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgICAqIHtcclxuICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgfSAgIFxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHRpbHRlZEdyaWQgPSBjc3NgXHJcbiAgQG1lZGlhIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuNykgcm90YXRlWCg2MGRlZyk7XHJcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiBib3R0b207XHJcbiAgICBtYXgtd2lkdGg6IDgwMHB4O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBtb2JpbGVHYW1lQm9hcmQgPSBjc3NgXHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuXHJcbiAgIFtpZF49J2JldC0nXSB7XHJcbiAgICAmOmhvdmVyLFxyXG4gICAgJjphY3RpdmUge1xyXG4gICAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgICBmaWxsLW9wYWNpdHk6IDAuNjU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBtZWRpYSAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzpoaWRkZW47XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzIGxpbmVhcjtcclxuXHJcbiAgI2JldC1pY29uIHtcclxuICAgIHBvaW50ZXItZXZlbnRzOiBhbGw7XHJcbiAgfVxyXG5cclxuICBbaWRePSdiZXQtJ10ge1xyXG4gICAgJi5kaXNhYmxlZCB7XHJcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgfVxyXG4gICAgJjpob3ZlcixcclxuICAgICY6YWN0aXZlIHtcclxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgICBmaWxsLW9wYWNpdHk6IDAuODU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG5gO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgSGVhZGVyID0gc3R5bGVkLmhlYWRlcmBcclxuICBoZWlnaHQ6ICR7SEVBREVSX0hFSUdIVH1weDtcclxuICB3aWR0aDogMTAwJTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgYmFja2dyb3VuZDogJHtoZXgycmdiYShwYWxldHRlLnByaW1hcnksIHRpbnRzLnByaW1hcnkpfTtcclxuICBjb2xvcjogJHtwYWxldHRlLmZvcmVncm91bmR9O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBmb250LXNpemU6IDM0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMjdzIGxpbmVhciwgdHJhbnNmb3JtIDAuMjdzIGxpbmVhcjtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBoZWFkZXJDbGFzc05hbWUgPSBjc3NgXHJcbiAgLS1yZW1haW5pbmc6IDE7XHJcbiAgLS1kdXJhdGlvbjogMTBzO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBjb2xvcjogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XHJcbiAgZmlsbDogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBmb250LXNpemU6IDM0cHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgJHtoZXgycmdiYShwYWxldHRlLnByaW1hcnksIHRpbnRzLnByaW1hcnkpfTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgJjpiZWZvcmUge1xyXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdDtcclxuICAgIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3IpO1xyXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAxcyBsaW5lYXIsIHRyYW5zZm9ybSB2YXIoLS1kdXJhdGlvbikgbGluZWFyO1xyXG4gICAgei1pbmRleDogLTE7XHJcbiAgfVxyXG5gO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgQmFua2VySW1nID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgaGVpZ2h0OiAxMiU7XHJcbiAgd2lkdGg6IDE4JTtcclxuICB0b3A6IDUlO1xyXG4gIGxlZnQ6IDY4JTtcclxuXHJcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7QmFua2VyfSk7XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xyXG5gXHJcbmV4cG9ydCBjb25zdCBQbGF5ZXJJbWcgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBoZWlnaHQ6IDEyJTtcclxuICB3aWR0aDogMTQlO1xyXG4gIHRvcDogNSU7XHJcbiAgbGVmdDogMTYlO1xyXG5cclxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHtQbGF5ZXJ9KTtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3A7XHJcbmBcclxuXHJcblxyXG5leHBvcnQgY29uc3QgQ29udGFpbmVyR29sZGVuQm9yZGVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgbWFyZ2luLWxlZnQ6IDBweDtcclxuICBtYXJnaW4tdG9wOiAwcHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHNjYWxlOiAxO1xyXG5cclxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHtnb2xkZW5Cb3JkZXJJbWd9KTtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgR2FtZUhlYWRlciA9IHN0eWxlZC5kaXZgXHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBtYXJnaW4tbGVmdDogNjEwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAzcHg7XHJcbiAgICB3aWR0aDogNzA5cHg7XHJcbiAgICBoZWlnaHQ6IDIwMnB4O1xyXG4gICAgc2NhbGU6IDE7XHJcblxyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7Z2FtZU5hbWVJbWd9KTtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgTWFpbkNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA3NyU7XHJcbiAgaGVpZ2h0OiAzODBweDtcclxuXHJcbiAgdG9wOiAzNSU7XHJcbiAgbGVmdDogMTIlO1xyXG5cclxuXHJcbiAgYFxyXG5leHBvcnQgY29uc3QgQmV0R3JpZENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIHBlcnNwZWN0aXZlOiAxMDAwcHg7XHJcblxyXG4gIGBcclxuXHJcblxyXG5leHBvcnQgY29uc3QgQmlnUm9hZEJnQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDI4cHgpO1xyXG4gIGhlaWdodDogMjkuMiU7XHJcbiAgdG9wOiAxOS40JTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMzYsIDFmcik7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNiwgMWZyKTtcclxuICBnYXA6IDFweCAxcHg7XHJcblxyXG4gIG1hcmdpbi1sZWZ0OiAxNHB4O1xyXG4gIG1hcmdpbi1yaWdodDogMTRweDtcclxuXHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBCaWdSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDI4cHgpO1xyXG4gIGhlaWdodDogMzAlO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgZGlzcGxheTogZmxleDtcclxuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBsaW5lYXI7XHJcbiAgY3Vyc29yOiB6b29tLWluO1xyXG5cclxuICA+IHN2ZyB7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9XHJcblxyXG4gIHRvcDogMTklO1xyXG4gIGZsZXg6IG5vbmU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG5cclxuXHJcbiAgbWFyZ2luLWxlZnQ6IDE0cHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5cclxuYDtcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IEJpZ0V5ZVJvYWRCZ0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiBjYWxjKDMzLjMzJSAtIDE0cHgpO1xyXG4gIGhlaWdodDogMTQuMiU7XHJcbiAgdG9wOiA1MC40JTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMjQsIDFmcik7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNiwgMWZyKTtcclxuICBnYXA6IDFweCAxcHg7XHJcblxyXG4gIG1hcmdpbi1sZWZ0OiAxNHB4O1xyXG4gIFxyXG5gO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBCaWdFeWVSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMzMuMzMlIC0gMTRweCk7XHJcbiAgaGVpZ2h0OiAxNSU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGxpbmVhcjtcclxuICBjdXJzb3I6IHpvb20taW47XHJcblxyXG4gID4gc3ZnIHtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgdG9wOiA1MCU7XHJcbiAgZmxleDogbm9uZTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDE0cHg7XHJcblxyXG5gO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgU21hbGxSb2FkQmdDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE0LjIlO1xyXG4gIHRvcDogNTAuNCU7XHJcbiAgbGVmdDogMzMuMzMlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuXHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyNCwgMWZyKTtcclxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg2LCAxZnIpO1xyXG4gIGdhcDogMXB4IDFweDtcclxuXHJcbiAgbWFyZ2luLWxlZnQ6IDdweDtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBDb2Nrcm9hY2hSb2FkQmdDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE0LjIlO1xyXG4gIHRvcDogNTAuNCU7XHJcbiAgbGVmdDogNjYuNjYlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuXHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyNCwgMWZyKTtcclxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg2LCAxZnIpO1xyXG4gIGdhcDogMXB4IDFweDtcclxuXHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5gO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBCZWFkUm9hZEJnQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDUwJTtcclxuICBoZWlnaHQ6IDMzLjIyJTtcclxuXHJcbiAgdG9wOiA2NiU7XHJcbiAgbGVmdDogMDtcclxuICBtYXJnaW4tbGVmdDogMTRweDtcclxuXHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxNiwgMWZyKTtcclxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg2LCAxZnIpO1xyXG4gIGdhcDogMXB4IDFweDtcclxuXHJcblxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IEJlYWRSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6ICA1MCU7XHJcbiAgaGVpZ2h0OiAzNS4yMiU7XHJcblxyXG4gIHRvcDogNjUlO1xyXG4gIGxlZnQ6IDA7XHJcbiAgbWFyZ2luLWxlZnQ6IDE0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xyXG4gIGN1cnNvcjogem9vbS1pbjtcclxuXHJcbiAgPiBzdmcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuYDtcclxuXHJcblxyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBTbWFsbFJvYWRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE1JTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xyXG4gIGN1cnNvcjogem9vbS1pbjtcclxuXHJcbiAgPiBzdmcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuICB0b3A6IDUwJTtcclxuICBsZWZ0OiAzMy4zMyU7XHJcbiAgZmxleDogbm9uZTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDdweDtcclxuXHJcbmA7XHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IENvY2tyb2FjaFJvYWRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE1JTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xyXG4gIGN1cnNvcjogem9vbS1pbjtcclxuXHJcbiAgPiBzdmcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuICB0b3A6IDUwJTtcclxuICBsZWZ0OiA2Ni42NiU7XHJcbiAgZmxleDogbm9uZTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5cclxuXHJcbmA7XHJcblxyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBSb2FkUHJldmlld0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA1JTtcclxuICBoZWlnaHQ6IDIyJTtcclxuXHJcbiAgdG9wOiA2MCU7XHJcbiAgbGVmdDogMzMuMzMlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTdGF0c0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA3JTtcclxuICBoZWlnaHQ6IDIyJTtcclxuXHJcbiAgdG9wOiA2MCU7XHJcbiAgbGVmdDogNDMuMzMlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTdGF0aXN0aWNzQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDQ4LjM1JTtcclxuICBoZWlnaHQ6IDE4LjIlO1xyXG5cclxuICB0b3A6IDgxJTtcclxuICByaWdodDogMCU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuXHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5gO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBQbGF5ZXJIYW5kc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxNSU7XHJcbiAgaGVpZ2h0OiAxMyU7XHJcblxyXG4gIHRvcDogMjQlO1xyXG4gIGxlZnQ6IDE2JTtcclxuICBtYXJnaW4tcmlnaHQ6IDE0cHg7XHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBCYW5rZXJIYW5kc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxNSU7XHJcbiAgaGVpZ2h0OiAxMyU7XHJcblxyXG4gIHRvcDogMjQlO1xyXG4gIGxlZnQ6IDcwJTtcclxuXHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgUGxheWVySGFuZHNIYW5kc0ZsZXggPSBzdHlsZWQuZGl2YFxyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4yN3MgbGluZWFyIDBzO1xyXG4gICAgcGVyc3BlY3RpdmU6IDEwMDBweDtcclxuICAgIHBhZGRpbmc6IDJweCAwcHg7XHJcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBCYW5rZXJIYW5kc0hhbmRzRmxleCA9IHN0eWxlZC5kaXZgXHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI3cyBsaW5lYXIgMHM7XHJcbiAgICBwZXJzcGVjdGl2ZTogMTAwMHB4O1xyXG4gICAgcGFkZGluZzogMnB4IDBweDtcclxuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IFJlc3VsdE1lc3NhZ2VDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHRvcDogNDAlO1xyXG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8gLHNhbnMtc2VyaWY7XHJcbiAgZm9udC1zdHlsZTpub3JtYWw7XHJcbiAgZm9udC1zdHJldGNoOm5vcm1hbDtcclxuICBsaW5lLWhlaWdodDpub3JtYWw7XHJcbiAgbGV0dGVyLXNwYWNpbmc6bm9ybWFsO1xyXG4gIGZvbnQtc2l6ZToxNnB4ICFpbXBvcnRhbnQ7XHJcbiAgZm9udC13ZWlnaHQ6OTAwO1xyXG4gIHRleHQtc2hhZG93OjAgMCAxcHggcmdiYSgwLDAsMCwwLjYpO1xyXG5cclxuICBjb2xvcjogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XHJcbiAgZGlzcGxheTpmbGV4O1xyXG4gIGZsZXgtZmxvdzpjb2x1bW4gbm93cmFwO1xyXG4gIHdoaXRlLXNwYWNlOm5vd3JhcDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOmNlbnRlcjtcclxuICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XHJcbiAgd2lkdGg6IGF1dG87XHJcbiAgcGFkZGluZy10b3A6MjBweDtcclxuICBwYWRkaW5nLWJvdHRvbToyMHB4O1xyXG4gIGFuaW1hdGlvbjogJHtmYWRlSW5BbmltYXRpb259ICR7VFJBTlNJVElPTl9USU1FfXMgbGluZWFyO1xyXG5cclxuICBtYXJnaW4tbGVmdDogMzAlO1xyXG4gIG1hcmdpbi1yaWdodDogMzAlO1xyXG5cclxuXHJcblxyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgU3RhdHVzQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDQwMHB4O1xyXG4gIHRvcDogMCU7XHJcbiAgbWFyZ2luOiAwIDQwJTtcclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IFN0YXR1c1RpdGxlID0gc3R5bGVkLmRpdmBcclxuICB3aWR0aDogYXV0bztcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgZm9udC1zaXplOiA0MHB4O1xyXG5gO1xyXG5cclxuXHJcblxyXG5jb25zdCBtYWluQmV0c0xhYmVsID0gY3NzYFxyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgbWFpbkJldHNMYWJlbENsYXNzTmFtZSA9IGNzc2BcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuYDtcclxuXHJcblxyXG5jb25zdCBwbGF5ZXJUcmFuc3BhcmVudCA9IHRpbnljb2xvcihQTEFZRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDApXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IHBsYXllck1lZCA9IHRpbnljb2xvcihQTEFZRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDAuNjUpXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IHBsYXllckZ1bGwgPSB0aW55Y29sb3IoUExBWUVSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwLjkpXHJcbiAgLnRvU3RyaW5nKCk7XHJcblxyXG5jb25zdCBiYW5rZXJUcmFuc3BhcmVudCA9IHRpbnljb2xvcihCQU5LRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDApXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IGJhbmtlck1lZCA9IHRpbnljb2xvcihCQU5LRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDAuNjUpXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IGJhbmtlckZ1bGwgPSB0aW55Y29sb3IoQkFOS0VSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwLjkpXHJcbiAgLnRvU3RyaW5nKCk7XHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IHBsYXllckJhY2tncm91bmQgPSBjc3NgXHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAzMyU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudChcclxuICAgICAgICAgIHRvIGxlZnQsXHJcbiAgICAgICAgICAke3BsYXllclRyYW5zcGFyZW50fSxcclxuICAgICAgICAgICR7cGxheWVyTWVkfSAxNiUsXHJcbiAgICAgICAgICAke3BsYXllckZ1bGx9IDUwJSxcclxuICAgICAgICAgICR7cGxheWVyTWVkfSA4NCUsXHJcbiAgICAgICAgICAke3BsYXllclRyYW5zcGFyZW50fVxyXG4gICk7XHJcblxyXG4gIHNwYW4ge1xyXG4gICAgbWFyZ2luLXRvcDogMnB4O1xyXG4gICAgZm9udC1mYW1pbHk6IFJvYm90bztcclxuICAgIGZvbnQtc2l6ZTogNDBweDtcclxuICAgIGNvbG9yOiAjZmZiO1xyXG4gICAgcGFkZGluZy1sZWZ0OiA0cHg7XHJcbiAgfVxyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBiYW5rZXJCYWNrZ3JvdW5kID0gY3NzYFxyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMzMlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoXHJcbiAgICAgICAgICB0byBsZWZ0LFxyXG4gICAgICAgICAgJHtiYW5rZXJUcmFuc3BhcmVudH0sXHJcbiAgICAgICAgICAke2Jhbmtlck1lZH0gMTYlLFxyXG4gICAgICAgICAgJHtiYW5rZXJGdWxsfSA1MCUsXHJcbiAgICAgICAgICAke2Jhbmtlck1lZH0gODQlLFxyXG4gICAgICAgICAgJHtiYW5rZXJUcmFuc3BhcmVudH1cclxuICApO1xyXG5cclxuICBzcGFuIHtcclxuICAgIG1hcmdpbi10b3A6IDJweDtcclxuICAgIGZvbnQtZmFtaWx5OiBSb2JvdG87XHJcbiAgICBmb250LXNpemU6IDQwcHg7XHJcbiAgICBjb2xvcjogI2ZmYjtcclxuICAgIHBhZGRpbmctbGVmdDogNHB4O1xyXG4gIH1cclxuXHJcbmA7Il19 */\"));\nconst GameHeader = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk22\",\n  label: \"GameHeader\"\n})(\"position:absolute;margin-left:610px;margin-top:3px;width:709px;height:202px;scale:1;background-image:url(\", _assets_images_BaccaratName_png__WEBPACK_IMPORTED_MODULE_6__[\"default\"], \");background-repeat:no-repeat;background-size:cover;background-position:top;\" + ( false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\nconst MainContainer = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk21\",\n  label: \"MainContainer\"\n})( false ? 0 : {\n  name: \"15n8k5q\",\n  styles: \"position:absolute;width:77%;height:380px;top:35%;left:12%\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc3R5bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd1R1QyIsImZpbGUiOiJDOlxcVXNlcnNcXFR5a2hlXFxlbGVjdHJvbmFwcHNcXHR5a2hlLWVsZWN0cm9uLWFwcHMtYmFjY2FyYXRcXHNyY1xccmVuZGVyZXJcXGJhY2NhcmF0XFxwbGF5ZXJcXHZpZXdzXFxHYW1lQm9hcmRcXHN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMgfSBmcm9tIFwiQGVtb3Rpb24vY3NzXCI7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xyXG5pbXBvcnQgeyBoZXgycmdiYSB9IGZyb20gXCIuLi8uLi8uLi90eWtoZS91dGlsc1wiO1xyXG5pbXBvcnQgdGlueWNvbG9yIGZyb20gJ3Rpbnljb2xvcjInO1xyXG5cclxuXHJcbmltcG9ydCB7IHRoZW1lIH0gZnJvbSBcIi4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcFwiO1xyXG5leHBvcnQgY29uc3QgSEVBREVSX0hFSUdIVCA9IDYwO1xyXG5cclxuY29uc3QgeyBwYWxldHRlLCB0aW50cywgfSA9IHRoZW1lO1xyXG5cclxuXHJcblxyXG5pbXBvcnQgYmdJbWFnZSBmcm9tICcuLi8uLi9hc3NldHMvaW1hZ2VzL2JnLnBuZydcclxuaW1wb3J0IGdhbWVOYW1lSW1nIGZyb20gJy4uLy4uL2Fzc2V0cy9pbWFnZXMvQmFjY2FyYXROYW1lLnBuZydcclxuaW1wb3J0IGdvbGRlbkJvcmRlckltZyBmcm9tICcuLi8uLi9hc3NldHMvaW1hZ2VzL0JpZ1NjcmVlbkJvcmRlci5wbmcnXHJcblxyXG5pbXBvcnQgQmFua2VyIGZyb20gJy4uLy4uL2Fzc2V0cy9pbWFnZXMvQmFua2VyLnBuZyc7XHJcbmltcG9ydCBQbGF5ZXIgZnJvbSAnLi4vLi4vYXNzZXRzL2ltYWdlcy9QbGF5ZXIucG5nJztcclxuXHJcbmltcG9ydCB7IFVJX0NPTkZJRyB9IGZyb20gXCIuLi8uLi91aUNvbmZpZ1wiO1xyXG5cclxuY29uc3Qge1xyXG4gIENPTE9SUzogeyBQTEFZRVJfQ09MT1IsIEJBTktFUl9DT0xPUn0sXHJcbn0gPSBVSV9DT05GSUc7XHJcblxyXG5cclxuY29uc3QgVFJBTlNJVElPTl9USU1FID0gMC4yO1xyXG5cclxuXHJcbmNvbnN0IHByb2dyZXNzQmFyS2V5ZnJhbWUgPSBrZXlmcmFtZXNgXHJcbiAgZnJvbSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlWCh2YXIoLS1yZW1haW5pbmcpKTtcclxuICB9XHJcbiAgdG8ge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZVgoMCk7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHByb2dyZXNzQmFyQW5pbWF0aW9uID0gY3NzYFxyXG4gICY6OmJlZm9yZSB7XHJcbiAgICBhbmltYXRpb246ICR7cHJvZ3Jlc3NCYXJLZXlmcmFtZX0gdmFyKC0tZHVyYXRpb24pIGxpbmVhcjtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgZmFkZUluQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxyXG4gIGZyb20ge1xyXG4gICAgb3BhY2l0eTogMDtcclxuICB9XHJcbiAgdG8ge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcbmA7XHJcblxyXG5jb25zdCBwdWxzZUFuaW1hdGlvbktleWZyYW1lID0gKGNvbG9yKSA9PiBrZXlmcmFtZXNgXHJcbiAgdG8ge1xyXG4gICAgZmlsbC1vcGFjaXR5OiAwLjg1O1xyXG4gICAgZmlsbDogJHtjb2xvcn07XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgZ2V0QW5pbWF0aW9uID0gKGNvbG9yKSA9PiBjc3NgXHJcbiAgYW5pbWF0aW9uOiAke3B1bHNlQW5pbWF0aW9uS2V5ZnJhbWUoY29sb3IpfSAwLjMzcyBhbHRlcm5hdGUgaW5maW5pdGU7XHJcbmA7XHJcblxyXG5jb25zdCBQTEFZRVJfSElHSExJR0hUX0NPTE9SID0gJyM3OUM5RkYnO1xyXG5jb25zdCBCQU5LRVJfSElHSExJR0hUX0NPTE9SID0gJyNGRjQ4NTEnO1xyXG5jb25zdCBUSUVfSElHSExJR0hUX0NPTE9SID0gJyM1NWZiNTcnO1xyXG5jb25zdCBTVVBFUlNJWF9ISUdIVExJR0hUX0NPTE9SID0gJyNCNkMyREEnO1xyXG5jb25zdCBwbGF5ZXJBbmltYXRpb24gPSBnZXRBbmltYXRpb24oUExBWUVSX0hJR0hMSUdIVF9DT0xPUik7XHJcbmNvbnN0IGJhbmtlckFuaW1hdGlvbiA9IGdldEFuaW1hdGlvbihCQU5LRVJfSElHSExJR0hUX0NPTE9SKTtcclxuY29uc3QgdGllQW5pbWF0aW9uID0gZ2V0QW5pbWF0aW9uKFRJRV9ISUdITElHSFRfQ09MT1IpO1xyXG5jb25zdCBzdWl0ZWRUaWVBbmltYXRpb24gPSBnZXRBbmltYXRpb24oVElFX0hJR0hMSUdIVF9DT0xPUik7XHJcbmNvbnN0IHN1cGVyU2l4QW5pbWF0aW9uID0gZ2V0QW5pbWF0aW9uKFNVUEVSU0lYX0hJR0hUTElHSFRfQ09MT1IpO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBwbGF5ZXJQdWxzZUNvbnRhaW5lciA9IGNzc2BcclxuICAjYmV0LXBsYXllciB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtwbGF5ZXJBbmltYXRpb259O1xyXG4gICAgfTtcclxuICB9XHJcbiAgI2JldC1kcmFnb24sICNiZXQtYm93bGVyIHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke2JhbmtlckFuaW1hdGlvbn07XHJcbiAgICB9O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBwbGF5ZXJQYWlyUHVsc2VDb250YWluZXIgPSBjc3NgXHJcbiAgI2JldC1wbGF5ZXItcGFpciwgI2JldC1uYXR1cmFsLXBsYXllciB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtwbGF5ZXJBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBzdXBlclNpeFB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtc3VwZXItc2l4IHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke3N1cGVyU2l4QW5pbWF0aW9ufTtcclxuICAgIH1cclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgYmFua2VyUHVsc2VDb250YWluZXIgPSBjc3NgXHJcbiAgI2JldC1iYW5rZXIge1xyXG4gICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICR7YmFua2VyQW5pbWF0aW9ufTtcclxuICAgIH1cclxuICB9O1xyXG4gICNiZXQtdGlnZXIsICNiZXQtYmF0c21hbiB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtwbGF5ZXJBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuZXhwb3J0IGNvbnN0IGJhbmtlclBhaXJQdWxzZUNvbnRhaW5lciA9IGNzc2BcclxuICAjYmV0LWJhbmtlci1wYWlyLCAjYmV0LW5hdHVyYWwtYmFua2VyIHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke2JhbmtlckFuaW1hdGlvbn07XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHRpZVB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtdGllIHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke3RpZUFuaW1hdGlvbn07XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHN1aXRlZFRpZVB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtc3VpdGVkLXRpZSB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtzdWl0ZWRUaWVBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbmFjdGl2ZUdhbWVCb2FyZCA9IGNzc2BcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNDMlKTtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbmFjdGl2ZUdyaWQgPSBjc3NgXHJcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgICAqIHtcclxuICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgfSAgIFxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHRpbHRlZEdyaWQgPSBjc3NgXHJcbiAgQG1lZGlhIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuNykgcm90YXRlWCg2MGRlZyk7XHJcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiBib3R0b207XHJcbiAgICBtYXgtd2lkdGg6IDgwMHB4O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBtb2JpbGVHYW1lQm9hcmQgPSBjc3NgXHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuXHJcbiAgIFtpZF49J2JldC0nXSB7XHJcbiAgICAmOmhvdmVyLFxyXG4gICAgJjphY3RpdmUge1xyXG4gICAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgICBmaWxsLW9wYWNpdHk6IDAuNjU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBtZWRpYSAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzpoaWRkZW47XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzIGxpbmVhcjtcclxuXHJcbiAgI2JldC1pY29uIHtcclxuICAgIHBvaW50ZXItZXZlbnRzOiBhbGw7XHJcbiAgfVxyXG5cclxuICBbaWRePSdiZXQtJ10ge1xyXG4gICAgJi5kaXNhYmxlZCB7XHJcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgfVxyXG4gICAgJjpob3ZlcixcclxuICAgICY6YWN0aXZlIHtcclxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgICBmaWxsLW9wYWNpdHk6IDAuODU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG5gO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgSGVhZGVyID0gc3R5bGVkLmhlYWRlcmBcclxuICBoZWlnaHQ6ICR7SEVBREVSX0hFSUdIVH1weDtcclxuICB3aWR0aDogMTAwJTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgYmFja2dyb3VuZDogJHtoZXgycmdiYShwYWxldHRlLnByaW1hcnksIHRpbnRzLnByaW1hcnkpfTtcclxuICBjb2xvcjogJHtwYWxldHRlLmZvcmVncm91bmR9O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBmb250LXNpemU6IDM0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMjdzIGxpbmVhciwgdHJhbnNmb3JtIDAuMjdzIGxpbmVhcjtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBoZWFkZXJDbGFzc05hbWUgPSBjc3NgXHJcbiAgLS1yZW1haW5pbmc6IDE7XHJcbiAgLS1kdXJhdGlvbjogMTBzO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBjb2xvcjogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XHJcbiAgZmlsbDogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBmb250LXNpemU6IDM0cHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgJHtoZXgycmdiYShwYWxldHRlLnByaW1hcnksIHRpbnRzLnByaW1hcnkpfTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgJjpiZWZvcmUge1xyXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdDtcclxuICAgIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3IpO1xyXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAxcyBsaW5lYXIsIHRyYW5zZm9ybSB2YXIoLS1kdXJhdGlvbikgbGluZWFyO1xyXG4gICAgei1pbmRleDogLTE7XHJcbiAgfVxyXG5gO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgQmFua2VySW1nID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgaGVpZ2h0OiAxMiU7XHJcbiAgd2lkdGg6IDE4JTtcclxuICB0b3A6IDUlO1xyXG4gIGxlZnQ6IDY4JTtcclxuXHJcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7QmFua2VyfSk7XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xyXG5gXHJcbmV4cG9ydCBjb25zdCBQbGF5ZXJJbWcgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBoZWlnaHQ6IDEyJTtcclxuICB3aWR0aDogMTQlO1xyXG4gIHRvcDogNSU7XHJcbiAgbGVmdDogMTYlO1xyXG5cclxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHtQbGF5ZXJ9KTtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3A7XHJcbmBcclxuXHJcblxyXG5leHBvcnQgY29uc3QgQ29udGFpbmVyR29sZGVuQm9yZGVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgbWFyZ2luLWxlZnQ6IDBweDtcclxuICBtYXJnaW4tdG9wOiAwcHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHNjYWxlOiAxO1xyXG5cclxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHtnb2xkZW5Cb3JkZXJJbWd9KTtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgR2FtZUhlYWRlciA9IHN0eWxlZC5kaXZgXHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBtYXJnaW4tbGVmdDogNjEwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAzcHg7XHJcbiAgICB3aWR0aDogNzA5cHg7XHJcbiAgICBoZWlnaHQ6IDIwMnB4O1xyXG4gICAgc2NhbGU6IDE7XHJcblxyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7Z2FtZU5hbWVJbWd9KTtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgTWFpbkNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA3NyU7XHJcbiAgaGVpZ2h0OiAzODBweDtcclxuXHJcbiAgdG9wOiAzNSU7XHJcbiAgbGVmdDogMTIlO1xyXG5cclxuXHJcbiAgYFxyXG5leHBvcnQgY29uc3QgQmV0R3JpZENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIHBlcnNwZWN0aXZlOiAxMDAwcHg7XHJcblxyXG4gIGBcclxuXHJcblxyXG5leHBvcnQgY29uc3QgQmlnUm9hZEJnQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDI4cHgpO1xyXG4gIGhlaWdodDogMjkuMiU7XHJcbiAgdG9wOiAxOS40JTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMzYsIDFmcik7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNiwgMWZyKTtcclxuICBnYXA6IDFweCAxcHg7XHJcblxyXG4gIG1hcmdpbi1sZWZ0OiAxNHB4O1xyXG4gIG1hcmdpbi1yaWdodDogMTRweDtcclxuXHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBCaWdSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDI4cHgpO1xyXG4gIGhlaWdodDogMzAlO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgZGlzcGxheTogZmxleDtcclxuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBsaW5lYXI7XHJcbiAgY3Vyc29yOiB6b29tLWluO1xyXG5cclxuICA+IHN2ZyB7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9XHJcblxyXG4gIHRvcDogMTklO1xyXG4gIGZsZXg6IG5vbmU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG5cclxuXHJcbiAgbWFyZ2luLWxlZnQ6IDE0cHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5cclxuYDtcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IEJpZ0V5ZVJvYWRCZ0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiBjYWxjKDMzLjMzJSAtIDE0cHgpO1xyXG4gIGhlaWdodDogMTQuMiU7XHJcbiAgdG9wOiA1MC40JTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMjQsIDFmcik7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNiwgMWZyKTtcclxuICBnYXA6IDFweCAxcHg7XHJcblxyXG4gIG1hcmdpbi1sZWZ0OiAxNHB4O1xyXG4gIFxyXG5gO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBCaWdFeWVSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMzMuMzMlIC0gMTRweCk7XHJcbiAgaGVpZ2h0OiAxNSU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGxpbmVhcjtcclxuICBjdXJzb3I6IHpvb20taW47XHJcblxyXG4gID4gc3ZnIHtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgdG9wOiA1MCU7XHJcbiAgZmxleDogbm9uZTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDE0cHg7XHJcblxyXG5gO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgU21hbGxSb2FkQmdDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE0LjIlO1xyXG4gIHRvcDogNTAuNCU7XHJcbiAgbGVmdDogMzMuMzMlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuXHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyNCwgMWZyKTtcclxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg2LCAxZnIpO1xyXG4gIGdhcDogMXB4IDFweDtcclxuXHJcbiAgbWFyZ2luLWxlZnQ6IDdweDtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBDb2Nrcm9hY2hSb2FkQmdDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE0LjIlO1xyXG4gIHRvcDogNTAuNCU7XHJcbiAgbGVmdDogNjYuNjYlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuXHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyNCwgMWZyKTtcclxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg2LCAxZnIpO1xyXG4gIGdhcDogMXB4IDFweDtcclxuXHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5gO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBCZWFkUm9hZEJnQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDUwJTtcclxuICBoZWlnaHQ6IDMzLjIyJTtcclxuXHJcbiAgdG9wOiA2NiU7XHJcbiAgbGVmdDogMDtcclxuICBtYXJnaW4tbGVmdDogMTRweDtcclxuXHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxNiwgMWZyKTtcclxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg2LCAxZnIpO1xyXG4gIGdhcDogMXB4IDFweDtcclxuXHJcblxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IEJlYWRSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6ICA1MCU7XHJcbiAgaGVpZ2h0OiAzNS4yMiU7XHJcblxyXG4gIHRvcDogNjUlO1xyXG4gIGxlZnQ6IDA7XHJcbiAgbWFyZ2luLWxlZnQ6IDE0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xyXG4gIGN1cnNvcjogem9vbS1pbjtcclxuXHJcbiAgPiBzdmcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuYDtcclxuXHJcblxyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBTbWFsbFJvYWRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE1JTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xyXG4gIGN1cnNvcjogem9vbS1pbjtcclxuXHJcbiAgPiBzdmcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuICB0b3A6IDUwJTtcclxuICBsZWZ0OiAzMy4zMyU7XHJcbiAgZmxleDogbm9uZTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDdweDtcclxuXHJcbmA7XHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IENvY2tyb2FjaFJvYWRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE1JTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xyXG4gIGN1cnNvcjogem9vbS1pbjtcclxuXHJcbiAgPiBzdmcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuICB0b3A6IDUwJTtcclxuICBsZWZ0OiA2Ni42NiU7XHJcbiAgZmxleDogbm9uZTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5cclxuXHJcbmA7XHJcblxyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBSb2FkUHJldmlld0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA1JTtcclxuICBoZWlnaHQ6IDIyJTtcclxuXHJcbiAgdG9wOiA2MCU7XHJcbiAgbGVmdDogMzMuMzMlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTdGF0c0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA3JTtcclxuICBoZWlnaHQ6IDIyJTtcclxuXHJcbiAgdG9wOiA2MCU7XHJcbiAgbGVmdDogNDMuMzMlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTdGF0aXN0aWNzQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDQ4LjM1JTtcclxuICBoZWlnaHQ6IDE4LjIlO1xyXG5cclxuICB0b3A6IDgxJTtcclxuICByaWdodDogMCU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuXHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5gO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBQbGF5ZXJIYW5kc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxNSU7XHJcbiAgaGVpZ2h0OiAxMyU7XHJcblxyXG4gIHRvcDogMjQlO1xyXG4gIGxlZnQ6IDE2JTtcclxuICBtYXJnaW4tcmlnaHQ6IDE0cHg7XHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBCYW5rZXJIYW5kc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxNSU7XHJcbiAgaGVpZ2h0OiAxMyU7XHJcblxyXG4gIHRvcDogMjQlO1xyXG4gIGxlZnQ6IDcwJTtcclxuXHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgUGxheWVySGFuZHNIYW5kc0ZsZXggPSBzdHlsZWQuZGl2YFxyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4yN3MgbGluZWFyIDBzO1xyXG4gICAgcGVyc3BlY3RpdmU6IDEwMDBweDtcclxuICAgIHBhZGRpbmc6IDJweCAwcHg7XHJcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBCYW5rZXJIYW5kc0hhbmRzRmxleCA9IHN0eWxlZC5kaXZgXHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI3cyBsaW5lYXIgMHM7XHJcbiAgICBwZXJzcGVjdGl2ZTogMTAwMHB4O1xyXG4gICAgcGFkZGluZzogMnB4IDBweDtcclxuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IFJlc3VsdE1lc3NhZ2VDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHRvcDogNDAlO1xyXG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8gLHNhbnMtc2VyaWY7XHJcbiAgZm9udC1zdHlsZTpub3JtYWw7XHJcbiAgZm9udC1zdHJldGNoOm5vcm1hbDtcclxuICBsaW5lLWhlaWdodDpub3JtYWw7XHJcbiAgbGV0dGVyLXNwYWNpbmc6bm9ybWFsO1xyXG4gIGZvbnQtc2l6ZToxNnB4ICFpbXBvcnRhbnQ7XHJcbiAgZm9udC13ZWlnaHQ6OTAwO1xyXG4gIHRleHQtc2hhZG93OjAgMCAxcHggcmdiYSgwLDAsMCwwLjYpO1xyXG5cclxuICBjb2xvcjogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XHJcbiAgZGlzcGxheTpmbGV4O1xyXG4gIGZsZXgtZmxvdzpjb2x1bW4gbm93cmFwO1xyXG4gIHdoaXRlLXNwYWNlOm5vd3JhcDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOmNlbnRlcjtcclxuICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XHJcbiAgd2lkdGg6IGF1dG87XHJcbiAgcGFkZGluZy10b3A6MjBweDtcclxuICBwYWRkaW5nLWJvdHRvbToyMHB4O1xyXG4gIGFuaW1hdGlvbjogJHtmYWRlSW5BbmltYXRpb259ICR7VFJBTlNJVElPTl9USU1FfXMgbGluZWFyO1xyXG5cclxuICBtYXJnaW4tbGVmdDogMzAlO1xyXG4gIG1hcmdpbi1yaWdodDogMzAlO1xyXG5cclxuXHJcblxyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgU3RhdHVzQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDQwMHB4O1xyXG4gIHRvcDogMCU7XHJcbiAgbWFyZ2luOiAwIDQwJTtcclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IFN0YXR1c1RpdGxlID0gc3R5bGVkLmRpdmBcclxuICB3aWR0aDogYXV0bztcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgZm9udC1zaXplOiA0MHB4O1xyXG5gO1xyXG5cclxuXHJcblxyXG5jb25zdCBtYWluQmV0c0xhYmVsID0gY3NzYFxyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgbWFpbkJldHNMYWJlbENsYXNzTmFtZSA9IGNzc2BcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuYDtcclxuXHJcblxyXG5jb25zdCBwbGF5ZXJUcmFuc3BhcmVudCA9IHRpbnljb2xvcihQTEFZRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDApXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IHBsYXllck1lZCA9IHRpbnljb2xvcihQTEFZRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDAuNjUpXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IHBsYXllckZ1bGwgPSB0aW55Y29sb3IoUExBWUVSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwLjkpXHJcbiAgLnRvU3RyaW5nKCk7XHJcblxyXG5jb25zdCBiYW5rZXJUcmFuc3BhcmVudCA9IHRpbnljb2xvcihCQU5LRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDApXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IGJhbmtlck1lZCA9IHRpbnljb2xvcihCQU5LRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDAuNjUpXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IGJhbmtlckZ1bGwgPSB0aW55Y29sb3IoQkFOS0VSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwLjkpXHJcbiAgLnRvU3RyaW5nKCk7XHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IHBsYXllckJhY2tncm91bmQgPSBjc3NgXHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAzMyU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudChcclxuICAgICAgICAgIHRvIGxlZnQsXHJcbiAgICAgICAgICAke3BsYXllclRyYW5zcGFyZW50fSxcclxuICAgICAgICAgICR7cGxheWVyTWVkfSAxNiUsXHJcbiAgICAgICAgICAke3BsYXllckZ1bGx9IDUwJSxcclxuICAgICAgICAgICR7cGxheWVyTWVkfSA4NCUsXHJcbiAgICAgICAgICAke3BsYXllclRyYW5zcGFyZW50fVxyXG4gICk7XHJcblxyXG4gIHNwYW4ge1xyXG4gICAgbWFyZ2luLXRvcDogMnB4O1xyXG4gICAgZm9udC1mYW1pbHk6IFJvYm90bztcclxuICAgIGZvbnQtc2l6ZTogNDBweDtcclxuICAgIGNvbG9yOiAjZmZiO1xyXG4gICAgcGFkZGluZy1sZWZ0OiA0cHg7XHJcbiAgfVxyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBiYW5rZXJCYWNrZ3JvdW5kID0gY3NzYFxyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMzMlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoXHJcbiAgICAgICAgICB0byBsZWZ0LFxyXG4gICAgICAgICAgJHtiYW5rZXJUcmFuc3BhcmVudH0sXHJcbiAgICAgICAgICAke2Jhbmtlck1lZH0gMTYlLFxyXG4gICAgICAgICAgJHtiYW5rZXJGdWxsfSA1MCUsXHJcbiAgICAgICAgICAke2Jhbmtlck1lZH0gODQlLFxyXG4gICAgICAgICAgJHtiYW5rZXJUcmFuc3BhcmVudH1cclxuICApO1xyXG5cclxuICBzcGFuIHtcclxuICAgIG1hcmdpbi10b3A6IDJweDtcclxuICAgIGZvbnQtZmFtaWx5OiBSb2JvdG87XHJcbiAgICBmb250LXNpemU6IDQwcHg7XHJcbiAgICBjb2xvcjogI2ZmYjtcclxuICAgIHBhZGRpbmctbGVmdDogNHB4O1xyXG4gIH1cclxuXHJcbmA7Il19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst BetGridContainer = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk20\",\n  label: \"BetGridContainer\"\n})( false ? 0 : {\n  name: \"afnon7\",\n  styles: \"position:relative;width:100%;height:100%;display:flex;align-items:center;justify-content:center;perspective:1000px\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst BigRoadBgContainer = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk19\",\n  label: \"BigRoadBgContainer\"\n})( false ? 0 : {\n  name: \"azb4rj\",\n  styles: \"position:absolute;width:calc(100% - 28px);height:29.2%;top:19.4%;margin-bottom:4px;display:grid;grid-template-columns:repeat(36, 1fr);grid-template-rows:repeat(6, 1fr);gap:1px 1px;margin-left:14px;margin-right:14px\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc3R5bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK1U0QyIsImZpbGUiOiJDOlxcVXNlcnNcXFR5a2hlXFxlbGVjdHJvbmFwcHNcXHR5a2hlLWVsZWN0cm9uLWFwcHMtYmFjY2FyYXRcXHNyY1xccmVuZGVyZXJcXGJhY2NhcmF0XFxwbGF5ZXJcXHZpZXdzXFxHYW1lQm9hcmRcXHN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMgfSBmcm9tIFwiQGVtb3Rpb24vY3NzXCI7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xyXG5pbXBvcnQgeyBoZXgycmdiYSB9IGZyb20gXCIuLi8uLi8uLi90eWtoZS91dGlsc1wiO1xyXG5pbXBvcnQgdGlueWNvbG9yIGZyb20gJ3Rpbnljb2xvcjInO1xyXG5cclxuXHJcbmltcG9ydCB7IHRoZW1lIH0gZnJvbSBcIi4uLy4uLy4uL3R5a2hlL2Jvb3RzdHJhcFwiO1xyXG5leHBvcnQgY29uc3QgSEVBREVSX0hFSUdIVCA9IDYwO1xyXG5cclxuY29uc3QgeyBwYWxldHRlLCB0aW50cywgfSA9IHRoZW1lO1xyXG5cclxuXHJcblxyXG5pbXBvcnQgYmdJbWFnZSBmcm9tICcuLi8uLi9hc3NldHMvaW1hZ2VzL2JnLnBuZydcclxuaW1wb3J0IGdhbWVOYW1lSW1nIGZyb20gJy4uLy4uL2Fzc2V0cy9pbWFnZXMvQmFjY2FyYXROYW1lLnBuZydcclxuaW1wb3J0IGdvbGRlbkJvcmRlckltZyBmcm9tICcuLi8uLi9hc3NldHMvaW1hZ2VzL0JpZ1NjcmVlbkJvcmRlci5wbmcnXHJcblxyXG5pbXBvcnQgQmFua2VyIGZyb20gJy4uLy4uL2Fzc2V0cy9pbWFnZXMvQmFua2VyLnBuZyc7XHJcbmltcG9ydCBQbGF5ZXIgZnJvbSAnLi4vLi4vYXNzZXRzL2ltYWdlcy9QbGF5ZXIucG5nJztcclxuXHJcbmltcG9ydCB7IFVJX0NPTkZJRyB9IGZyb20gXCIuLi8uLi91aUNvbmZpZ1wiO1xyXG5cclxuY29uc3Qge1xyXG4gIENPTE9SUzogeyBQTEFZRVJfQ09MT1IsIEJBTktFUl9DT0xPUn0sXHJcbn0gPSBVSV9DT05GSUc7XHJcblxyXG5cclxuY29uc3QgVFJBTlNJVElPTl9USU1FID0gMC4yO1xyXG5cclxuXHJcbmNvbnN0IHByb2dyZXNzQmFyS2V5ZnJhbWUgPSBrZXlmcmFtZXNgXHJcbiAgZnJvbSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlWCh2YXIoLS1yZW1haW5pbmcpKTtcclxuICB9XHJcbiAgdG8ge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZVgoMCk7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHByb2dyZXNzQmFyQW5pbWF0aW9uID0gY3NzYFxyXG4gICY6OmJlZm9yZSB7XHJcbiAgICBhbmltYXRpb246ICR7cHJvZ3Jlc3NCYXJLZXlmcmFtZX0gdmFyKC0tZHVyYXRpb24pIGxpbmVhcjtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgZmFkZUluQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxyXG4gIGZyb20ge1xyXG4gICAgb3BhY2l0eTogMDtcclxuICB9XHJcbiAgdG8ge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcbmA7XHJcblxyXG5jb25zdCBwdWxzZUFuaW1hdGlvbktleWZyYW1lID0gKGNvbG9yKSA9PiBrZXlmcmFtZXNgXHJcbiAgdG8ge1xyXG4gICAgZmlsbC1vcGFjaXR5OiAwLjg1O1xyXG4gICAgZmlsbDogJHtjb2xvcn07XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgZ2V0QW5pbWF0aW9uID0gKGNvbG9yKSA9PiBjc3NgXHJcbiAgYW5pbWF0aW9uOiAke3B1bHNlQW5pbWF0aW9uS2V5ZnJhbWUoY29sb3IpfSAwLjMzcyBhbHRlcm5hdGUgaW5maW5pdGU7XHJcbmA7XHJcblxyXG5jb25zdCBQTEFZRVJfSElHSExJR0hUX0NPTE9SID0gJyM3OUM5RkYnO1xyXG5jb25zdCBCQU5LRVJfSElHSExJR0hUX0NPTE9SID0gJyNGRjQ4NTEnO1xyXG5jb25zdCBUSUVfSElHSExJR0hUX0NPTE9SID0gJyM1NWZiNTcnO1xyXG5jb25zdCBTVVBFUlNJWF9ISUdIVExJR0hUX0NPTE9SID0gJyNCNkMyREEnO1xyXG5jb25zdCBwbGF5ZXJBbmltYXRpb24gPSBnZXRBbmltYXRpb24oUExBWUVSX0hJR0hMSUdIVF9DT0xPUik7XHJcbmNvbnN0IGJhbmtlckFuaW1hdGlvbiA9IGdldEFuaW1hdGlvbihCQU5LRVJfSElHSExJR0hUX0NPTE9SKTtcclxuY29uc3QgdGllQW5pbWF0aW9uID0gZ2V0QW5pbWF0aW9uKFRJRV9ISUdITElHSFRfQ09MT1IpO1xyXG5jb25zdCBzdWl0ZWRUaWVBbmltYXRpb24gPSBnZXRBbmltYXRpb24oVElFX0hJR0hMSUdIVF9DT0xPUik7XHJcbmNvbnN0IHN1cGVyU2l4QW5pbWF0aW9uID0gZ2V0QW5pbWF0aW9uKFNVUEVSU0lYX0hJR0hUTElHSFRfQ09MT1IpO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBwbGF5ZXJQdWxzZUNvbnRhaW5lciA9IGNzc2BcclxuICAjYmV0LXBsYXllciB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtwbGF5ZXJBbmltYXRpb259O1xyXG4gICAgfTtcclxuICB9XHJcbiAgI2JldC1kcmFnb24sICNiZXQtYm93bGVyIHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke2JhbmtlckFuaW1hdGlvbn07XHJcbiAgICB9O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBwbGF5ZXJQYWlyUHVsc2VDb250YWluZXIgPSBjc3NgXHJcbiAgI2JldC1wbGF5ZXItcGFpciwgI2JldC1uYXR1cmFsLXBsYXllciB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtwbGF5ZXJBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBzdXBlclNpeFB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtc3VwZXItc2l4IHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke3N1cGVyU2l4QW5pbWF0aW9ufTtcclxuICAgIH1cclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgYmFua2VyUHVsc2VDb250YWluZXIgPSBjc3NgXHJcbiAgI2JldC1iYW5rZXIge1xyXG4gICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICR7YmFua2VyQW5pbWF0aW9ufTtcclxuICAgIH1cclxuICB9O1xyXG4gICNiZXQtdGlnZXIsICNiZXQtYmF0c21hbiB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtwbGF5ZXJBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuZXhwb3J0IGNvbnN0IGJhbmtlclBhaXJQdWxzZUNvbnRhaW5lciA9IGNzc2BcclxuICAjYmV0LWJhbmtlci1wYWlyLCAjYmV0LW5hdHVyYWwtYmFua2VyIHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke2JhbmtlckFuaW1hdGlvbn07XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHRpZVB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtdGllIHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke3RpZUFuaW1hdGlvbn07XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHN1aXRlZFRpZVB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtc3VpdGVkLXRpZSB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtzdWl0ZWRUaWVBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbmFjdGl2ZUdhbWVCb2FyZCA9IGNzc2BcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNDMlKTtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbmFjdGl2ZUdyaWQgPSBjc3NgXHJcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgICAqIHtcclxuICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgfSAgIFxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHRpbHRlZEdyaWQgPSBjc3NgXHJcbiAgQG1lZGlhIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuNykgcm90YXRlWCg2MGRlZyk7XHJcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiBib3R0b207XHJcbiAgICBtYXgtd2lkdGg6IDgwMHB4O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBtb2JpbGVHYW1lQm9hcmQgPSBjc3NgXHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuXHJcbiAgIFtpZF49J2JldC0nXSB7XHJcbiAgICAmOmhvdmVyLFxyXG4gICAgJjphY3RpdmUge1xyXG4gICAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgICBmaWxsLW9wYWNpdHk6IDAuNjU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBtZWRpYSAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzpoaWRkZW47XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzIGxpbmVhcjtcclxuXHJcbiAgI2JldC1pY29uIHtcclxuICAgIHBvaW50ZXItZXZlbnRzOiBhbGw7XHJcbiAgfVxyXG5cclxuICBbaWRePSdiZXQtJ10ge1xyXG4gICAgJi5kaXNhYmxlZCB7XHJcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgfVxyXG4gICAgJjpob3ZlcixcclxuICAgICY6YWN0aXZlIHtcclxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgICBmaWxsLW9wYWNpdHk6IDAuODU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG5gO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgSGVhZGVyID0gc3R5bGVkLmhlYWRlcmBcclxuICBoZWlnaHQ6ICR7SEVBREVSX0hFSUdIVH1weDtcclxuICB3aWR0aDogMTAwJTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgYmFja2dyb3VuZDogJHtoZXgycmdiYShwYWxldHRlLnByaW1hcnksIHRpbnRzLnByaW1hcnkpfTtcclxuICBjb2xvcjogJHtwYWxldHRlLmZvcmVncm91bmR9O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBmb250LXNpemU6IDM0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMjdzIGxpbmVhciwgdHJhbnNmb3JtIDAuMjdzIGxpbmVhcjtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBoZWFkZXJDbGFzc05hbWUgPSBjc3NgXHJcbiAgLS1yZW1haW5pbmc6IDE7XHJcbiAgLS1kdXJhdGlvbjogMTBzO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBjb2xvcjogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XHJcbiAgZmlsbDogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBmb250LXNpemU6IDM0cHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgJHtoZXgycmdiYShwYWxldHRlLnByaW1hcnksIHRpbnRzLnByaW1hcnkpfTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgJjpiZWZvcmUge1xyXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdDtcclxuICAgIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3IpO1xyXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAxcyBsaW5lYXIsIHRyYW5zZm9ybSB2YXIoLS1kdXJhdGlvbikgbGluZWFyO1xyXG4gICAgei1pbmRleDogLTE7XHJcbiAgfVxyXG5gO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgQmFua2VySW1nID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgaGVpZ2h0OiAxMiU7XHJcbiAgd2lkdGg6IDE4JTtcclxuICB0b3A6IDUlO1xyXG4gIGxlZnQ6IDY4JTtcclxuXHJcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7QmFua2VyfSk7XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xyXG5gXHJcbmV4cG9ydCBjb25zdCBQbGF5ZXJJbWcgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBoZWlnaHQ6IDEyJTtcclxuICB3aWR0aDogMTQlO1xyXG4gIHRvcDogNSU7XHJcbiAgbGVmdDogMTYlO1xyXG5cclxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHtQbGF5ZXJ9KTtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3A7XHJcbmBcclxuXHJcblxyXG5leHBvcnQgY29uc3QgQ29udGFpbmVyR29sZGVuQm9yZGVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgbWFyZ2luLWxlZnQ6IDBweDtcclxuICBtYXJnaW4tdG9wOiAwcHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHNjYWxlOiAxO1xyXG5cclxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHtnb2xkZW5Cb3JkZXJJbWd9KTtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgR2FtZUhlYWRlciA9IHN0eWxlZC5kaXZgXHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBtYXJnaW4tbGVmdDogNjEwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAzcHg7XHJcbiAgICB3aWR0aDogNzA5cHg7XHJcbiAgICBoZWlnaHQ6IDIwMnB4O1xyXG4gICAgc2NhbGU6IDE7XHJcblxyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7Z2FtZU5hbWVJbWd9KTtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgTWFpbkNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA3NyU7XHJcbiAgaGVpZ2h0OiAzODBweDtcclxuXHJcbiAgdG9wOiAzNSU7XHJcbiAgbGVmdDogMTIlO1xyXG5cclxuXHJcbiAgYFxyXG5leHBvcnQgY29uc3QgQmV0R3JpZENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIHBlcnNwZWN0aXZlOiAxMDAwcHg7XHJcblxyXG4gIGBcclxuXHJcblxyXG5leHBvcnQgY29uc3QgQmlnUm9hZEJnQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDI4cHgpO1xyXG4gIGhlaWdodDogMjkuMiU7XHJcbiAgdG9wOiAxOS40JTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMzYsIDFmcik7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNiwgMWZyKTtcclxuICBnYXA6IDFweCAxcHg7XHJcblxyXG4gIG1hcmdpbi1sZWZ0OiAxNHB4O1xyXG4gIG1hcmdpbi1yaWdodDogMTRweDtcclxuXHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBCaWdSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDI4cHgpO1xyXG4gIGhlaWdodDogMzAlO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgZGlzcGxheTogZmxleDtcclxuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBsaW5lYXI7XHJcbiAgY3Vyc29yOiB6b29tLWluO1xyXG5cclxuICA+IHN2ZyB7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9XHJcblxyXG4gIHRvcDogMTklO1xyXG4gIGZsZXg6IG5vbmU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG5cclxuXHJcbiAgbWFyZ2luLWxlZnQ6IDE0cHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5cclxuYDtcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IEJpZ0V5ZVJvYWRCZ0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiBjYWxjKDMzLjMzJSAtIDE0cHgpO1xyXG4gIGhlaWdodDogMTQuMiU7XHJcbiAgdG9wOiA1MC40JTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMjQsIDFmcik7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNiwgMWZyKTtcclxuICBnYXA6IDFweCAxcHg7XHJcblxyXG4gIG1hcmdpbi1sZWZ0OiAxNHB4O1xyXG4gIFxyXG5gO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBCaWdFeWVSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMzMuMzMlIC0gMTRweCk7XHJcbiAgaGVpZ2h0OiAxNSU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGxpbmVhcjtcclxuICBjdXJzb3I6IHpvb20taW47XHJcblxyXG4gID4gc3ZnIHtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgdG9wOiA1MCU7XHJcbiAgZmxleDogbm9uZTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDE0cHg7XHJcblxyXG5gO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgU21hbGxSb2FkQmdDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE0LjIlO1xyXG4gIHRvcDogNTAuNCU7XHJcbiAgbGVmdDogMzMuMzMlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuXHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyNCwgMWZyKTtcclxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg2LCAxZnIpO1xyXG4gIGdhcDogMXB4IDFweDtcclxuXHJcbiAgbWFyZ2luLWxlZnQ6IDdweDtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBDb2Nrcm9hY2hSb2FkQmdDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE0LjIlO1xyXG4gIHRvcDogNTAuNCU7XHJcbiAgbGVmdDogNjYuNjYlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuXHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyNCwgMWZyKTtcclxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg2LCAxZnIpO1xyXG4gIGdhcDogMXB4IDFweDtcclxuXHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5gO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBCZWFkUm9hZEJnQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDUwJTtcclxuICBoZWlnaHQ6IDMzLjIyJTtcclxuXHJcbiAgdG9wOiA2NiU7XHJcbiAgbGVmdDogMDtcclxuICBtYXJnaW4tbGVmdDogMTRweDtcclxuXHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxNiwgMWZyKTtcclxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg2LCAxZnIpO1xyXG4gIGdhcDogMXB4IDFweDtcclxuXHJcblxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IEJlYWRSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6ICA1MCU7XHJcbiAgaGVpZ2h0OiAzNS4yMiU7XHJcblxyXG4gIHRvcDogNjUlO1xyXG4gIGxlZnQ6IDA7XHJcbiAgbWFyZ2luLWxlZnQ6IDE0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xyXG4gIGN1cnNvcjogem9vbS1pbjtcclxuXHJcbiAgPiBzdmcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuYDtcclxuXHJcblxyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBTbWFsbFJvYWRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE1JTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xyXG4gIGN1cnNvcjogem9vbS1pbjtcclxuXHJcbiAgPiBzdmcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuICB0b3A6IDUwJTtcclxuICBsZWZ0OiAzMy4zMyU7XHJcbiAgZmxleDogbm9uZTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDdweDtcclxuXHJcbmA7XHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IENvY2tyb2FjaFJvYWRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE1JTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xyXG4gIGN1cnNvcjogem9vbS1pbjtcclxuXHJcbiAgPiBzdmcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuICB0b3A6IDUwJTtcclxuICBsZWZ0OiA2Ni42NiU7XHJcbiAgZmxleDogbm9uZTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5cclxuXHJcbmA7XHJcblxyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBSb2FkUHJldmlld0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA1JTtcclxuICBoZWlnaHQ6IDIyJTtcclxuXHJcbiAgdG9wOiA2MCU7XHJcbiAgbGVmdDogMzMuMzMlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTdGF0c0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA3JTtcclxuICBoZWlnaHQ6IDIyJTtcclxuXHJcbiAgdG9wOiA2MCU7XHJcbiAgbGVmdDogNDMuMzMlO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTdGF0aXN0aWNzQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDQ4LjM1JTtcclxuICBoZWlnaHQ6IDE4LjIlO1xyXG5cclxuICB0b3A6IDgxJTtcclxuICByaWdodDogMCU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuXHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5gO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBQbGF5ZXJIYW5kc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxNSU7XHJcbiAgaGVpZ2h0OiAxMyU7XHJcblxyXG4gIHRvcDogMjQlO1xyXG4gIGxlZnQ6IDE2JTtcclxuICBtYXJnaW4tcmlnaHQ6IDE0cHg7XHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBCYW5rZXJIYW5kc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxNSU7XHJcbiAgaGVpZ2h0OiAxMyU7XHJcblxyXG4gIHRvcDogMjQlO1xyXG4gIGxlZnQ6IDcwJTtcclxuXHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgUGxheWVySGFuZHNIYW5kc0ZsZXggPSBzdHlsZWQuZGl2YFxyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4yN3MgbGluZWFyIDBzO1xyXG4gICAgcGVyc3BlY3RpdmU6IDEwMDBweDtcclxuICAgIHBhZGRpbmc6IDJweCAwcHg7XHJcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBCYW5rZXJIYW5kc0hhbmRzRmxleCA9IHN0eWxlZC5kaXZgXHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI3cyBsaW5lYXIgMHM7XHJcbiAgICBwZXJzcGVjdGl2ZTogMTAwMHB4O1xyXG4gICAgcGFkZGluZzogMnB4IDBweDtcclxuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IFJlc3VsdE1lc3NhZ2VDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHRvcDogNDAlO1xyXG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8gLHNhbnMtc2VyaWY7XHJcbiAgZm9udC1zdHlsZTpub3JtYWw7XHJcbiAgZm9udC1zdHJldGNoOm5vcm1hbDtcclxuICBsaW5lLWhlaWdodDpub3JtYWw7XHJcbiAgbGV0dGVyLXNwYWNpbmc6bm9ybWFsO1xyXG4gIGZvbnQtc2l6ZToxNnB4ICFpbXBvcnRhbnQ7XHJcbiAgZm9udC13ZWlnaHQ6OTAwO1xyXG4gIHRleHQtc2hhZG93OjAgMCAxcHggcmdiYSgwLDAsMCwwLjYpO1xyXG5cclxuICBjb2xvcjogJHtwYWxldHRlLnByaW1hcnlDb250cmFzdH07XHJcbiAgZGlzcGxheTpmbGV4O1xyXG4gIGZsZXgtZmxvdzpjb2x1bW4gbm93cmFwO1xyXG4gIHdoaXRlLXNwYWNlOm5vd3JhcDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOmNlbnRlcjtcclxuICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XHJcbiAgd2lkdGg6IGF1dG87XHJcbiAgcGFkZGluZy10b3A6MjBweDtcclxuICBwYWRkaW5nLWJvdHRvbToyMHB4O1xyXG4gIGFuaW1hdGlvbjogJHtmYWRlSW5BbmltYXRpb259ICR7VFJBTlNJVElPTl9USU1FfXMgbGluZWFyO1xyXG5cclxuICBtYXJnaW4tbGVmdDogMzAlO1xyXG4gIG1hcmdpbi1yaWdodDogMzAlO1xyXG5cclxuXHJcblxyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgU3RhdHVzQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDQwMHB4O1xyXG4gIHRvcDogMCU7XHJcbiAgbWFyZ2luOiAwIDQwJTtcclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IFN0YXR1c1RpdGxlID0gc3R5bGVkLmRpdmBcclxuICB3aWR0aDogYXV0bztcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgZm9udC1zaXplOiA0MHB4O1xyXG5gO1xyXG5cclxuXHJcblxyXG5jb25zdCBtYWluQmV0c0xhYmVsID0gY3NzYFxyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgbWFpbkJldHNMYWJlbENsYXNzTmFtZSA9IGNzc2BcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuYDtcclxuXHJcblxyXG5jb25zdCBwbGF5ZXJUcmFuc3BhcmVudCA9IHRpbnljb2xvcihQTEFZRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDApXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IHBsYXllck1lZCA9IHRpbnljb2xvcihQTEFZRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDAuNjUpXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IHBsYXllckZ1bGwgPSB0aW55Y29sb3IoUExBWUVSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwLjkpXHJcbiAgLnRvU3RyaW5nKCk7XHJcblxyXG5jb25zdCBiYW5rZXJUcmFuc3BhcmVudCA9IHRpbnljb2xvcihCQU5LRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDApXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IGJhbmtlck1lZCA9IHRpbnljb2xvcihCQU5LRVJfQ09MT1IpXHJcbiAgLnNldEFscGhhKDAuNjUpXHJcbiAgLnRvU3RyaW5nKCk7XHJcbmNvbnN0IGJhbmtlckZ1bGwgPSB0aW55Y29sb3IoQkFOS0VSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwLjkpXHJcbiAgLnRvU3RyaW5nKCk7XHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IHBsYXllckJhY2tncm91bmQgPSBjc3NgXHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAzMyU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudChcclxuICAgICAgICAgIHRvIGxlZnQsXHJcbiAgICAgICAgICAke3BsYXllclRyYW5zcGFyZW50fSxcclxuICAgICAgICAgICR7cGxheWVyTWVkfSAxNiUsXHJcbiAgICAgICAgICAke3BsYXllckZ1bGx9IDUwJSxcclxuICAgICAgICAgICR7cGxheWVyTWVkfSA4NCUsXHJcbiAgICAgICAgICAke3BsYXllclRyYW5zcGFyZW50fVxyXG4gICk7XHJcblxyXG4gIHNwYW4ge1xyXG4gICAgbWFyZ2luLXRvcDogMnB4O1xyXG4gICAgZm9udC1mYW1pbHk6IFJvYm90bztcclxuICAgIGZvbnQtc2l6ZTogNDBweDtcclxuICAgIGNvbG9yOiAjZmZiO1xyXG4gICAgcGFkZGluZy1sZWZ0OiA0cHg7XHJcbiAgfVxyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBiYW5rZXJCYWNrZ3JvdW5kID0gY3NzYFxyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMzMlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoXHJcbiAgICAgICAgICB0byBsZWZ0LFxyXG4gICAgICAgICAgJHtiYW5rZXJUcmFuc3BhcmVudH0sXHJcbiAgICAgICAgICAke2Jhbmtlck1lZH0gMTYlLFxyXG4gICAgICAgICAgJHtiYW5rZXJGdWxsfSA1MCUsXHJcbiAgICAgICAgICAke2Jhbmtlck1lZH0gODQlLFxyXG4gICAgICAgICAgJHtiYW5rZXJUcmFuc3BhcmVudH1cclxuICApO1xyXG5cclxuICBzcGFuIHtcclxuICAgIG1hcmdpbi10b3A6IDJweDtcclxuICAgIGZvbnQtZmFtaWx5OiBSb2JvdG87XHJcbiAgICBmb250LXNpemU6IDQwcHg7XHJcbiAgICBjb2xvcjogI2ZmYjtcclxuICAgIHBhZGRpbmctbGVmdDogNHB4O1xyXG4gIH1cclxuXHJcbmA7Il19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst BigRoadContainer = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk18\",\n  label: \"BigRoadContainer\"\n})( false ? 0 : {\n  name: \"1hbrz9b\",\n  styles: \"position:relative;width:calc(100% - 28px);height:30%;overflow:hidden;display:flex;transition:all 0.2s linear;cursor:zoom-in;>svg{width:auto;height:100%;}top:19%;flex:none;margin-bottom:4px;margin-left:14px;margin-right:14px\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst BigEyeRoadBgContainer = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk17\",\n  label: \"BigEyeRoadBgContainer\"\n})( false ? 0 : {\n  name: \"1fa1w68\",\n  styles: \"position:absolute;width:calc(33.33% - 14px);height:14.2%;top:50.4%;margin-bottom:4px;display:grid;grid-template-columns:repeat(24, 1fr);grid-template-rows:repeat(6, 1fr);gap:1px 1px;margin-left:14px\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst BigEyeRoadContainer = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk16\",\n  label: \"BigEyeRoadContainer\"\n})( false ? 0 : {\n  name: \"dq1ud8\",\n  styles: \"position:absolute;width:calc(33.33% - 14px);height:15%;overflow:hidden;display:flex;transition:all 0.2s linear;cursor:zoom-in;>svg{width:auto;height:100%;}top:50%;flex:none;margin-bottom:4px;margin-left:14px\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst SmallRoadBgContainer = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk15\",\n  label: \"SmallRoadBgContainer\"\n})( false ? 0 : {\n  name: \"xlsqw8\",\n  styles: \"position:absolute;width:calc(33.33% - 14px);height:14.2%;top:50.4%;left:33.33%;margin-bottom:4px;display:grid;grid-template-columns:repeat(24, 1fr);grid-template-rows:repeat(6, 1fr);gap:1px 1px;margin-left:7px\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst CockroachRoadBgContainer = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk14\",\n  label: \"CockroachRoadBgContainer\"\n})( false ? 0 : {\n  name: \"1f2l2ty\",\n  styles: \"position:absolute;width:calc(33.33% - 14px);height:14.2%;top:50.4%;left:66.66%;margin-bottom:4px;display:grid;grid-template-columns:repeat(24, 1fr);grid-template-rows:repeat(6, 1fr);gap:1px 1px;margin-right:14px\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst BeadRoadBgContainer = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk13\",\n  label: \"BeadRoadBgContainer\"\n})( false ? 0 : {\n  name: \"qce1xn\",\n  styles: \"position:absolute;width:50%;height:33.22%;top:66%;left:0;margin-left:14px;display:grid;grid-template-columns:repeat(16, 1fr);grid-template-rows:repeat(6, 1fr);gap:1px 1px\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst BeadRoadContainer = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk12\",\n  label: \"BeadRoadContainer\"\n})( false ? 0 : {\n  name: \"j58pep\",\n  styles: \"position:absolute;width:50%;height:35.22%;top:65%;left:0;margin-left:14px;display:flex;transition:all 0.2s linear;cursor:zoom-in;>svg{width:auto;height:100%;}\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst SmallRoadContainer = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk11\",\n  label: \"SmallRoadContainer\"\n})( false ? 0 : {\n  name: \"aa4yp2\",\n  styles: \"position:absolute;width:calc(33.33% - 14px);height:15%;overflow:hidden;display:flex;transition:all 0.2s linear;cursor:zoom-in;>svg{width:auto;height:100%;}top:50%;left:33.33%;flex:none;margin-bottom:4px;margin-left:7px\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst CockroachRoadContainer = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk10\",\n  label: \"CockroachRoadContainer\"\n})( false ? 0 : {\n  name: \"t0kxj1\",\n  styles: \"position:absolute;width:calc(33.33% - 14px);height:15%;overflow:hidden;display:flex;transition:all 0.2s linear;cursor:zoom-in;>svg{width:auto;height:100%;}top:50%;left:66.66%;flex:none;margin-bottom:4px;margin-right:14px\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst RoadPreviewContainer = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk9\",\n  label: \"RoadPreviewContainer\"\n})( false ? 0 : {\n  name: \"16i1bwg\",\n  styles: \"position:absolute;width:5%;height:22%;top:60%;left:33.33%;margin-bottom:4px;background-color:#fff\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst StatsContainer = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk8\",\n  label: \"StatsContainer\"\n})( false ? 0 : {\n  name: \"bzelod\",\n  styles: \"position:absolute;width:7%;height:22%;top:60%;left:43.33%;margin-bottom:4px;background-color:#fff\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc3R5bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMGlCd0MiLCJmaWxlIjoiQzpcXFVzZXJzXFxUeWtoZVxcZWxlY3Ryb25hcHBzXFx0eWtoZS1lbGVjdHJvbi1hcHBzLWJhY2NhcmF0XFxzcmNcXHJlbmRlcmVyXFxiYWNjYXJhdFxccGxheWVyXFx2aWV3c1xcR2FtZUJvYXJkXFxzdHlsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcywga2V5ZnJhbWVzIH0gZnJvbSBcIkBlbW90aW9uL2Nzc1wiO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJAZW1vdGlvbi9zdHlsZWRcIjtcclxuaW1wb3J0IHsgaGV4MnJnYmEgfSBmcm9tIFwiLi4vLi4vLi4vdHlraGUvdXRpbHNcIjtcclxuaW1wb3J0IHRpbnljb2xvciBmcm9tICd0aW55Y29sb3IyJztcclxuXHJcblxyXG5pbXBvcnQgeyB0aGVtZSB9IGZyb20gXCIuLi8uLi8uLi90eWtoZS9ib290c3RyYXBcIjtcclxuZXhwb3J0IGNvbnN0IEhFQURFUl9IRUlHSFQgPSA2MDtcclxuXHJcbmNvbnN0IHsgcGFsZXR0ZSwgdGludHMsIH0gPSB0aGVtZTtcclxuXHJcblxyXG5cclxuaW1wb3J0IGJnSW1hZ2UgZnJvbSAnLi4vLi4vYXNzZXRzL2ltYWdlcy9iZy5wbmcnXHJcbmltcG9ydCBnYW1lTmFtZUltZyBmcm9tICcuLi8uLi9hc3NldHMvaW1hZ2VzL0JhY2NhcmF0TmFtZS5wbmcnXHJcbmltcG9ydCBnb2xkZW5Cb3JkZXJJbWcgZnJvbSAnLi4vLi4vYXNzZXRzL2ltYWdlcy9CaWdTY3JlZW5Cb3JkZXIucG5nJ1xyXG5cclxuaW1wb3J0IEJhbmtlciBmcm9tICcuLi8uLi9hc3NldHMvaW1hZ2VzL0Jhbmtlci5wbmcnO1xyXG5pbXBvcnQgUGxheWVyIGZyb20gJy4uLy4uL2Fzc2V0cy9pbWFnZXMvUGxheWVyLnBuZyc7XHJcblxyXG5pbXBvcnQgeyBVSV9DT05GSUcgfSBmcm9tIFwiLi4vLi4vdWlDb25maWdcIjtcclxuXHJcbmNvbnN0IHtcclxuICBDT0xPUlM6IHsgUExBWUVSX0NPTE9SLCBCQU5LRVJfQ09MT1J9LFxyXG59ID0gVUlfQ09ORklHO1xyXG5cclxuXHJcbmNvbnN0IFRSQU5TSVRJT05fVElNRSA9IDAuMjtcclxuXHJcblxyXG5jb25zdCBwcm9ncmVzc0JhcktleWZyYW1lID0ga2V5ZnJhbWVzYFxyXG4gIGZyb20ge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZVgodmFyKC0tcmVtYWluaW5nKSk7XHJcbiAgfVxyXG4gIHRvIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGVYKDApO1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBwcm9ncmVzc0JhckFuaW1hdGlvbiA9IGNzc2BcclxuICAmOjpiZWZvcmUge1xyXG4gICAgYW5pbWF0aW9uOiAke3Byb2dyZXNzQmFyS2V5ZnJhbWV9IHZhcigtLWR1cmF0aW9uKSBsaW5lYXI7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGZhZGVJbkFuaW1hdGlvbiA9IGtleWZyYW1lc2BcclxuICBmcm9tIHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgfVxyXG4gIHRvIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgcHVsc2VBbmltYXRpb25LZXlmcmFtZSA9IChjb2xvcikgPT4ga2V5ZnJhbWVzYFxyXG4gIHRvIHtcclxuICAgIGZpbGwtb3BhY2l0eTogMC44NTtcclxuICAgIGZpbGw6ICR7Y29sb3J9O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IGdldEFuaW1hdGlvbiA9IChjb2xvcikgPT4gY3NzYFxyXG4gIGFuaW1hdGlvbjogJHtwdWxzZUFuaW1hdGlvbktleWZyYW1lKGNvbG9yKX0gMC4zM3MgYWx0ZXJuYXRlIGluZmluaXRlO1xyXG5gO1xyXG5cclxuY29uc3QgUExBWUVSX0hJR0hMSUdIVF9DT0xPUiA9ICcjNzlDOUZGJztcclxuY29uc3QgQkFOS0VSX0hJR0hMSUdIVF9DT0xPUiA9ICcjRkY0ODUxJztcclxuY29uc3QgVElFX0hJR0hMSUdIVF9DT0xPUiA9ICcjNTVmYjU3JztcclxuY29uc3QgU1VQRVJTSVhfSElHSFRMSUdIVF9DT0xPUiA9ICcjQjZDMkRBJztcclxuY29uc3QgcGxheWVyQW5pbWF0aW9uID0gZ2V0QW5pbWF0aW9uKFBMQVlFUl9ISUdITElHSFRfQ09MT1IpO1xyXG5jb25zdCBiYW5rZXJBbmltYXRpb24gPSBnZXRBbmltYXRpb24oQkFOS0VSX0hJR0hMSUdIVF9DT0xPUik7XHJcbmNvbnN0IHRpZUFuaW1hdGlvbiA9IGdldEFuaW1hdGlvbihUSUVfSElHSExJR0hUX0NPTE9SKTtcclxuY29uc3Qgc3VpdGVkVGllQW5pbWF0aW9uID0gZ2V0QW5pbWF0aW9uKFRJRV9ISUdITElHSFRfQ09MT1IpO1xyXG5jb25zdCBzdXBlclNpeEFuaW1hdGlvbiA9IGdldEFuaW1hdGlvbihTVVBFUlNJWF9ISUdIVExJR0hUX0NPTE9SKTtcclxuXHJcblxyXG5leHBvcnQgY29uc3QgcGxheWVyUHVsc2VDb250YWluZXIgPSBjc3NgXHJcbiAgI2JldC1wbGF5ZXIge1xyXG4gICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICR7cGxheWVyQW5pbWF0aW9ufTtcclxuICAgIH07XHJcbiAgfVxyXG4gICNiZXQtZHJhZ29uLCAjYmV0LWJvd2xlciB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtiYW5rZXJBbmltYXRpb259O1xyXG4gICAgfTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgcGxheWVyUGFpclB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtcGxheWVyLXBhaXIsICNiZXQtbmF0dXJhbC1wbGF5ZXIge1xyXG4gICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICR7cGxheWVyQW5pbWF0aW9ufTtcclxuICAgIH1cclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3Qgc3VwZXJTaXhQdWxzZUNvbnRhaW5lciA9IGNzc2BcclxuICAjYmV0LXN1cGVyLXNpeCB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtzdXBlclNpeEFuaW1hdGlvbn07XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJhbmtlclB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtYmFua2VyIHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke2JhbmtlckFuaW1hdGlvbn07XHJcbiAgICB9XHJcbiAgfTtcclxuICAjYmV0LXRpZ2VyLCAjYmV0LWJhdHNtYW4ge1xyXG4gICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICR7cGxheWVyQW5pbWF0aW9ufTtcclxuICAgIH1cclxuICB9XHJcbmA7XHJcbmV4cG9ydCBjb25zdCBiYW5rZXJQYWlyUHVsc2VDb250YWluZXIgPSBjc3NgXHJcbiAgI2JldC1iYW5rZXItcGFpciwgI2JldC1uYXR1cmFsLWJhbmtlciB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtiYW5rZXJBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCB0aWVQdWxzZUNvbnRhaW5lciA9IGNzc2BcclxuICAjYmV0LXRpZSB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHt0aWVBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBzdWl0ZWRUaWVQdWxzZUNvbnRhaW5lciA9IGNzc2BcclxuICAjYmV0LXN1aXRlZC10aWUge1xyXG4gICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICR7c3VpdGVkVGllQW5pbWF0aW9ufTtcclxuICAgIH1cclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgaW5hY3RpdmVHYW1lQm9hcmQgPSBjc3NgXHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDQzJSk7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgaW5hY3RpdmVHcmlkID0gY3NzYFxyXG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgKiB7XHJcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgIH0gICBcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCB0aWx0ZWRHcmlkID0gY3NzYFxyXG4gIEBtZWRpYSAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjcpIHJvdGF0ZVgoNjBkZWcpO1xyXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogYm90dG9tO1xyXG4gICAgbWF4LXdpZHRoOiA4MDBweDtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgbW9iaWxlR2FtZUJvYXJkID0gY3NzYFxyXG4gIGhlaWdodDogYXV0bztcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xyXG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcblxyXG4gICBbaWRePSdiZXQtJ10ge1xyXG4gICAgJjpob3ZlcixcclxuICAgICY6YWN0aXZlIHtcclxuICAgICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICAgZmlsbC1vcGFjaXR5OiAwLjY1O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIGhlaWdodDogMTAwJTtcclxuICB3aWR0aDogMTAwJTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgb3ZlcmZsb3c6aGlkZGVuO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4ycyBsaW5lYXI7XHJcblxyXG4gICNiZXQtaWNvbiB7XHJcbiAgICBwb2ludGVyLWV2ZW50czogYWxsO1xyXG4gIH1cclxuXHJcbiAgW2lkXj0nYmV0LSddIHtcclxuICAgICYuZGlzYWJsZWQge1xyXG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgIH1cclxuICAgICY6aG92ZXIsXHJcbiAgICAmOmFjdGl2ZSB7XHJcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICAgZmlsbC1vcGFjaXR5OiAwLjg1O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuYDtcclxuXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IEhlYWRlciA9IHN0eWxlZC5oZWFkZXJgXHJcbiAgaGVpZ2h0OiAke0hFQURFUl9IRUlHSFR9cHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGJhY2tncm91bmQ6ICR7aGV4MnJnYmEocGFsZXR0ZS5wcmltYXJ5LCB0aW50cy5wcmltYXJ5KX07XHJcbiAgY29sb3I6ICR7cGFsZXR0ZS5mb3JlZ3JvdW5kfTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgZm9udC1zaXplOiAzNHB4O1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxuICB0cmFuc2l0aW9uOiBjb2xvciAwLjI3cyBsaW5lYXIsIHRyYW5zZm9ybSAwLjI3cyBsaW5lYXI7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgaGVhZGVyQ2xhc3NOYW1lID0gY3NzYFxyXG4gIC0tcmVtYWluaW5nOiAxO1xyXG4gIC0tZHVyYXRpb246IDEwcztcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgY29sb3I6ICR7cGFsZXR0ZS5wcmltYXJ5Q29udHJhc3R9O1xyXG4gIGZpbGw6ICR7cGFsZXR0ZS5wcmltYXJ5Q29udHJhc3R9O1xyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgZm9udC1zaXplOiAzNHB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICR7aGV4MnJnYmEocGFsZXR0ZS5wcmltYXJ5LCB0aW50cy5wcmltYXJ5KX07XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICY6YmVmb3JlIHtcclxuICAgIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQ7XHJcbiAgICB3aWxsLWNoYW5nZTogdHJhbnNmb3JtO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yKTtcclxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMXMgbGluZWFyLCB0cmFuc2Zvcm0gdmFyKC0tZHVyYXRpb24pIGxpbmVhcjtcclxuICAgIHotaW5kZXg6IC0xO1xyXG4gIH1cclxuYDtcclxuXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IEJhbmtlckltZyA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGhlaWdodDogMTIlO1xyXG4gIHdpZHRoOiAxOCU7XHJcbiAgdG9wOiA1JTtcclxuICBsZWZ0OiA2OCU7XHJcblxyXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgke0Jhbmtlcn0pO1xyXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IHRvcDtcclxuYFxyXG5leHBvcnQgY29uc3QgUGxheWVySW1nID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgaGVpZ2h0OiAxMiU7XHJcbiAgd2lkdGg6IDE0JTtcclxuICB0b3A6IDUlO1xyXG4gIGxlZnQ6IDE2JTtcclxuXHJcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7UGxheWVyfSk7XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xyXG5gXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IENvbnRhaW5lckdvbGRlbkJvcmRlciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIG1hcmdpbi1sZWZ0OiAwcHg7XHJcbiAgbWFyZ2luLXRvcDogMHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBzY2FsZTogMTtcclxuXHJcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7Z29sZGVuQm9yZGVySW1nfSk7XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IHRvcDtcclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IEdhbWVIZWFkZXIgPSBzdHlsZWQuZGl2YFxyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDYxMHB4O1xyXG4gICAgbWFyZ2luLXRvcDogM3B4O1xyXG4gICAgd2lkdGg6IDcwOXB4O1xyXG4gICAgaGVpZ2h0OiAyMDJweDtcclxuICAgIHNjYWxlOiAxO1xyXG5cclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgke2dhbWVOYW1lSW1nfSk7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IHRvcDtcclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IE1haW5Db250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogNzclO1xyXG4gIGhlaWdodDogMzgwcHg7XHJcblxyXG4gIHRvcDogMzUlO1xyXG4gIGxlZnQ6IDEyJTtcclxuXHJcblxyXG4gIGBcclxuZXhwb3J0IGNvbnN0IEJldEdyaWRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcblxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBwZXJzcGVjdGl2ZTogMTAwMHB4O1xyXG5cclxuICBgXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IEJpZ1JvYWRCZ0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAyOHB4KTtcclxuICBoZWlnaHQ6IDI5LjIlO1xyXG4gIHRvcDogMTkuNCU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG5cclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDM2LCAxZnIpO1xyXG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDYsIDFmcik7XHJcbiAgZ2FwOiAxcHggMXB4O1xyXG5cclxuICBtYXJnaW4tbGVmdDogMTRweDtcclxuICBtYXJnaW4tcmlnaHQ6IDE0cHg7XHJcblxyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgQmlnUm9hZENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAyOHB4KTtcclxuICBoZWlnaHQ6IDMwJTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xyXG4gIGN1cnNvcjogem9vbS1pbjtcclxuXHJcbiAgPiBzdmcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuICB0b3A6IDE5JTtcclxuICBmbGV4OiBub25lO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuXHJcblxyXG4gIG1hcmdpbi1sZWZ0OiAxNHB4O1xyXG4gIG1hcmdpbi1yaWdodDogMTRweDtcclxuXHJcbmA7XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBCaWdFeWVSb2FkQmdDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE0LjIlO1xyXG4gIHRvcDogNTAuNCU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG5cclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDI0LCAxZnIpO1xyXG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDYsIDFmcik7XHJcbiAgZ2FwOiAxcHggMXB4O1xyXG5cclxuICBtYXJnaW4tbGVmdDogMTRweDtcclxuICBcclxuYDtcclxuXHJcblxyXG5leHBvcnQgY29uc3QgQmlnRXllUm9hZENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiBjYWxjKDMzLjMzJSAtIDE0cHgpO1xyXG4gIGhlaWdodDogMTUlO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgZGlzcGxheTogZmxleDtcclxuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBsaW5lYXI7XHJcbiAgY3Vyc29yOiB6b29tLWluO1xyXG5cclxuICA+IHN2ZyB7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9XHJcblxyXG4gIHRvcDogNTAlO1xyXG4gIGZsZXg6IG5vbmU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAxNHB4O1xyXG5cclxuYDtcclxuXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IFNtYWxsUm9hZEJnQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMzMuMzMlIC0gMTRweCk7XHJcbiAgaGVpZ2h0OiAxNC4yJTtcclxuICB0b3A6IDUwLjQlO1xyXG4gIGxlZnQ6IDMzLjMzJTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMjQsIDFmcik7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNiwgMWZyKTtcclxuICBnYXA6IDFweCAxcHg7XHJcblxyXG4gIG1hcmdpbi1sZWZ0OiA3cHg7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgQ29ja3JvYWNoUm9hZEJnQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMzMuMzMlIC0gMTRweCk7XHJcbiAgaGVpZ2h0OiAxNC4yJTtcclxuICB0b3A6IDUwLjQlO1xyXG4gIGxlZnQ6IDY2LjY2JTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMjQsIDFmcik7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNiwgMWZyKTtcclxuICBnYXA6IDFweCAxcHg7XHJcblxyXG4gIG1hcmdpbi1yaWdodDogMTRweDtcclxuYDtcclxuXHJcblxyXG5leHBvcnQgY29uc3QgQmVhZFJvYWRCZ0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA1MCU7XHJcbiAgaGVpZ2h0OiAzMy4yMiU7XHJcblxyXG4gIHRvcDogNjYlO1xyXG4gIGxlZnQ6IDA7XHJcbiAgbWFyZ2luLWxlZnQ6IDE0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMTYsIDFmcik7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNiwgMWZyKTtcclxuICBnYXA6IDFweCAxcHg7XHJcblxyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBCZWFkUm9hZENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAgNTAlO1xyXG4gIGhlaWdodDogMzUuMjIlO1xyXG5cclxuICB0b3A6IDY1JTtcclxuICBsZWZ0OiAwO1xyXG4gIG1hcmdpbi1sZWZ0OiAxNHB4O1xyXG5cclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGxpbmVhcjtcclxuICBjdXJzb3I6IHpvb20taW47XHJcblxyXG4gID4gc3ZnIHtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbmA7XHJcblxyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgU21hbGxSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMzMuMzMlIC0gMTRweCk7XHJcbiAgaGVpZ2h0OiAxNSU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGxpbmVhcjtcclxuICBjdXJzb3I6IHpvb20taW47XHJcblxyXG4gID4gc3ZnIHtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgdG9wOiA1MCU7XHJcbiAgbGVmdDogMzMuMzMlO1xyXG4gIGZsZXg6IG5vbmU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiA3cHg7XHJcblxyXG5gO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBDb2Nrcm9hY2hSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMzMuMzMlIC0gMTRweCk7XHJcbiAgaGVpZ2h0OiAxNSU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGxpbmVhcjtcclxuICBjdXJzb3I6IHpvb20taW47XHJcblxyXG4gID4gc3ZnIHtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgdG9wOiA1MCU7XHJcbiAgbGVmdDogNjYuNjYlO1xyXG4gIGZsZXg6IG5vbmU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG4gIG1hcmdpbi1yaWdodDogMTRweDtcclxuXHJcblxyXG5gO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgUm9hZFByZXZpZXdDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogNSU7XHJcbiAgaGVpZ2h0OiAyMiU7XHJcblxyXG4gIHRvcDogNjAlO1xyXG4gIGxlZnQ6IDMzLjMzJTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuXHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgU3RhdHNDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogNyU7XHJcbiAgaGVpZ2h0OiAyMiU7XHJcblxyXG4gIHRvcDogNjAlO1xyXG4gIGxlZnQ6IDQzLjMzJTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuXHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgU3RhdGlzdGljc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA0OC4zNSU7XHJcbiAgaGVpZ2h0OiAxOC4yJTtcclxuXHJcbiAgdG9wOiA4MSU7XHJcbiAgcmlnaHQ6IDAlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcblxyXG4gIG1hcmdpbi1yaWdodDogMTRweDtcclxuYDtcclxuXHJcblxyXG5leHBvcnQgY29uc3QgUGxheWVySGFuZHNDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogMTUlO1xyXG4gIGhlaWdodDogMTMlO1xyXG5cclxuICB0b3A6IDI0JTtcclxuICBsZWZ0OiAxNiU7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgQmFua2VySGFuZHNDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogMTUlO1xyXG4gIGhlaWdodDogMTMlO1xyXG5cclxuICB0b3A6IDI0JTtcclxuICBsZWZ0OiA3MCU7XHJcblxyXG4gIG1hcmdpbi1yaWdodDogMTRweDtcclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IFBsYXllckhhbmRzSGFuZHNGbGV4ID0gc3R5bGVkLmRpdmBcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjdzIGxpbmVhciAwcztcclxuICAgIHBlcnNwZWN0aXZlOiAxMDAwcHg7XHJcbiAgICBwYWRkaW5nOiAycHggMHB4O1xyXG4gICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgQmFua2VySGFuZHNIYW5kc0ZsZXggPSBzdHlsZWQuZGl2YFxyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4yN3MgbGluZWFyIDBzO1xyXG4gICAgcGVyc3BlY3RpdmU6IDEwMDBweDtcclxuICAgIHBhZGRpbmc6IDJweCAwcHg7XHJcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBSZXN1bHRNZXNzYWdlQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICB0b3A6IDQwJTtcclxuICBmb250LWZhbWlseTogUm9ib3RvICxzYW5zLXNlcmlmO1xyXG4gIGZvbnQtc3R5bGU6bm9ybWFsO1xyXG4gIGZvbnQtc3RyZXRjaDpub3JtYWw7XHJcbiAgbGluZS1oZWlnaHQ6bm9ybWFsO1xyXG4gIGxldHRlci1zcGFjaW5nOm5vcm1hbDtcclxuICBmb250LXNpemU6MTZweCAhaW1wb3J0YW50O1xyXG4gIGZvbnQtd2VpZ2h0OjkwMDtcclxuICB0ZXh0LXNoYWRvdzowIDAgMXB4IHJnYmEoMCwwLDAsMC42KTtcclxuXHJcbiAgY29sb3I6ICR7cGFsZXR0ZS5wcmltYXJ5Q29udHJhc3R9O1xyXG4gIGRpc3BsYXk6ZmxleDtcclxuICBmbGV4LWZsb3c6Y29sdW1uIG5vd3JhcDtcclxuICB3aGl0ZS1zcGFjZTpub3dyYXA7XHJcbiAganVzdGlmeS1jb250ZW50OmNlbnRlcjtcclxuICBhbGlnbi1pdGVtczpjZW50ZXI7XHJcbiAgYm94LXNpemluZzpib3JkZXItYm94O1xyXG4gIHdpZHRoOiBhdXRvO1xyXG4gIHBhZGRpbmctdG9wOjIwcHg7XHJcbiAgcGFkZGluZy1ib3R0b206MjBweDtcclxuICBhbmltYXRpb246ICR7ZmFkZUluQW5pbWF0aW9ufSAke1RSQU5TSVRJT05fVElNRX1zIGxpbmVhcjtcclxuXHJcbiAgbWFyZ2luLWxlZnQ6IDMwJTtcclxuICBtYXJnaW4tcmlnaHQ6IDMwJTtcclxuXHJcblxyXG5cclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IFN0YXR1c0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA0MDBweDtcclxuICB0b3A6IDAlO1xyXG4gIG1hcmdpbjogMCA0MCU7XHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBTdGF0dXNUaXRsZSA9IHN0eWxlZC5kaXZgXHJcbiAgd2lkdGg6IGF1dG87XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB0ZXh0LWFsaWduOiByaWdodDtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtc2l6ZTogNDBweDtcclxuYDtcclxuXHJcblxyXG5cclxuY29uc3QgbWFpbkJldHNMYWJlbCA9IGNzc2BcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1haW5CZXRzTGFiZWxDbGFzc05hbWUgPSBjc3NgXHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbmA7XHJcblxyXG5cclxuY29uc3QgcGxheWVyVHJhbnNwYXJlbnQgPSB0aW55Y29sb3IoUExBWUVSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwKVxyXG4gIC50b1N0cmluZygpO1xyXG5jb25zdCBwbGF5ZXJNZWQgPSB0aW55Y29sb3IoUExBWUVSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwLjY1KVxyXG4gIC50b1N0cmluZygpO1xyXG5jb25zdCBwbGF5ZXJGdWxsID0gdGlueWNvbG9yKFBMQVlFUl9DT0xPUilcclxuICAuc2V0QWxwaGEoMC45KVxyXG4gIC50b1N0cmluZygpO1xyXG5cclxuY29uc3QgYmFua2VyVHJhbnNwYXJlbnQgPSB0aW55Y29sb3IoQkFOS0VSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwKVxyXG4gIC50b1N0cmluZygpO1xyXG5jb25zdCBiYW5rZXJNZWQgPSB0aW55Y29sb3IoQkFOS0VSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwLjY1KVxyXG4gIC50b1N0cmluZygpO1xyXG5jb25zdCBiYW5rZXJGdWxsID0gdGlueWNvbG9yKEJBTktFUl9DT0xPUilcclxuICAuc2V0QWxwaGEoMC45KVxyXG4gIC50b1N0cmluZygpO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBwbGF5ZXJCYWNrZ3JvdW5kID0gY3NzYFxyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMzMlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoXHJcbiAgICAgICAgICB0byBsZWZ0LFxyXG4gICAgICAgICAgJHtwbGF5ZXJUcmFuc3BhcmVudH0sXHJcbiAgICAgICAgICAke3BsYXllck1lZH0gMTYlLFxyXG4gICAgICAgICAgJHtwbGF5ZXJGdWxsfSA1MCUsXHJcbiAgICAgICAgICAke3BsYXllck1lZH0gODQlLFxyXG4gICAgICAgICAgJHtwbGF5ZXJUcmFuc3BhcmVudH1cclxuICApO1xyXG5cclxuICBzcGFuIHtcclxuICAgIG1hcmdpbi10b3A6IDJweDtcclxuICAgIGZvbnQtZmFtaWx5OiBSb2JvdG87XHJcbiAgICBmb250LXNpemU6IDQwcHg7XHJcbiAgICBjb2xvcjogI2ZmYjtcclxuICAgIHBhZGRpbmctbGVmdDogNHB4O1xyXG4gIH1cclxuXHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgYmFua2VyQmFja2dyb3VuZCA9IGNzc2BcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDMzJTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KFxyXG4gICAgICAgICAgdG8gbGVmdCxcclxuICAgICAgICAgICR7YmFua2VyVHJhbnNwYXJlbnR9LFxyXG4gICAgICAgICAgJHtiYW5rZXJNZWR9IDE2JSxcclxuICAgICAgICAgICR7YmFua2VyRnVsbH0gNTAlLFxyXG4gICAgICAgICAgJHtiYW5rZXJNZWR9IDg0JSxcclxuICAgICAgICAgICR7YmFua2VyVHJhbnNwYXJlbnR9XHJcbiAgKTtcclxuXHJcbiAgc3BhbiB7XHJcbiAgICBtYXJnaW4tdG9wOiAycHg7XHJcbiAgICBmb250LWZhbWlseTogUm9ib3RvO1xyXG4gICAgZm9udC1zaXplOiA0MHB4O1xyXG4gICAgY29sb3I6ICNmZmI7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDRweDtcclxuICB9XHJcblxyXG5gOyJdfQ== */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst StatisticsContainer = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk7\",\n  label: \"StatisticsContainer\"\n})( false ? 0 : {\n  name: \"v3istv\",\n  styles: \"position:absolute;width:48.35%;height:18.2%;top:81%;right:0%;background-color:#fff;margin-right:14px\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc3R5bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc2pCNkMiLCJmaWxlIjoiQzpcXFVzZXJzXFxUeWtoZVxcZWxlY3Ryb25hcHBzXFx0eWtoZS1lbGVjdHJvbi1hcHBzLWJhY2NhcmF0XFxzcmNcXHJlbmRlcmVyXFxiYWNjYXJhdFxccGxheWVyXFx2aWV3c1xcR2FtZUJvYXJkXFxzdHlsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcywga2V5ZnJhbWVzIH0gZnJvbSBcIkBlbW90aW9uL2Nzc1wiO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJAZW1vdGlvbi9zdHlsZWRcIjtcclxuaW1wb3J0IHsgaGV4MnJnYmEgfSBmcm9tIFwiLi4vLi4vLi4vdHlraGUvdXRpbHNcIjtcclxuaW1wb3J0IHRpbnljb2xvciBmcm9tICd0aW55Y29sb3IyJztcclxuXHJcblxyXG5pbXBvcnQgeyB0aGVtZSB9IGZyb20gXCIuLi8uLi8uLi90eWtoZS9ib290c3RyYXBcIjtcclxuZXhwb3J0IGNvbnN0IEhFQURFUl9IRUlHSFQgPSA2MDtcclxuXHJcbmNvbnN0IHsgcGFsZXR0ZSwgdGludHMsIH0gPSB0aGVtZTtcclxuXHJcblxyXG5cclxuaW1wb3J0IGJnSW1hZ2UgZnJvbSAnLi4vLi4vYXNzZXRzL2ltYWdlcy9iZy5wbmcnXHJcbmltcG9ydCBnYW1lTmFtZUltZyBmcm9tICcuLi8uLi9hc3NldHMvaW1hZ2VzL0JhY2NhcmF0TmFtZS5wbmcnXHJcbmltcG9ydCBnb2xkZW5Cb3JkZXJJbWcgZnJvbSAnLi4vLi4vYXNzZXRzL2ltYWdlcy9CaWdTY3JlZW5Cb3JkZXIucG5nJ1xyXG5cclxuaW1wb3J0IEJhbmtlciBmcm9tICcuLi8uLi9hc3NldHMvaW1hZ2VzL0Jhbmtlci5wbmcnO1xyXG5pbXBvcnQgUGxheWVyIGZyb20gJy4uLy4uL2Fzc2V0cy9pbWFnZXMvUGxheWVyLnBuZyc7XHJcblxyXG5pbXBvcnQgeyBVSV9DT05GSUcgfSBmcm9tIFwiLi4vLi4vdWlDb25maWdcIjtcclxuXHJcbmNvbnN0IHtcclxuICBDT0xPUlM6IHsgUExBWUVSX0NPTE9SLCBCQU5LRVJfQ09MT1J9LFxyXG59ID0gVUlfQ09ORklHO1xyXG5cclxuXHJcbmNvbnN0IFRSQU5TSVRJT05fVElNRSA9IDAuMjtcclxuXHJcblxyXG5jb25zdCBwcm9ncmVzc0JhcktleWZyYW1lID0ga2V5ZnJhbWVzYFxyXG4gIGZyb20ge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZVgodmFyKC0tcmVtYWluaW5nKSk7XHJcbiAgfVxyXG4gIHRvIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGVYKDApO1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBwcm9ncmVzc0JhckFuaW1hdGlvbiA9IGNzc2BcclxuICAmOjpiZWZvcmUge1xyXG4gICAgYW5pbWF0aW9uOiAke3Byb2dyZXNzQmFyS2V5ZnJhbWV9IHZhcigtLWR1cmF0aW9uKSBsaW5lYXI7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGZhZGVJbkFuaW1hdGlvbiA9IGtleWZyYW1lc2BcclxuICBmcm9tIHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgfVxyXG4gIHRvIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgcHVsc2VBbmltYXRpb25LZXlmcmFtZSA9IChjb2xvcikgPT4ga2V5ZnJhbWVzYFxyXG4gIHRvIHtcclxuICAgIGZpbGwtb3BhY2l0eTogMC44NTtcclxuICAgIGZpbGw6ICR7Y29sb3J9O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IGdldEFuaW1hdGlvbiA9IChjb2xvcikgPT4gY3NzYFxyXG4gIGFuaW1hdGlvbjogJHtwdWxzZUFuaW1hdGlvbktleWZyYW1lKGNvbG9yKX0gMC4zM3MgYWx0ZXJuYXRlIGluZmluaXRlO1xyXG5gO1xyXG5cclxuY29uc3QgUExBWUVSX0hJR0hMSUdIVF9DT0xPUiA9ICcjNzlDOUZGJztcclxuY29uc3QgQkFOS0VSX0hJR0hMSUdIVF9DT0xPUiA9ICcjRkY0ODUxJztcclxuY29uc3QgVElFX0hJR0hMSUdIVF9DT0xPUiA9ICcjNTVmYjU3JztcclxuY29uc3QgU1VQRVJTSVhfSElHSFRMSUdIVF9DT0xPUiA9ICcjQjZDMkRBJztcclxuY29uc3QgcGxheWVyQW5pbWF0aW9uID0gZ2V0QW5pbWF0aW9uKFBMQVlFUl9ISUdITElHSFRfQ09MT1IpO1xyXG5jb25zdCBiYW5rZXJBbmltYXRpb24gPSBnZXRBbmltYXRpb24oQkFOS0VSX0hJR0hMSUdIVF9DT0xPUik7XHJcbmNvbnN0IHRpZUFuaW1hdGlvbiA9IGdldEFuaW1hdGlvbihUSUVfSElHSExJR0hUX0NPTE9SKTtcclxuY29uc3Qgc3VpdGVkVGllQW5pbWF0aW9uID0gZ2V0QW5pbWF0aW9uKFRJRV9ISUdITElHSFRfQ09MT1IpO1xyXG5jb25zdCBzdXBlclNpeEFuaW1hdGlvbiA9IGdldEFuaW1hdGlvbihTVVBFUlNJWF9ISUdIVExJR0hUX0NPTE9SKTtcclxuXHJcblxyXG5leHBvcnQgY29uc3QgcGxheWVyUHVsc2VDb250YWluZXIgPSBjc3NgXHJcbiAgI2JldC1wbGF5ZXIge1xyXG4gICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICR7cGxheWVyQW5pbWF0aW9ufTtcclxuICAgIH07XHJcbiAgfVxyXG4gICNiZXQtZHJhZ29uLCAjYmV0LWJvd2xlciB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtiYW5rZXJBbmltYXRpb259O1xyXG4gICAgfTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgcGxheWVyUGFpclB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtcGxheWVyLXBhaXIsICNiZXQtbmF0dXJhbC1wbGF5ZXIge1xyXG4gICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICR7cGxheWVyQW5pbWF0aW9ufTtcclxuICAgIH1cclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3Qgc3VwZXJTaXhQdWxzZUNvbnRhaW5lciA9IGNzc2BcclxuICAjYmV0LXN1cGVyLXNpeCB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtzdXBlclNpeEFuaW1hdGlvbn07XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJhbmtlclB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtYmFua2VyIHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke2JhbmtlckFuaW1hdGlvbn07XHJcbiAgICB9XHJcbiAgfTtcclxuICAjYmV0LXRpZ2VyLCAjYmV0LWJhdHNtYW4ge1xyXG4gICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICR7cGxheWVyQW5pbWF0aW9ufTtcclxuICAgIH1cclxuICB9XHJcbmA7XHJcbmV4cG9ydCBjb25zdCBiYW5rZXJQYWlyUHVsc2VDb250YWluZXIgPSBjc3NgXHJcbiAgI2JldC1iYW5rZXItcGFpciwgI2JldC1uYXR1cmFsLWJhbmtlciB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtiYW5rZXJBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCB0aWVQdWxzZUNvbnRhaW5lciA9IGNzc2BcclxuICAjYmV0LXRpZSB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHt0aWVBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBzdWl0ZWRUaWVQdWxzZUNvbnRhaW5lciA9IGNzc2BcclxuICAjYmV0LXN1aXRlZC10aWUge1xyXG4gICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICR7c3VpdGVkVGllQW5pbWF0aW9ufTtcclxuICAgIH1cclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgaW5hY3RpdmVHYW1lQm9hcmQgPSBjc3NgXHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDQzJSk7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgaW5hY3RpdmVHcmlkID0gY3NzYFxyXG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgKiB7XHJcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgIH0gICBcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCB0aWx0ZWRHcmlkID0gY3NzYFxyXG4gIEBtZWRpYSAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjcpIHJvdGF0ZVgoNjBkZWcpO1xyXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogYm90dG9tO1xyXG4gICAgbWF4LXdpZHRoOiA4MDBweDtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgbW9iaWxlR2FtZUJvYXJkID0gY3NzYFxyXG4gIGhlaWdodDogYXV0bztcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xyXG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcblxyXG4gICBbaWRePSdiZXQtJ10ge1xyXG4gICAgJjpob3ZlcixcclxuICAgICY6YWN0aXZlIHtcclxuICAgICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICAgZmlsbC1vcGFjaXR5OiAwLjY1O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIGhlaWdodDogMTAwJTtcclxuICB3aWR0aDogMTAwJTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgb3ZlcmZsb3c6aGlkZGVuO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4ycyBsaW5lYXI7XHJcblxyXG4gICNiZXQtaWNvbiB7XHJcbiAgICBwb2ludGVyLWV2ZW50czogYWxsO1xyXG4gIH1cclxuXHJcbiAgW2lkXj0nYmV0LSddIHtcclxuICAgICYuZGlzYWJsZWQge1xyXG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgIH1cclxuICAgICY6aG92ZXIsXHJcbiAgICAmOmFjdGl2ZSB7XHJcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICAgZmlsbC1vcGFjaXR5OiAwLjg1O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuYDtcclxuXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IEhlYWRlciA9IHN0eWxlZC5oZWFkZXJgXHJcbiAgaGVpZ2h0OiAke0hFQURFUl9IRUlHSFR9cHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGJhY2tncm91bmQ6ICR7aGV4MnJnYmEocGFsZXR0ZS5wcmltYXJ5LCB0aW50cy5wcmltYXJ5KX07XHJcbiAgY29sb3I6ICR7cGFsZXR0ZS5mb3JlZ3JvdW5kfTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgZm9udC1zaXplOiAzNHB4O1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxuICB0cmFuc2l0aW9uOiBjb2xvciAwLjI3cyBsaW5lYXIsIHRyYW5zZm9ybSAwLjI3cyBsaW5lYXI7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgaGVhZGVyQ2xhc3NOYW1lID0gY3NzYFxyXG4gIC0tcmVtYWluaW5nOiAxO1xyXG4gIC0tZHVyYXRpb246IDEwcztcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgY29sb3I6ICR7cGFsZXR0ZS5wcmltYXJ5Q29udHJhc3R9O1xyXG4gIGZpbGw6ICR7cGFsZXR0ZS5wcmltYXJ5Q29udHJhc3R9O1xyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgZm9udC1zaXplOiAzNHB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICR7aGV4MnJnYmEocGFsZXR0ZS5wcmltYXJ5LCB0aW50cy5wcmltYXJ5KX07XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICY6YmVmb3JlIHtcclxuICAgIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQ7XHJcbiAgICB3aWxsLWNoYW5nZTogdHJhbnNmb3JtO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yKTtcclxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMXMgbGluZWFyLCB0cmFuc2Zvcm0gdmFyKC0tZHVyYXRpb24pIGxpbmVhcjtcclxuICAgIHotaW5kZXg6IC0xO1xyXG4gIH1cclxuYDtcclxuXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IEJhbmtlckltZyA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGhlaWdodDogMTIlO1xyXG4gIHdpZHRoOiAxOCU7XHJcbiAgdG9wOiA1JTtcclxuICBsZWZ0OiA2OCU7XHJcblxyXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgke0Jhbmtlcn0pO1xyXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IHRvcDtcclxuYFxyXG5leHBvcnQgY29uc3QgUGxheWVySW1nID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgaGVpZ2h0OiAxMiU7XHJcbiAgd2lkdGg6IDE0JTtcclxuICB0b3A6IDUlO1xyXG4gIGxlZnQ6IDE2JTtcclxuXHJcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7UGxheWVyfSk7XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xyXG5gXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IENvbnRhaW5lckdvbGRlbkJvcmRlciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIG1hcmdpbi1sZWZ0OiAwcHg7XHJcbiAgbWFyZ2luLXRvcDogMHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBzY2FsZTogMTtcclxuXHJcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7Z29sZGVuQm9yZGVySW1nfSk7XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IHRvcDtcclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IEdhbWVIZWFkZXIgPSBzdHlsZWQuZGl2YFxyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDYxMHB4O1xyXG4gICAgbWFyZ2luLXRvcDogM3B4O1xyXG4gICAgd2lkdGg6IDcwOXB4O1xyXG4gICAgaGVpZ2h0OiAyMDJweDtcclxuICAgIHNjYWxlOiAxO1xyXG5cclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgke2dhbWVOYW1lSW1nfSk7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IHRvcDtcclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IE1haW5Db250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogNzclO1xyXG4gIGhlaWdodDogMzgwcHg7XHJcblxyXG4gIHRvcDogMzUlO1xyXG4gIGxlZnQ6IDEyJTtcclxuXHJcblxyXG4gIGBcclxuZXhwb3J0IGNvbnN0IEJldEdyaWRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcblxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBwZXJzcGVjdGl2ZTogMTAwMHB4O1xyXG5cclxuICBgXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IEJpZ1JvYWRCZ0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAyOHB4KTtcclxuICBoZWlnaHQ6IDI5LjIlO1xyXG4gIHRvcDogMTkuNCU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG5cclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDM2LCAxZnIpO1xyXG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDYsIDFmcik7XHJcbiAgZ2FwOiAxcHggMXB4O1xyXG5cclxuICBtYXJnaW4tbGVmdDogMTRweDtcclxuICBtYXJnaW4tcmlnaHQ6IDE0cHg7XHJcblxyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgQmlnUm9hZENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAyOHB4KTtcclxuICBoZWlnaHQ6IDMwJTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xyXG4gIGN1cnNvcjogem9vbS1pbjtcclxuXHJcbiAgPiBzdmcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuICB0b3A6IDE5JTtcclxuICBmbGV4OiBub25lO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuXHJcblxyXG4gIG1hcmdpbi1sZWZ0OiAxNHB4O1xyXG4gIG1hcmdpbi1yaWdodDogMTRweDtcclxuXHJcbmA7XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBCaWdFeWVSb2FkQmdDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE0LjIlO1xyXG4gIHRvcDogNTAuNCU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG5cclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDI0LCAxZnIpO1xyXG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDYsIDFmcik7XHJcbiAgZ2FwOiAxcHggMXB4O1xyXG5cclxuICBtYXJnaW4tbGVmdDogMTRweDtcclxuICBcclxuYDtcclxuXHJcblxyXG5leHBvcnQgY29uc3QgQmlnRXllUm9hZENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiBjYWxjKDMzLjMzJSAtIDE0cHgpO1xyXG4gIGhlaWdodDogMTUlO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgZGlzcGxheTogZmxleDtcclxuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBsaW5lYXI7XHJcbiAgY3Vyc29yOiB6b29tLWluO1xyXG5cclxuICA+IHN2ZyB7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9XHJcblxyXG4gIHRvcDogNTAlO1xyXG4gIGZsZXg6IG5vbmU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAxNHB4O1xyXG5cclxuYDtcclxuXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IFNtYWxsUm9hZEJnQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMzMuMzMlIC0gMTRweCk7XHJcbiAgaGVpZ2h0OiAxNC4yJTtcclxuICB0b3A6IDUwLjQlO1xyXG4gIGxlZnQ6IDMzLjMzJTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMjQsIDFmcik7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNiwgMWZyKTtcclxuICBnYXA6IDFweCAxcHg7XHJcblxyXG4gIG1hcmdpbi1sZWZ0OiA3cHg7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgQ29ja3JvYWNoUm9hZEJnQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMzMuMzMlIC0gMTRweCk7XHJcbiAgaGVpZ2h0OiAxNC4yJTtcclxuICB0b3A6IDUwLjQlO1xyXG4gIGxlZnQ6IDY2LjY2JTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMjQsIDFmcik7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNiwgMWZyKTtcclxuICBnYXA6IDFweCAxcHg7XHJcblxyXG4gIG1hcmdpbi1yaWdodDogMTRweDtcclxuYDtcclxuXHJcblxyXG5leHBvcnQgY29uc3QgQmVhZFJvYWRCZ0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA1MCU7XHJcbiAgaGVpZ2h0OiAzMy4yMiU7XHJcblxyXG4gIHRvcDogNjYlO1xyXG4gIGxlZnQ6IDA7XHJcbiAgbWFyZ2luLWxlZnQ6IDE0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMTYsIDFmcik7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNiwgMWZyKTtcclxuICBnYXA6IDFweCAxcHg7XHJcblxyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBCZWFkUm9hZENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAgNTAlO1xyXG4gIGhlaWdodDogMzUuMjIlO1xyXG5cclxuICB0b3A6IDY1JTtcclxuICBsZWZ0OiAwO1xyXG4gIG1hcmdpbi1sZWZ0OiAxNHB4O1xyXG5cclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGxpbmVhcjtcclxuICBjdXJzb3I6IHpvb20taW47XHJcblxyXG4gID4gc3ZnIHtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbmA7XHJcblxyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgU21hbGxSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMzMuMzMlIC0gMTRweCk7XHJcbiAgaGVpZ2h0OiAxNSU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGxpbmVhcjtcclxuICBjdXJzb3I6IHpvb20taW47XHJcblxyXG4gID4gc3ZnIHtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgdG9wOiA1MCU7XHJcbiAgbGVmdDogMzMuMzMlO1xyXG4gIGZsZXg6IG5vbmU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiA3cHg7XHJcblxyXG5gO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBDb2Nrcm9hY2hSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMzMuMzMlIC0gMTRweCk7XHJcbiAgaGVpZ2h0OiAxNSU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGxpbmVhcjtcclxuICBjdXJzb3I6IHpvb20taW47XHJcblxyXG4gID4gc3ZnIHtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgdG9wOiA1MCU7XHJcbiAgbGVmdDogNjYuNjYlO1xyXG4gIGZsZXg6IG5vbmU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG4gIG1hcmdpbi1yaWdodDogMTRweDtcclxuXHJcblxyXG5gO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgUm9hZFByZXZpZXdDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogNSU7XHJcbiAgaGVpZ2h0OiAyMiU7XHJcblxyXG4gIHRvcDogNjAlO1xyXG4gIGxlZnQ6IDMzLjMzJTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuXHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgU3RhdHNDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogNyU7XHJcbiAgaGVpZ2h0OiAyMiU7XHJcblxyXG4gIHRvcDogNjAlO1xyXG4gIGxlZnQ6IDQzLjMzJTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuXHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgU3RhdGlzdGljc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA0OC4zNSU7XHJcbiAgaGVpZ2h0OiAxOC4yJTtcclxuXHJcbiAgdG9wOiA4MSU7XHJcbiAgcmlnaHQ6IDAlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcblxyXG4gIG1hcmdpbi1yaWdodDogMTRweDtcclxuYDtcclxuXHJcblxyXG5leHBvcnQgY29uc3QgUGxheWVySGFuZHNDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogMTUlO1xyXG4gIGhlaWdodDogMTMlO1xyXG5cclxuICB0b3A6IDI0JTtcclxuICBsZWZ0OiAxNiU7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgQmFua2VySGFuZHNDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogMTUlO1xyXG4gIGhlaWdodDogMTMlO1xyXG5cclxuICB0b3A6IDI0JTtcclxuICBsZWZ0OiA3MCU7XHJcblxyXG4gIG1hcmdpbi1yaWdodDogMTRweDtcclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IFBsYXllckhhbmRzSGFuZHNGbGV4ID0gc3R5bGVkLmRpdmBcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjdzIGxpbmVhciAwcztcclxuICAgIHBlcnNwZWN0aXZlOiAxMDAwcHg7XHJcbiAgICBwYWRkaW5nOiAycHggMHB4O1xyXG4gICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgQmFua2VySGFuZHNIYW5kc0ZsZXggPSBzdHlsZWQuZGl2YFxyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4yN3MgbGluZWFyIDBzO1xyXG4gICAgcGVyc3BlY3RpdmU6IDEwMDBweDtcclxuICAgIHBhZGRpbmc6IDJweCAwcHg7XHJcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBSZXN1bHRNZXNzYWdlQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICB0b3A6IDQwJTtcclxuICBmb250LWZhbWlseTogUm9ib3RvICxzYW5zLXNlcmlmO1xyXG4gIGZvbnQtc3R5bGU6bm9ybWFsO1xyXG4gIGZvbnQtc3RyZXRjaDpub3JtYWw7XHJcbiAgbGluZS1oZWlnaHQ6bm9ybWFsO1xyXG4gIGxldHRlci1zcGFjaW5nOm5vcm1hbDtcclxuICBmb250LXNpemU6MTZweCAhaW1wb3J0YW50O1xyXG4gIGZvbnQtd2VpZ2h0OjkwMDtcclxuICB0ZXh0LXNoYWRvdzowIDAgMXB4IHJnYmEoMCwwLDAsMC42KTtcclxuXHJcbiAgY29sb3I6ICR7cGFsZXR0ZS5wcmltYXJ5Q29udHJhc3R9O1xyXG4gIGRpc3BsYXk6ZmxleDtcclxuICBmbGV4LWZsb3c6Y29sdW1uIG5vd3JhcDtcclxuICB3aGl0ZS1zcGFjZTpub3dyYXA7XHJcbiAganVzdGlmeS1jb250ZW50OmNlbnRlcjtcclxuICBhbGlnbi1pdGVtczpjZW50ZXI7XHJcbiAgYm94LXNpemluZzpib3JkZXItYm94O1xyXG4gIHdpZHRoOiBhdXRvO1xyXG4gIHBhZGRpbmctdG9wOjIwcHg7XHJcbiAgcGFkZGluZy1ib3R0b206MjBweDtcclxuICBhbmltYXRpb246ICR7ZmFkZUluQW5pbWF0aW9ufSAke1RSQU5TSVRJT05fVElNRX1zIGxpbmVhcjtcclxuXHJcbiAgbWFyZ2luLWxlZnQ6IDMwJTtcclxuICBtYXJnaW4tcmlnaHQ6IDMwJTtcclxuXHJcblxyXG5cclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IFN0YXR1c0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA0MDBweDtcclxuICB0b3A6IDAlO1xyXG4gIG1hcmdpbjogMCA0MCU7XHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBTdGF0dXNUaXRsZSA9IHN0eWxlZC5kaXZgXHJcbiAgd2lkdGg6IGF1dG87XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB0ZXh0LWFsaWduOiByaWdodDtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtc2l6ZTogNDBweDtcclxuYDtcclxuXHJcblxyXG5cclxuY29uc3QgbWFpbkJldHNMYWJlbCA9IGNzc2BcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1haW5CZXRzTGFiZWxDbGFzc05hbWUgPSBjc3NgXHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbmA7XHJcblxyXG5cclxuY29uc3QgcGxheWVyVHJhbnNwYXJlbnQgPSB0aW55Y29sb3IoUExBWUVSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwKVxyXG4gIC50b1N0cmluZygpO1xyXG5jb25zdCBwbGF5ZXJNZWQgPSB0aW55Y29sb3IoUExBWUVSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwLjY1KVxyXG4gIC50b1N0cmluZygpO1xyXG5jb25zdCBwbGF5ZXJGdWxsID0gdGlueWNvbG9yKFBMQVlFUl9DT0xPUilcclxuICAuc2V0QWxwaGEoMC45KVxyXG4gIC50b1N0cmluZygpO1xyXG5cclxuY29uc3QgYmFua2VyVHJhbnNwYXJlbnQgPSB0aW55Y29sb3IoQkFOS0VSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwKVxyXG4gIC50b1N0cmluZygpO1xyXG5jb25zdCBiYW5rZXJNZWQgPSB0aW55Y29sb3IoQkFOS0VSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwLjY1KVxyXG4gIC50b1N0cmluZygpO1xyXG5jb25zdCBiYW5rZXJGdWxsID0gdGlueWNvbG9yKEJBTktFUl9DT0xPUilcclxuICAuc2V0QWxwaGEoMC45KVxyXG4gIC50b1N0cmluZygpO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBwbGF5ZXJCYWNrZ3JvdW5kID0gY3NzYFxyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMzMlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoXHJcbiAgICAgICAgICB0byBsZWZ0LFxyXG4gICAgICAgICAgJHtwbGF5ZXJUcmFuc3BhcmVudH0sXHJcbiAgICAgICAgICAke3BsYXllck1lZH0gMTYlLFxyXG4gICAgICAgICAgJHtwbGF5ZXJGdWxsfSA1MCUsXHJcbiAgICAgICAgICAke3BsYXllck1lZH0gODQlLFxyXG4gICAgICAgICAgJHtwbGF5ZXJUcmFuc3BhcmVudH1cclxuICApO1xyXG5cclxuICBzcGFuIHtcclxuICAgIG1hcmdpbi10b3A6IDJweDtcclxuICAgIGZvbnQtZmFtaWx5OiBSb2JvdG87XHJcbiAgICBmb250LXNpemU6IDQwcHg7XHJcbiAgICBjb2xvcjogI2ZmYjtcclxuICAgIHBhZGRpbmctbGVmdDogNHB4O1xyXG4gIH1cclxuXHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgYmFua2VyQmFja2dyb3VuZCA9IGNzc2BcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDMzJTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KFxyXG4gICAgICAgICAgdG8gbGVmdCxcclxuICAgICAgICAgICR7YmFua2VyVHJhbnNwYXJlbnR9LFxyXG4gICAgICAgICAgJHtiYW5rZXJNZWR9IDE2JSxcclxuICAgICAgICAgICR7YmFua2VyRnVsbH0gNTAlLFxyXG4gICAgICAgICAgJHtiYW5rZXJNZWR9IDg0JSxcclxuICAgICAgICAgICR7YmFua2VyVHJhbnNwYXJlbnR9XHJcbiAgKTtcclxuXHJcbiAgc3BhbiB7XHJcbiAgICBtYXJnaW4tdG9wOiAycHg7XHJcbiAgICBmb250LWZhbWlseTogUm9ib3RvO1xyXG4gICAgZm9udC1zaXplOiA0MHB4O1xyXG4gICAgY29sb3I6ICNmZmI7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDRweDtcclxuICB9XHJcblxyXG5gOyJdfQ== */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst PlayerHandsContainer = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk6\",\n  label: \"PlayerHandsContainer\"\n})( false ? 0 : {\n  name: \"wjnkjd\",\n  styles: \"position:absolute;width:15%;height:13%;top:24%;left:16%;margin-right:14px\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst BankerHandsContainer = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk5\",\n  label: \"BankerHandsContainer\"\n})( false ? 0 : {\n  name: \"hn7veq\",\n  styles: \"position:absolute;width:15%;height:13%;top:24%;left:70%;margin-right:14px\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst PlayerHandsHandsFlex = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk4\",\n  label: \"PlayerHandsHandsFlex\"\n})( false ? 0 : {\n  name: \"1sy7qdj\",\n  styles: \"height:100%;width:100%;display:flex;align-items:center;justify-content:center;opacity:1;transition:opacity 0.27s linear 0s;perspective:1000px;padding:2px 0px;flex-flow:column nowrap\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst BankerHandsHandsFlex = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk3\",\n  label: \"BankerHandsHandsFlex\"\n})( false ? 0 : {\n  name: \"1sy7qdj\",\n  styles: \"height:100%;width:100%;display:flex;align-items:center;justify-content:center;opacity:1;transition:opacity 0.27s linear 0s;perspective:1000px;padding:2px 0px;flex-flow:column nowrap\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst ResultMessageContainer = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk2\",\n  label: \"ResultMessageContainer\"\n})(\"top:40%;font-family:Roboto,sans-serif;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;font-size:16px!important;font-weight:900;text-shadow:0 0 1px rgba(0,0,0,0.6);color:\", palette.primaryContrast, \";display:flex;flex-flow:column nowrap;white-space:nowrap;justify-content:center;align-items:center;box-sizing:border-box;width:auto;padding-top:20px;padding-bottom:20px;animation:\", fadeInAnimation, \" \", TRANSITION_TIME, \"s linear;margin-left:30%;margin-right:30%;\" + ( false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\nconst StatusContainer = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk1\",\n  label: \"StatusContainer\"\n})( false ? 0 : {\n  name: \"cn5x5v\",\n  styles: \"position:absolute;width:400px;top:0%;margin:0 40%\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst StatusTitle = /*#__PURE__*/(0,_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",  false ? 0 : {\n  target: \"e1tzh8xk0\",\n  label: \"StatusTitle\"\n})( false ? 0 : {\n  name: \"z4e65u\",\n  styles: \"width:auto;margin-bottom:10px;text-align:right;text-transform:uppercase;font-size:40px\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst mainBetsLabel = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)( false ? 0 : {\n  name: \"q0dcrq-mainBetsLabel\",\n  styles: \"text-transform:uppercase;font-weight:bold;label:mainBetsLabel;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst mainBetsLabelClassName = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)( false ? 0 : {\n  name: \"63reti-mainBetsLabelClassName\",\n  styles: \"text-transform:uppercase;font-weight:bold;font-size:16px;label:mainBetsLabelClassName;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst playerTransparent = (0,tinycolor2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(PLAYER_COLOR).setAlpha(0).toString();\nconst playerMed = (0,tinycolor2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(PLAYER_COLOR).setAlpha(0.65).toString();\nconst playerFull = (0,tinycolor2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(PLAYER_COLOR).setAlpha(0.9).toString();\nconst bankerTransparent = (0,tinycolor2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(BANKER_COLOR).setAlpha(0).toString();\nconst bankerMed = (0,tinycolor2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(BANKER_COLOR).setAlpha(0.65).toString();\nconst bankerFull = (0,tinycolor2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(BANKER_COLOR).setAlpha(0.9).toString();\nconst playerBackground = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)(\"width:100%;height:33%;text-align:center;background-image:linear-gradient(\\n          to left,\\n          \", playerTransparent, \",\\n          \", playerMed, \" 16%,\\n          \", playerFull, \" 50%,\\n          \", playerMed, \" 84%,\\n          \", playerTransparent, \"\\n  );span{margin-top:2px;font-family:Roboto;font-size:40px;color:#ffb;padding-left:4px;}\" + ( false ? 0 : \";label:playerBackground;\"),  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHlraGVcXGVsZWN0cm9uYXBwc1xcdHlraGUtZWxlY3Ryb24tYXBwcy1iYWNjYXJhdFxcc3JjXFxyZW5kZXJlclxcYmFjY2FyYXRcXHBsYXllclxcdmlld3NcXEdhbWVCb2FyZFxcc3R5bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa3NCbUMiLCJmaWxlIjoiQzpcXFVzZXJzXFxUeWtoZVxcZWxlY3Ryb25hcHBzXFx0eWtoZS1lbGVjdHJvbi1hcHBzLWJhY2NhcmF0XFxzcmNcXHJlbmRlcmVyXFxiYWNjYXJhdFxccGxheWVyXFx2aWV3c1xcR2FtZUJvYXJkXFxzdHlsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcywga2V5ZnJhbWVzIH0gZnJvbSBcIkBlbW90aW9uL2Nzc1wiO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJAZW1vdGlvbi9zdHlsZWRcIjtcclxuaW1wb3J0IHsgaGV4MnJnYmEgfSBmcm9tIFwiLi4vLi4vLi4vdHlraGUvdXRpbHNcIjtcclxuaW1wb3J0IHRpbnljb2xvciBmcm9tICd0aW55Y29sb3IyJztcclxuXHJcblxyXG5pbXBvcnQgeyB0aGVtZSB9IGZyb20gXCIuLi8uLi8uLi90eWtoZS9ib290c3RyYXBcIjtcclxuZXhwb3J0IGNvbnN0IEhFQURFUl9IRUlHSFQgPSA2MDtcclxuXHJcbmNvbnN0IHsgcGFsZXR0ZSwgdGludHMsIH0gPSB0aGVtZTtcclxuXHJcblxyXG5cclxuaW1wb3J0IGJnSW1hZ2UgZnJvbSAnLi4vLi4vYXNzZXRzL2ltYWdlcy9iZy5wbmcnXHJcbmltcG9ydCBnYW1lTmFtZUltZyBmcm9tICcuLi8uLi9hc3NldHMvaW1hZ2VzL0JhY2NhcmF0TmFtZS5wbmcnXHJcbmltcG9ydCBnb2xkZW5Cb3JkZXJJbWcgZnJvbSAnLi4vLi4vYXNzZXRzL2ltYWdlcy9CaWdTY3JlZW5Cb3JkZXIucG5nJ1xyXG5cclxuaW1wb3J0IEJhbmtlciBmcm9tICcuLi8uLi9hc3NldHMvaW1hZ2VzL0Jhbmtlci5wbmcnO1xyXG5pbXBvcnQgUGxheWVyIGZyb20gJy4uLy4uL2Fzc2V0cy9pbWFnZXMvUGxheWVyLnBuZyc7XHJcblxyXG5pbXBvcnQgeyBVSV9DT05GSUcgfSBmcm9tIFwiLi4vLi4vdWlDb25maWdcIjtcclxuXHJcbmNvbnN0IHtcclxuICBDT0xPUlM6IHsgUExBWUVSX0NPTE9SLCBCQU5LRVJfQ09MT1J9LFxyXG59ID0gVUlfQ09ORklHO1xyXG5cclxuXHJcbmNvbnN0IFRSQU5TSVRJT05fVElNRSA9IDAuMjtcclxuXHJcblxyXG5jb25zdCBwcm9ncmVzc0JhcktleWZyYW1lID0ga2V5ZnJhbWVzYFxyXG4gIGZyb20ge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZVgodmFyKC0tcmVtYWluaW5nKSk7XHJcbiAgfVxyXG4gIHRvIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGVYKDApO1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBwcm9ncmVzc0JhckFuaW1hdGlvbiA9IGNzc2BcclxuICAmOjpiZWZvcmUge1xyXG4gICAgYW5pbWF0aW9uOiAke3Byb2dyZXNzQmFyS2V5ZnJhbWV9IHZhcigtLWR1cmF0aW9uKSBsaW5lYXI7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGZhZGVJbkFuaW1hdGlvbiA9IGtleWZyYW1lc2BcclxuICBmcm9tIHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgfVxyXG4gIHRvIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgcHVsc2VBbmltYXRpb25LZXlmcmFtZSA9IChjb2xvcikgPT4ga2V5ZnJhbWVzYFxyXG4gIHRvIHtcclxuICAgIGZpbGwtb3BhY2l0eTogMC44NTtcclxuICAgIGZpbGw6ICR7Y29sb3J9O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IGdldEFuaW1hdGlvbiA9IChjb2xvcikgPT4gY3NzYFxyXG4gIGFuaW1hdGlvbjogJHtwdWxzZUFuaW1hdGlvbktleWZyYW1lKGNvbG9yKX0gMC4zM3MgYWx0ZXJuYXRlIGluZmluaXRlO1xyXG5gO1xyXG5cclxuY29uc3QgUExBWUVSX0hJR0hMSUdIVF9DT0xPUiA9ICcjNzlDOUZGJztcclxuY29uc3QgQkFOS0VSX0hJR0hMSUdIVF9DT0xPUiA9ICcjRkY0ODUxJztcclxuY29uc3QgVElFX0hJR0hMSUdIVF9DT0xPUiA9ICcjNTVmYjU3JztcclxuY29uc3QgU1VQRVJTSVhfSElHSFRMSUdIVF9DT0xPUiA9ICcjQjZDMkRBJztcclxuY29uc3QgcGxheWVyQW5pbWF0aW9uID0gZ2V0QW5pbWF0aW9uKFBMQVlFUl9ISUdITElHSFRfQ09MT1IpO1xyXG5jb25zdCBiYW5rZXJBbmltYXRpb24gPSBnZXRBbmltYXRpb24oQkFOS0VSX0hJR0hMSUdIVF9DT0xPUik7XHJcbmNvbnN0IHRpZUFuaW1hdGlvbiA9IGdldEFuaW1hdGlvbihUSUVfSElHSExJR0hUX0NPTE9SKTtcclxuY29uc3Qgc3VpdGVkVGllQW5pbWF0aW9uID0gZ2V0QW5pbWF0aW9uKFRJRV9ISUdITElHSFRfQ09MT1IpO1xyXG5jb25zdCBzdXBlclNpeEFuaW1hdGlvbiA9IGdldEFuaW1hdGlvbihTVVBFUlNJWF9ISUdIVExJR0hUX0NPTE9SKTtcclxuXHJcblxyXG5leHBvcnQgY29uc3QgcGxheWVyUHVsc2VDb250YWluZXIgPSBjc3NgXHJcbiAgI2JldC1wbGF5ZXIge1xyXG4gICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICR7cGxheWVyQW5pbWF0aW9ufTtcclxuICAgIH07XHJcbiAgfVxyXG4gICNiZXQtZHJhZ29uLCAjYmV0LWJvd2xlciB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtiYW5rZXJBbmltYXRpb259O1xyXG4gICAgfTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgcGxheWVyUGFpclB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtcGxheWVyLXBhaXIsICNiZXQtbmF0dXJhbC1wbGF5ZXIge1xyXG4gICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICR7cGxheWVyQW5pbWF0aW9ufTtcclxuICAgIH1cclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3Qgc3VwZXJTaXhQdWxzZUNvbnRhaW5lciA9IGNzc2BcclxuICAjYmV0LXN1cGVyLXNpeCB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtzdXBlclNpeEFuaW1hdGlvbn07XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJhbmtlclB1bHNlQ29udGFpbmVyID0gY3NzYFxyXG4gICNiZXQtYmFua2VyIHtcclxuICAgIC5oaWdobGlnaHQge1xyXG4gICAgICAke2JhbmtlckFuaW1hdGlvbn07XHJcbiAgICB9XHJcbiAgfTtcclxuICAjYmV0LXRpZ2VyLCAjYmV0LWJhdHNtYW4ge1xyXG4gICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICR7cGxheWVyQW5pbWF0aW9ufTtcclxuICAgIH1cclxuICB9XHJcbmA7XHJcbmV4cG9ydCBjb25zdCBiYW5rZXJQYWlyUHVsc2VDb250YWluZXIgPSBjc3NgXHJcbiAgI2JldC1iYW5rZXItcGFpciwgI2JldC1uYXR1cmFsLWJhbmtlciB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHtiYW5rZXJBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCB0aWVQdWxzZUNvbnRhaW5lciA9IGNzc2BcclxuICAjYmV0LXRpZSB7XHJcbiAgICAuaGlnaGxpZ2h0IHtcclxuICAgICAgJHt0aWVBbmltYXRpb259O1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBzdWl0ZWRUaWVQdWxzZUNvbnRhaW5lciA9IGNzc2BcclxuICAjYmV0LXN1aXRlZC10aWUge1xyXG4gICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICR7c3VpdGVkVGllQW5pbWF0aW9ufTtcclxuICAgIH1cclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgaW5hY3RpdmVHYW1lQm9hcmQgPSBjc3NgXHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDQzJSk7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgaW5hY3RpdmVHcmlkID0gY3NzYFxyXG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgKiB7XHJcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgIH0gICBcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCB0aWx0ZWRHcmlkID0gY3NzYFxyXG4gIEBtZWRpYSAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjcpIHJvdGF0ZVgoNjBkZWcpO1xyXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogYm90dG9tO1xyXG4gICAgbWF4LXdpZHRoOiA4MDBweDtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgbW9iaWxlR2FtZUJvYXJkID0gY3NzYFxyXG4gIGhlaWdodDogYXV0bztcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xyXG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcblxyXG4gICBbaWRePSdiZXQtJ10ge1xyXG4gICAgJjpob3ZlcixcclxuICAgICY6YWN0aXZlIHtcclxuICAgICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICAgZmlsbC1vcGFjaXR5OiAwLjY1O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIGhlaWdodDogMTAwJTtcclxuICB3aWR0aDogMTAwJTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgb3ZlcmZsb3c6aGlkZGVuO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4ycyBsaW5lYXI7XHJcblxyXG4gICNiZXQtaWNvbiB7XHJcbiAgICBwb2ludGVyLWV2ZW50czogYWxsO1xyXG4gIH1cclxuXHJcbiAgW2lkXj0nYmV0LSddIHtcclxuICAgICYuZGlzYWJsZWQge1xyXG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgIH1cclxuICAgICY6aG92ZXIsXHJcbiAgICAmOmFjdGl2ZSB7XHJcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgLmhpZ2hsaWdodCB7XHJcbiAgICAgICAgZmlsbC1vcGFjaXR5OiAwLjg1O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuYDtcclxuXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IEhlYWRlciA9IHN0eWxlZC5oZWFkZXJgXHJcbiAgaGVpZ2h0OiAke0hFQURFUl9IRUlHSFR9cHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGJhY2tncm91bmQ6ICR7aGV4MnJnYmEocGFsZXR0ZS5wcmltYXJ5LCB0aW50cy5wcmltYXJ5KX07XHJcbiAgY29sb3I6ICR7cGFsZXR0ZS5mb3JlZ3JvdW5kfTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgZm9udC1zaXplOiAzNHB4O1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxuICB0cmFuc2l0aW9uOiBjb2xvciAwLjI3cyBsaW5lYXIsIHRyYW5zZm9ybSAwLjI3cyBsaW5lYXI7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgaGVhZGVyQ2xhc3NOYW1lID0gY3NzYFxyXG4gIC0tcmVtYWluaW5nOiAxO1xyXG4gIC0tZHVyYXRpb246IDEwcztcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgY29sb3I6ICR7cGFsZXR0ZS5wcmltYXJ5Q29udHJhc3R9O1xyXG4gIGZpbGw6ICR7cGFsZXR0ZS5wcmltYXJ5Q29udHJhc3R9O1xyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgZm9udC1zaXplOiAzNHB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICR7aGV4MnJnYmEocGFsZXR0ZS5wcmltYXJ5LCB0aW50cy5wcmltYXJ5KX07XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICY6YmVmb3JlIHtcclxuICAgIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQ7XHJcbiAgICB3aWxsLWNoYW5nZTogdHJhbnNmb3JtO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yKTtcclxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMXMgbGluZWFyLCB0cmFuc2Zvcm0gdmFyKC0tZHVyYXRpb24pIGxpbmVhcjtcclxuICAgIHotaW5kZXg6IC0xO1xyXG4gIH1cclxuYDtcclxuXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IEJhbmtlckltZyA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGhlaWdodDogMTIlO1xyXG4gIHdpZHRoOiAxOCU7XHJcbiAgdG9wOiA1JTtcclxuICBsZWZ0OiA2OCU7XHJcblxyXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgke0Jhbmtlcn0pO1xyXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IHRvcDtcclxuYFxyXG5leHBvcnQgY29uc3QgUGxheWVySW1nID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgaGVpZ2h0OiAxMiU7XHJcbiAgd2lkdGg6IDE0JTtcclxuICB0b3A6IDUlO1xyXG4gIGxlZnQ6IDE2JTtcclxuXHJcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7UGxheWVyfSk7XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xyXG5gXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IENvbnRhaW5lckdvbGRlbkJvcmRlciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIG1hcmdpbi1sZWZ0OiAwcHg7XHJcbiAgbWFyZ2luLXRvcDogMHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBzY2FsZTogMTtcclxuXHJcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7Z29sZGVuQm9yZGVySW1nfSk7XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IHRvcDtcclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IEdhbWVIZWFkZXIgPSBzdHlsZWQuZGl2YFxyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDYxMHB4O1xyXG4gICAgbWFyZ2luLXRvcDogM3B4O1xyXG4gICAgd2lkdGg6IDcwOXB4O1xyXG4gICAgaGVpZ2h0OiAyMDJweDtcclxuICAgIHNjYWxlOiAxO1xyXG5cclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgke2dhbWVOYW1lSW1nfSk7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IHRvcDtcclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IE1haW5Db250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogNzclO1xyXG4gIGhlaWdodDogMzgwcHg7XHJcblxyXG4gIHRvcDogMzUlO1xyXG4gIGxlZnQ6IDEyJTtcclxuXHJcblxyXG4gIGBcclxuZXhwb3J0IGNvbnN0IEJldEdyaWRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcblxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBwZXJzcGVjdGl2ZTogMTAwMHB4O1xyXG5cclxuICBgXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IEJpZ1JvYWRCZ0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAyOHB4KTtcclxuICBoZWlnaHQ6IDI5LjIlO1xyXG4gIHRvcDogMTkuNCU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG5cclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDM2LCAxZnIpO1xyXG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDYsIDFmcik7XHJcbiAgZ2FwOiAxcHggMXB4O1xyXG5cclxuICBtYXJnaW4tbGVmdDogMTRweDtcclxuICBtYXJnaW4tcmlnaHQ6IDE0cHg7XHJcblxyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgQmlnUm9hZENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAyOHB4KTtcclxuICBoZWlnaHQ6IDMwJTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xyXG4gIGN1cnNvcjogem9vbS1pbjtcclxuXHJcbiAgPiBzdmcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuICB0b3A6IDE5JTtcclxuICBmbGV4OiBub25lO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxuXHJcblxyXG4gIG1hcmdpbi1sZWZ0OiAxNHB4O1xyXG4gIG1hcmdpbi1yaWdodDogMTRweDtcclxuXHJcbmA7XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBCaWdFeWVSb2FkQmdDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogY2FsYygzMy4zMyUgLSAxNHB4KTtcclxuICBoZWlnaHQ6IDE0LjIlO1xyXG4gIHRvcDogNTAuNCU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG5cclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDI0LCAxZnIpO1xyXG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDYsIDFmcik7XHJcbiAgZ2FwOiAxcHggMXB4O1xyXG5cclxuICBtYXJnaW4tbGVmdDogMTRweDtcclxuICBcclxuYDtcclxuXHJcblxyXG5leHBvcnQgY29uc3QgQmlnRXllUm9hZENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiBjYWxjKDMzLjMzJSAtIDE0cHgpO1xyXG4gIGhlaWdodDogMTUlO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgZGlzcGxheTogZmxleDtcclxuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBsaW5lYXI7XHJcbiAgY3Vyc29yOiB6b29tLWluO1xyXG5cclxuICA+IHN2ZyB7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9XHJcblxyXG4gIHRvcDogNTAlO1xyXG4gIGZsZXg6IG5vbmU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAxNHB4O1xyXG5cclxuYDtcclxuXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IFNtYWxsUm9hZEJnQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMzMuMzMlIC0gMTRweCk7XHJcbiAgaGVpZ2h0OiAxNC4yJTtcclxuICB0b3A6IDUwLjQlO1xyXG4gIGxlZnQ6IDMzLjMzJTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMjQsIDFmcik7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNiwgMWZyKTtcclxuICBnYXA6IDFweCAxcHg7XHJcblxyXG4gIG1hcmdpbi1sZWZ0OiA3cHg7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgQ29ja3JvYWNoUm9hZEJnQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMzMuMzMlIC0gMTRweCk7XHJcbiAgaGVpZ2h0OiAxNC4yJTtcclxuICB0b3A6IDUwLjQlO1xyXG4gIGxlZnQ6IDY2LjY2JTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMjQsIDFmcik7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNiwgMWZyKTtcclxuICBnYXA6IDFweCAxcHg7XHJcblxyXG4gIG1hcmdpbi1yaWdodDogMTRweDtcclxuYDtcclxuXHJcblxyXG5leHBvcnQgY29uc3QgQmVhZFJvYWRCZ0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA1MCU7XHJcbiAgaGVpZ2h0OiAzMy4yMiU7XHJcblxyXG4gIHRvcDogNjYlO1xyXG4gIGxlZnQ6IDA7XHJcbiAgbWFyZ2luLWxlZnQ6IDE0cHg7XHJcblxyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMTYsIDFmcik7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNiwgMWZyKTtcclxuICBnYXA6IDFweCAxcHg7XHJcblxyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBCZWFkUm9hZENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAgNTAlO1xyXG4gIGhlaWdodDogMzUuMjIlO1xyXG5cclxuICB0b3A6IDY1JTtcclxuICBsZWZ0OiAwO1xyXG4gIG1hcmdpbi1sZWZ0OiAxNHB4O1xyXG5cclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGxpbmVhcjtcclxuICBjdXJzb3I6IHpvb20taW47XHJcblxyXG4gID4gc3ZnIHtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbmA7XHJcblxyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgU21hbGxSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMzMuMzMlIC0gMTRweCk7XHJcbiAgaGVpZ2h0OiAxNSU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGxpbmVhcjtcclxuICBjdXJzb3I6IHpvb20taW47XHJcblxyXG4gID4gc3ZnIHtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgdG9wOiA1MCU7XHJcbiAgbGVmdDogMzMuMzMlO1xyXG4gIGZsZXg6IG5vbmU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiA3cHg7XHJcblxyXG5gO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBDb2Nrcm9hY2hSb2FkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IGNhbGMoMzMuMzMlIC0gMTRweCk7XHJcbiAgaGVpZ2h0OiAxNSU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGxpbmVhcjtcclxuICBjdXJzb3I6IHpvb20taW47XHJcblxyXG4gID4gc3ZnIHtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgdG9wOiA1MCU7XHJcbiAgbGVmdDogNjYuNjYlO1xyXG4gIGZsZXg6IG5vbmU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG4gIG1hcmdpbi1yaWdodDogMTRweDtcclxuXHJcblxyXG5gO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgUm9hZFByZXZpZXdDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogNSU7XHJcbiAgaGVpZ2h0OiAyMiU7XHJcblxyXG4gIHRvcDogNjAlO1xyXG4gIGxlZnQ6IDMzLjMzJTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuXHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgU3RhdHNDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogNyU7XHJcbiAgaGVpZ2h0OiAyMiU7XHJcblxyXG4gIHRvcDogNjAlO1xyXG4gIGxlZnQ6IDQzLjMzJTtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuXHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgU3RhdGlzdGljc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA0OC4zNSU7XHJcbiAgaGVpZ2h0OiAxOC4yJTtcclxuXHJcbiAgdG9wOiA4MSU7XHJcbiAgcmlnaHQ6IDAlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcblxyXG4gIG1hcmdpbi1yaWdodDogMTRweDtcclxuYDtcclxuXHJcblxyXG5leHBvcnQgY29uc3QgUGxheWVySGFuZHNDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogMTUlO1xyXG4gIGhlaWdodDogMTMlO1xyXG5cclxuICB0b3A6IDI0JTtcclxuICBsZWZ0OiAxNiU7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgQmFua2VySGFuZHNDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogMTUlO1xyXG4gIGhlaWdodDogMTMlO1xyXG5cclxuICB0b3A6IDI0JTtcclxuICBsZWZ0OiA3MCU7XHJcblxyXG4gIG1hcmdpbi1yaWdodDogMTRweDtcclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IFBsYXllckhhbmRzSGFuZHNGbGV4ID0gc3R5bGVkLmRpdmBcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjdzIGxpbmVhciAwcztcclxuICAgIHBlcnNwZWN0aXZlOiAxMDAwcHg7XHJcbiAgICBwYWRkaW5nOiAycHggMHB4O1xyXG4gICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgQmFua2VySGFuZHNIYW5kc0ZsZXggPSBzdHlsZWQuZGl2YFxyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4yN3MgbGluZWFyIDBzO1xyXG4gICAgcGVyc3BlY3RpdmU6IDEwMDBweDtcclxuICAgIHBhZGRpbmc6IDJweCAwcHg7XHJcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBSZXN1bHRNZXNzYWdlQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICB0b3A6IDQwJTtcclxuICBmb250LWZhbWlseTogUm9ib3RvICxzYW5zLXNlcmlmO1xyXG4gIGZvbnQtc3R5bGU6bm9ybWFsO1xyXG4gIGZvbnQtc3RyZXRjaDpub3JtYWw7XHJcbiAgbGluZS1oZWlnaHQ6bm9ybWFsO1xyXG4gIGxldHRlci1zcGFjaW5nOm5vcm1hbDtcclxuICBmb250LXNpemU6MTZweCAhaW1wb3J0YW50O1xyXG4gIGZvbnQtd2VpZ2h0OjkwMDtcclxuICB0ZXh0LXNoYWRvdzowIDAgMXB4IHJnYmEoMCwwLDAsMC42KTtcclxuXHJcbiAgY29sb3I6ICR7cGFsZXR0ZS5wcmltYXJ5Q29udHJhc3R9O1xyXG4gIGRpc3BsYXk6ZmxleDtcclxuICBmbGV4LWZsb3c6Y29sdW1uIG5vd3JhcDtcclxuICB3aGl0ZS1zcGFjZTpub3dyYXA7XHJcbiAganVzdGlmeS1jb250ZW50OmNlbnRlcjtcclxuICBhbGlnbi1pdGVtczpjZW50ZXI7XHJcbiAgYm94LXNpemluZzpib3JkZXItYm94O1xyXG4gIHdpZHRoOiBhdXRvO1xyXG4gIHBhZGRpbmctdG9wOjIwcHg7XHJcbiAgcGFkZGluZy1ib3R0b206MjBweDtcclxuICBhbmltYXRpb246ICR7ZmFkZUluQW5pbWF0aW9ufSAke1RSQU5TSVRJT05fVElNRX1zIGxpbmVhcjtcclxuXHJcbiAgbWFyZ2luLWxlZnQ6IDMwJTtcclxuICBtYXJnaW4tcmlnaHQ6IDMwJTtcclxuXHJcblxyXG5cclxuYFxyXG5cclxuZXhwb3J0IGNvbnN0IFN0YXR1c0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA0MDBweDtcclxuICB0b3A6IDAlO1xyXG4gIG1hcmdpbjogMCA0MCU7XHJcbmBcclxuXHJcbmV4cG9ydCBjb25zdCBTdGF0dXNUaXRsZSA9IHN0eWxlZC5kaXZgXHJcbiAgd2lkdGg6IGF1dG87XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB0ZXh0LWFsaWduOiByaWdodDtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtc2l6ZTogNDBweDtcclxuYDtcclxuXHJcblxyXG5cclxuY29uc3QgbWFpbkJldHNMYWJlbCA9IGNzc2BcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1haW5CZXRzTGFiZWxDbGFzc05hbWUgPSBjc3NgXHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbmA7XHJcblxyXG5cclxuY29uc3QgcGxheWVyVHJhbnNwYXJlbnQgPSB0aW55Y29sb3IoUExBWUVSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwKVxyXG4gIC50b1N0cmluZygpO1xyXG5jb25zdCBwbGF5ZXJNZWQgPSB0aW55Y29sb3IoUExBWUVSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwLjY1KVxyXG4gIC50b1N0cmluZygpO1xyXG5jb25zdCBwbGF5ZXJGdWxsID0gdGlueWNvbG9yKFBMQVlFUl9DT0xPUilcclxuICAuc2V0QWxwaGEoMC45KVxyXG4gIC50b1N0cmluZygpO1xyXG5cclxuY29uc3QgYmFua2VyVHJhbnNwYXJlbnQgPSB0aW55Y29sb3IoQkFOS0VSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwKVxyXG4gIC50b1N0cmluZygpO1xyXG5jb25zdCBiYW5rZXJNZWQgPSB0aW55Y29sb3IoQkFOS0VSX0NPTE9SKVxyXG4gIC5zZXRBbHBoYSgwLjY1KVxyXG4gIC50b1N0cmluZygpO1xyXG5jb25zdCBiYW5rZXJGdWxsID0gdGlueWNvbG9yKEJBTktFUl9DT0xPUilcclxuICAuc2V0QWxwaGEoMC45KVxyXG4gIC50b1N0cmluZygpO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBwbGF5ZXJCYWNrZ3JvdW5kID0gY3NzYFxyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMzMlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoXHJcbiAgICAgICAgICB0byBsZWZ0LFxyXG4gICAgICAgICAgJHtwbGF5ZXJUcmFuc3BhcmVudH0sXHJcbiAgICAgICAgICAke3BsYXllck1lZH0gMTYlLFxyXG4gICAgICAgICAgJHtwbGF5ZXJGdWxsfSA1MCUsXHJcbiAgICAgICAgICAke3BsYXllck1lZH0gODQlLFxyXG4gICAgICAgICAgJHtwbGF5ZXJUcmFuc3BhcmVudH1cclxuICApO1xyXG5cclxuICBzcGFuIHtcclxuICAgIG1hcmdpbi10b3A6IDJweDtcclxuICAgIGZvbnQtZmFtaWx5OiBSb2JvdG87XHJcbiAgICBmb250LXNpemU6IDQwcHg7XHJcbiAgICBjb2xvcjogI2ZmYjtcclxuICAgIHBhZGRpbmctbGVmdDogNHB4O1xyXG4gIH1cclxuXHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgYmFua2VyQmFja2dyb3VuZCA9IGNzc2BcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDMzJTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KFxyXG4gICAgICAgICAgdG8gbGVmdCxcclxuICAgICAgICAgICR7YmFua2VyVHJhbnNwYXJlbnR9LFxyXG4gICAgICAgICAgJHtiYW5rZXJNZWR9IDE2JSxcclxuICAgICAgICAgICR7YmFua2VyRnVsbH0gNTAlLFxyXG4gICAgICAgICAgJHtiYW5rZXJNZWR9IDg0JSxcclxuICAgICAgICAgICR7YmFua2VyVHJhbnNwYXJlbnR9XHJcbiAgKTtcclxuXHJcbiAgc3BhbiB7XHJcbiAgICBtYXJnaW4tdG9wOiAycHg7XHJcbiAgICBmb250LWZhbWlseTogUm9ib3RvO1xyXG4gICAgZm9udC1zaXplOiA0MHB4O1xyXG4gICAgY29sb3I6ICNmZmI7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDRweDtcclxuICB9XHJcblxyXG5gOyJdfQ== */\");\nconst bankerBackground = /*#__PURE__*/(0,_emotion_css__WEBPACK_IMPORTED_MODULE_1__.css)(\"width:100%;height:33%;text-align:center;background-image:linear-gradient(\\n          to left,\\n          \", bankerTransparent, \",\\n          \", bankerMed, \" 16%,\\n          \", bankerFull, \" 50%,\\n          \", bankerMed, \" 84%,\\n          \", bankerTransparent, \"\\n  );span{margin-top:2px;font-family:Roboto;font-size:40px;color:#ffb;padding-left:4px;}\" + ( false ? 0 : \";label:bankerBackground;\"),  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/views/GameBoard/style.js?");

/***/ }),

/***/ "./src/renderer/baccarat/tykhe/bootstrap/components/ProgressBar/index.js":
/*!*******************************************************************************!*\
  !*** ./src/renderer/baccarat/tykhe/bootstrap/components/ProgressBar/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _primitives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../primitives */ \"./src/renderer/baccarat/tykhe/primitives/index.js\");\n/* harmony import */ var _constants_es__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../constants/es */ \"./src/renderer/baccarat/tykhe/constants/es/index.js\");\n/* harmony import */ var ramda__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ramda */ \"./node_modules/ramda/es/applySpec.js\");\n/* harmony import */ var humps__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! humps */ \"./node_modules/humps/humps.js\");\n/* harmony import */ var humps__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(humps__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../hooks */ \"./src/renderer/baccarat/tykhe/bootstrap/hooks/index.js\");\n/* harmony import */ var _store_actions_round__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../store/actions/round */ \"./src/renderer/baccarat/tykhe/bootstrap/store/actions/round.js\");\n/* harmony import */ var _store_selectors_ui__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../store/selectors/ui */ \"./src/renderer/baccarat/tykhe/bootstrap/store/selectors/ui.js\");\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/* eslint-disable react/prop-types */\n\n\n\n\n\n\n\n\nconst intlKeys = {\n  disconnected: \"game_status.disconnected\",\n  gameResult: \"game_status.game_result\",\n  lastBets: \"game_status.last_bets\",\n  loading: \"game_status.loading\",\n  noMoreBets: \"game_status.no_more_bets\",\n  waitForNextGame: \"game_status.wait_for_next_game\",\n  waitForNextRound: \"game_status.wait_for_next_round\",\n  placeYourBets: \"game_status.place_your_bets\",\n  reconnecting: \"game_status.reconnecting\",\n  tableClosed: \"game_status.table_closed\",\n  callbets: \"game_status.call_bets\",\n  insurancecalls: \"game_status.insurance\",\n  ROUND_CANCELLED: \"game_status.round_cancelled\"\n};\nconst spec = (0,ramda__WEBPACK_IMPORTED_MODULE_7__[\"default\"])({\n  progressBar: _store_selectors_ui__WEBPACK_IMPORTED_MODULE_6__.progressBarSelector\n});\nfunction ConnectedProgressBar({\n  noProgress,\n  ...props\n}) {\n  const prgrs = (0,_hooks__WEBPACK_IMPORTED_MODULE_4__.useGameProgress)({\n    startStates: [_constants_es__WEBPACK_IMPORTED_MODULE_2__.PLACE_YOUR_BETS, _constants_es__WEBPACK_IMPORTED_MODULE_2__.CALL_BETS, _constants_es__WEBPACK_IMPORTED_MODULE_2__.INSURANCE_CALLS],\n    stopStates: [_constants_es__WEBPACK_IMPORTED_MODULE_2__.NO_MORE_BETS, _constants_es__WEBPACK_IMPORTED_MODULE_2__.CALL_BETS_DECISION, _constants_es__WEBPACK_IMPORTED_MODULE_2__.ROUND_CANCELLED],\n    stateColors: {\n      [_constants_es__WEBPACK_IMPORTED_MODULE_2__.CALL_BETS]: \"#b4de85\",\n      [_constants_es__WEBPACK_IMPORTED_MODULE_2__.CALL_BETS_DECISION]: \"transparent\"\n    }\n  });\n  const [{\n    progressBar\n  }, dispatch] = (0,_hooks__WEBPACK_IMPORTED_MODULE_4__.useAppState)(spec);\n  const locales = (0,_hooks__WEBPACK_IMPORTED_MODULE_4__.useIntl)({\n    keys: intlKeys\n  });\n  const {\n    areBetsOpen,\n    timeLeft,\n    state\n  } = prgrs;\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const updateToLastBets = areBetsOpen && state !== _constants_es__WEBPACK_IMPORTED_MODULE_2__.LAST_BETS && timeLeft <= 5 && timeLeft > 0;\n    if (updateToLastBets) {\n      dispatch(_store_actions_round__WEBPACK_IMPORTED_MODULE_5__[\"default\"].round.set({\n        roundStatus: _constants_es__WEBPACK_IMPORTED_MODULE_2__.LAST_BETS\n      }));\n    }\n  }, [state, timeLeft, areBetsOpen, dispatch]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_primitives__WEBPACK_IMPORTED_MODULE_1__.ProgressBar, _extends({}, prgrs, noProgress || prgrs.totalTime <= 0 ? {\n    progress: -1\n  } : {}, progressBar, {\n    label: progressBar.label || locales[(0,humps__WEBPACK_IMPORTED_MODULE_3__.camelize)((prgrs.state || \"\").toLowerCase())]\n  }, props));\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(ConnectedProgressBar));\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/tykhe/bootstrap/components/ProgressBar/index.js?");

/***/ }),

/***/ "./src/renderer/baccarat/player/assets/images/BaccaratName.png":
/*!*********************************************************************!*\
  !*** ./src/renderer/baccarat/player/assets/images/BaccaratName.png ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/BaccaratName.png\");\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/assets/images/BaccaratName.png?");

/***/ }),

/***/ "./src/renderer/baccarat/player/assets/images/Banker.png":
/*!***************************************************************!*\
  !*** ./src/renderer/baccarat/player/assets/images/Banker.png ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/Banker.png\");\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/assets/images/Banker.png?");

/***/ }),

/***/ "./src/renderer/baccarat/player/assets/images/BigScreenBorder.png":
/*!************************************************************************!*\
  !*** ./src/renderer/baccarat/player/assets/images/BigScreenBorder.png ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/BigScreenBorder.png\");\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/assets/images/BigScreenBorder.png?");

/***/ }),

/***/ "./src/renderer/baccarat/player/assets/images/Player.png":
/*!***************************************************************!*\
  !*** ./src/renderer/baccarat/player/assets/images/Player.png ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/Player.png\");\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/assets/images/Player.png?");

/***/ }),

/***/ "./src/renderer/baccarat/player/assets/images/bg.png":
/*!***********************************************************!*\
  !*** ./src/renderer/baccarat/player/assets/images/bg.png ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"assets/images/bg.png\");\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/assets/images/bg.png?");

/***/ }),

/***/ "./src/renderer/baccarat/player/assets/icons/arrow-up.svg":
/*!****************************************************************!*\
  !*** ./src/renderer/baccarat/player/assets/icons/arrow-up.svg ***!
  \****************************************************************/
/***/ ((module) => {

eval("module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M4.42 16.26a1.44 1.44 0 0 1 0-2l6.42-6.46a1.64 1.64 0 0 1 2.32 0l6.42 6.43a1.44 1.44 0 0 1 0 2 1.44 1.44 0 0 1-2 0L12 10.67l-5.55 5.59a1.44 1.44 0 0 1-2.03 0z\\\"></path></svg>\"\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/assets/icons/arrow-up.svg?");

/***/ }),

/***/ "./src/renderer/baccarat/player/assets/icons/banker_pair.svg":
/*!*******************************************************************!*\
  !*** ./src/renderer/baccarat/player/assets/icons/banker_pair.svg ***!
  \*******************************************************************/
/***/ ((module) => {

eval("module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\"><circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"6.5\\\" style=\\\"fill:#a6a9ac\\\"></circle><circle cx=\\\"6.87\\\" cy=\\\"8\\\" r=\\\"2.5\\\"></circle><path d=\\\"M6.87,11.11A3.11,3.11,0,1,1,10,8,3.11,3.11,0,0,1,6.87,11.11Zm0-5A1.89,1.89,0,1,0,8.77,8,1.89,1.89,0,0,0,6.87,6.11Z\\\" style=\\\"fill:#fff\\\"></path></svg>\"\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/assets/icons/banker_pair.svg?");

/***/ }),

/***/ "./src/renderer/baccarat/player/assets/icons/circle.svg":
/*!**************************************************************!*\
  !*** ./src/renderer/baccarat/player/assets/icons/circle.svg ***!
  \**************************************************************/
/***/ ((module) => {

eval("module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\"><circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"8\\\"></circle></svg>\"\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/assets/icons/circle.svg?");

/***/ }),

/***/ "./src/renderer/baccarat/player/assets/icons/player_pair.svg":
/*!*******************************************************************!*\
  !*** ./src/renderer/baccarat/player/assets/icons/player_pair.svg ***!
  \*******************************************************************/
/***/ ((module) => {

eval("module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\"><circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"6.5\\\" style=\\\"fill:#a6a9ac\\\"></circle><circle cx=\\\"17.13\\\" cy=\\\"16\\\" r=\\\"2.5\\\"></circle><path d=\\\"M17.13,19.11A3.11,3.11,0,1,1,20.23,16,3.11,3.11,0,0,1,17.13,19.11Zm0-5A1.89,1.89,0,1,0,19,16,1.89,1.89,0,0,0,17.13,14.11Z\\\" style=\\\"fill:#fff\\\"></path></svg>\"\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/assets/icons/player_pair.svg?");

/***/ }),

/***/ "./src/renderer/baccarat/player/assets/icons/racetrack.svg":
/*!*****************************************************************!*\
  !*** ./src/renderer/baccarat/player/assets/icons/racetrack.svg ***!
  \*****************************************************************/
/***/ ((module) => {

eval("module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M20 12.38a4 4 0 0 1-.68 1.88l1.92.69a5.71 5.71 0 0 0 .76-2.57zM16 16h-.87v2H16a6.12 6.12 0 0 0 1.14-.11v-2.06A3.93 3.93 0 0 1 16 16z\\\"></path><path d=\\\"M12.38 16h2v2h-2zM8 16a3.93 3.93 0 0 1-1.14-.17v2.06A6.12 6.12 0 0 0 8 18h.87v-2zM4 12.38H2A5.79 5.79 0 0 0 2.78 15l1.92-.7a4 4 0 0 1-.7-1.92zM3.21 8.4l2 .73a4.49 4.49 0 0 1 .9-.65V6.31a5.88 5.88 0 0 0-2.9 2.09zM9.62 6h2v2h-2zM16 6h-.87v2H16a3.93 3.93 0 0 1 1.14.17V6.11A6.12 6.12 0 0 0 16 6z\\\"></path><path d=\\\"M12.38 6h2v2h-2zM8 6a6.12 6.12 0 0 0-1.14.11v2.06A3.93 3.93 0 0 1 8 8h.87V6zM2.78 9A5.79 5.79 0 0 0 2 11.62h2a4 4 0 0 1 .7-1.88zM5.21 14.87l-2 .73a5.88 5.88 0 0 0 2.9 2.09v-2.17a4.49 4.49 0 0 1-.9-.65zM9.62 16h2v2h-2z\\\"></path><path d=\\\"M18.79 14.87a4.49 4.49 0 0 1-.9.65v2.17a5.88 5.88 0 0 0 2.9-2.09zM21.22 9l-1.92.7a4 4 0 0 1 .7 1.92h2A5.79 5.79 0 0 0 21.22 9z\\\" opacity=\\\".5\\\"></path><path d=\\\"M17.89 6.31v2.17a4.49 4.49 0 0 1 .9.65l2-.73a5.88 5.88 0 0 0-2.9-2.09z\\\"></path></svg>\"\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/assets/icons/racetrack.svg?");

/***/ }),

/***/ "./src/renderer/baccarat/player/assets/icons/ring.svg":
/*!************************************************************!*\
  !*** ./src/renderer/baccarat/player/assets/icons/ring.svg ***!
  \************************************************************/
/***/ ((module) => {

eval("module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M12,19.71A7.71,7.71,0,1,1,19.71,12,7.72,7.72,0,0,1,12,19.71Zm0-13A5.29,5.29,0,1,0,17.29,12,5.29,5.29,0,0,0,12,6.71Z\\\"></path></svg>\"\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/assets/icons/ring.svg?");

/***/ }),

/***/ "./src/renderer/baccarat/player/assets/icons/slash.svg":
/*!*************************************************************!*\
  !*** ./src/renderer/baccarat/player/assets/icons/slash.svg ***!
  \*************************************************************/
/***/ ((module) => {

eval("module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\"><rect x=\\\"3.51\\\" y=\\\"10.79\\\" width=\\\"16.97\\\" height=\\\"2.42\\\" transform=\\\"translate(-4.97 12) rotate(-45)\\\"></rect></svg>\"\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/assets/icons/slash.svg?");

/***/ }),

/***/ "./src/renderer/baccarat/player/assets/icons/statistics.svg":
/*!******************************************************************!*\
  !*** ./src/renderer/baccarat/player/assets/icons/statistics.svg ***!
  \******************************************************************/
/***/ ((module) => {

eval("module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M20.29 11.82a1.78 1.78 0 0 0-1.33-.6H14A1.26 1.26 0 0 1 12.78 10V5a1.78 1.78 0 0 0-.6-1.33 1.73 1.73 0 0 0-1.37-.41 8.76 8.76 0 0 0-.52 17.25 9.43 9.43 0 0 0 1.75.17 8.68 8.68 0 0 0 5.07-1.63 8.78 8.78 0 0 0 3.59-5.85 1.73 1.73 0 0 0-.41-1.38zm-4.05 6.05a7.28 7.28 0 0 1-5.67 1.2A7.25 7.25 0 0 1 11 4.79a.26.26 0 0 1 .14.06.27.27 0 0 1 .09.2V10A2.76 2.76 0 0 0 14 12.72h5a.27.27 0 0 1 .2.09.22.22 0 0 1 .05.18 7.23 7.23 0 0 1-3.01 4.88z\\\"></path><path d=\\\"M14.88 10.38h4a1.38 1.38 0 0 0 1.22-.53 1 1 0 0 0 .11-.94 8.73 8.73 0 0 0-5.15-5.15 1.09 1.09 0 0 0-1 .13 1.07 1.07 0 0 0-.46.89v4.35a1.27 1.27 0 0 0 .4.87 1.28 1.28 0 0 0 .88.38zm.25-5a7.2 7.2 0 0 1 3.46 3.47h-3.46z\\\"></path></svg>\"\n\n//# sourceURL=webpack://tykhe-electron-apps-baccarat/./src/renderer/baccarat/player/assets/icons/statistics.svg?");

/***/ })

}]);